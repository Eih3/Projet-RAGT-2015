ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_IntClock.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_IntClock_Start,"ax",%progbits
  19              		.align	1
  20              		.global	UART_IntClock_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_IntClock_Start, %function
  24              	UART_IntClock_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART_IntClock.c"
   1:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_IntClock.c **** * File Name: UART_IntClock.c
   3:.\Generated_Source\PSoC5/UART_IntClock.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/UART_IntClock.c **** *
   5:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Description:
   6:.\Generated_Source\PSoC5/UART_IntClock.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/UART_IntClock.c **** *
   8:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Note:
   9:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  10:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_IntClock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_IntClock.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/UART_IntClock.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/UART_IntClock.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  17:.\Generated_Source\PSoC5/UART_IntClock.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/UART_IntClock.c **** #include "UART_IntClock.h"
  19:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  20:.\Generated_Source\PSoC5/UART_IntClock.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/UART_IntClock.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/UART_IntClock.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/UART_IntClock.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/UART_IntClock.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/UART_IntClock.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  27:.\Generated_Source\PSoC5/UART_IntClock.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  29:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  30:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_Start
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 2


  32:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  34:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
  35:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/UART_IntClock.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  38:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
  39:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
  40:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  41:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
  42:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
  43:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  44:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_Start(void) 
  46:.\Generated_Source\PSoC5/UART_IntClock.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/UART_IntClock.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/UART_IntClock.c ****     UART_IntClock_CLKEN |= UART_IntClock_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 044B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F00102 		orr	r2, r2, #1
  36 0008 1A70     		strb	r2, [r3]
  49:.\Generated_Source\PSoC5/UART_IntClock.c **** 	UART_IntClock_CLKSTBY |= UART_IntClock_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
  39 000c 42F00102 		orr	r2, r2, #1
  40 0010 1A74     		strb	r2, [r3, #16]
  41 0012 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0014 A2430040 		.word	1073759138
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	UART_IntClock_Start, .-UART_IntClock_Start
  49              		.section	.text.UART_IntClock_Stop,"ax",%progbits
  50              		.align	1
  51              		.global	UART_IntClock_Stop
  52              		.thumb
  53              		.thumb_func
  54              		.type	UART_IntClock_Stop, %function
  55              	UART_IntClock_Stop:
  56              	.LFB1:
  50:.\Generated_Source\PSoC5/UART_IntClock.c **** }
  51:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  52:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  53:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_Stop
  55:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  57:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
  58:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Stops the clock and returns immediately. This API does not require the
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 3


  59:.\Generated_Source\PSoC5/UART_IntClock.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/UART_IntClock.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/UART_IntClock.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/UART_IntClock.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  64:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
  65:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
  66:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  67:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
  68:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
  69:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  70:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_Stop(void) 
  72:.\Generated_Source\PSoC5/UART_IntClock.c **** {
  57              		.loc 1 72 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/UART_IntClock.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/UART_IntClock.c ****     UART_IntClock_CLKEN &= (uint8)(~UART_IntClock_CLKEN_MASK);
  62              		.loc 1 74 0
  63 0000 044B     		ldr	r3, .L5
  64 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  65 0004 02F0FE02 		and	r2, r2, #254
  66 0008 1A70     		strb	r2, [r3]
  75:.\Generated_Source\PSoC5/UART_IntClock.c **** 	UART_IntClock_CLKSTBY &= (uint8)(~UART_IntClock_CLKSTBY_MASK);
  67              		.loc 1 75 0
  68 000a 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
  69 000c 02F0FE02 		and	r2, r2, #254
  70 0010 1A74     		strb	r2, [r3, #16]
  71 0012 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 0014 A2430040 		.word	1073759138
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	UART_IntClock_Stop, .-UART_IntClock_Stop
  79              		.section	.text.UART_IntClock_StopBlock,"ax",%progbits
  80              		.align	1
  81              		.global	UART_IntClock_StopBlock
  82              		.thumb
  83              		.thumb_func
  84              		.type	UART_IntClock_StopBlock, %function
  85              	UART_IntClock_StopBlock:
  86              	.LFB2:
  76:.\Generated_Source\PSoC5/UART_IntClock.c **** }
  77:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  78:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  79:.\Generated_Source\PSoC5/UART_IntClock.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  81:.\Generated_Source\PSoC5/UART_IntClock.c **** 
  82:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_StopBlock
  84:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/UART_IntClock.c **** *
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 4


  86:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
  87:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/UART_IntClock.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/UART_IntClock.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/UART_IntClock.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  93:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
  94:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
  95:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  96:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
  97:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
  98:.\Generated_Source\PSoC5/UART_IntClock.c **** *
  99:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_StopBlock(void) 
 101:.\Generated_Source\PSoC5/UART_IntClock.c **** {
  87              		.loc 1 101 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
 102:.\Generated_Source\PSoC5/UART_IntClock.c ****     if ((UART_IntClock_CLKEN & UART_IntClock_CLKEN_MASK) != 0u)
  95              		.loc 1 102 0
  96 0002 1649     		ldr	r1, .L15
  97 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  98 0006 D807     		lsls	r0, r3, #31
  99 0008 26D5     		bpl	.L7
 100              	.LBB10:
 103:.\Generated_Source\PSoC5/UART_IntClock.c ****     {
 104:.\Generated_Source\PSoC5/UART_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/UART_IntClock.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 107:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 109:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/UART_IntClock.c **** #if defined(UART_IntClock__CFG3)
 111:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_AMASK = UART_IntClock_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/UART_IntClock.c **** #else
 114:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_DMASK = UART_IntClock_CLKEN_MASK;
 101              		.loc 1 114 0
 102 000a 1548     		ldr	r0, .L15+4
 107:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_LD = 0u;
 103              		.loc 1 107 0
 104 000c 154B     		ldr	r3, .L15+8
 105 000e 0022     		movs	r2, #0
 106              		.loc 1 114 0
 107 0010 0124     		movs	r4, #1
 107:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_LD = 0u;
 108              		.loc 1 107 0
 109 0012 1A70     		strb	r2, [r3]
 110              		.loc 1 114 0
 111 0014 0470     		strb	r4, [r0]
 115:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_AMASK = 0x00u;
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 5


 112              		.loc 1 115 0
 113 0016 0271     		strb	r2, [r0, #4]
 116:.\Generated_Source\PSoC5/UART_IntClock.c **** #endif /* UART_IntClock__CFG3 */
 117:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 118:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 114              		.loc 1 119 0
 115 0018 134A     		ldr	r2, .L15+12
 116 001a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 120:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 121:.\Generated_Source\PSoC5/UART_IntClock.c ****         oldDivider = CY_GET_REG16(UART_IntClock_DIV_PTR);
 117              		.loc 1 121 0
 118 001c 7832     		adds	r2, r2, #120
 119:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 119              		.loc 1 119 0
 120 001e 00F07F00 		and	r0, r0, #127
 121 0022 02F8780C 		strb	r0, [r2, #-120]
 122              		.loc 1 121 0
 123 0026 1288     		ldrh	r2, [r2]
 122:.\Generated_Source\PSoC5/UART_IntClock.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 124              		.loc 1 122 0
 125 0028 1048     		ldr	r0, .L15+16
 121:.\Generated_Source\PSoC5/UART_IntClock.c ****         oldDivider = CY_GET_REG16(UART_IntClock_DIV_PTR);
 126              		.loc 1 121 0
 127 002a 92B2     		uxth	r2, r2
 128              	.LVL0:
 129              		.loc 1 122 0
 130 002c 0280     		strh	r2, [r0]	@ movhi
 123:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 131              		.loc 1 123 0
 132 002e 0720     		movs	r0, #7
 133 0030 1870     		strb	r0, [r3]
 134              	.L10:
 124:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 125:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/UART_IntClock.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 135              		.loc 1 126 0 discriminator 1
 136 0032 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 137 0034 10F00100 		ands	r0, r0, #1
 138 0038 FBD1     		bne	.L10
 127:.\Generated_Source\PSoC5/UART_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 129:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_CLKEN &= (uint8)(~UART_IntClock_CLKEN_MASK);
 139              		.loc 1 130 0
 140 003a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 141 003c 03F0FE03 		and	r3, r3, #254
 142 0040 0B70     		strb	r3, [r1]
 131:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_CLKSTBY &= (uint8)(~UART_IntClock_CLKSTBY_MASK);
 143              		.loc 1 131 0
 144 0042 0B4B     		ldr	r3, .L15+20
 145 0044 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 146 0046 01F0FE01 		and	r1, r1, #254
 147 004a 1970     		strb	r1, [r3]
 132:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 133:.\Generated_Source\PSoC5/UART_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* Clear the disable bit */
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 6


 135:.\Generated_Source\PSoC5/UART_IntClock.c ****         CLK_DIST_LD = 0x00u;
 148              		.loc 1 135 0
 149 004c 6FF46C71 		mvn	r1, #944
 150 0050 0B44     		add	r3, r3, r1
 151 0052 1870     		strb	r0, [r3]
 136:.\Generated_Source\PSoC5/UART_IntClock.c ****         CY_SET_REG16(UART_IntClock_DIV_PTR, oldDivider);
 152              		.loc 1 136 0
 153 0054 A3F87F20 		strh	r2, [r3, #127]	@ movhi
 154              	.LVL1:
 155              	.L7:
 156 0058 10BD     		pop	{r4, pc}
 157              	.L16:
 158 005a 00BF     		.align	2
 159              	.L15:
 160 005c A2430040 		.word	1073759138
 161 0060 10400040 		.word	1073758224
 162 0064 01400040 		.word	1073758209
 163 0068 08400040 		.word	1073758216
 164 006c 02400040 		.word	1073758210
 165 0070 B2430040 		.word	1073759154
 166              	.LBE10:
 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	UART_IntClock_StopBlock, .-UART_IntClock_StopBlock
 170              		.section	.text.UART_IntClock_StandbyPower,"ax",%progbits
 171              		.align	1
 172              		.global	UART_IntClock_StandbyPower
 173              		.thumb
 174              		.thumb_func
 175              		.type	UART_IntClock_StandbyPower, %function
 176              	UART_IntClock_StandbyPower:
 177              	.LFB3:
 137:.\Generated_Source\PSoC5/UART_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/UART_IntClock.c ****     }
 139:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 140:.\Generated_Source\PSoC5/UART_IntClock.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 142:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 143:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_StandbyPower
 145:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 147:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 148:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 150:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 151:.\Generated_Source\PSoC5/UART_IntClock.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 153:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 154:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 155:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 156:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 178              		.loc 1 158 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 7


 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL2:
 184 0000 044B     		ldr	r3, .L21
 159:.\Generated_Source\PSoC5/UART_IntClock.c ****     if(state == 0u)
 160:.\Generated_Source\PSoC5/UART_IntClock.c ****     {
 161:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_CLKSTBY &= (uint8)(~UART_IntClock_CLKSTBY_MASK);
 185              		.loc 1 161 0
 186 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 159:.\Generated_Source\PSoC5/UART_IntClock.c ****     if(state == 0u)
 187              		.loc 1 159 0
 188 0004 10B9     		cbnz	r0, .L18
 189              		.loc 1 161 0
 190 0006 02F0FE02 		and	r2, r2, #254
 191 000a 01E0     		b	.L20
 192              	.L18:
 162:.\Generated_Source\PSoC5/UART_IntClock.c ****     }
 163:.\Generated_Source\PSoC5/UART_IntClock.c ****     else
 164:.\Generated_Source\PSoC5/UART_IntClock.c ****     {
 165:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_CLKSTBY |= UART_IntClock_CLKSTBY_MASK;
 193              		.loc 1 165 0
 194 000c 42F00102 		orr	r2, r2, #1
 195              	.L20:
 196 0010 1A70     		strb	r2, [r3]
 197 0012 7047     		bx	lr
 198              	.L22:
 199              		.align	2
 200              	.L21:
 201 0014 B2430040 		.word	1073759154
 202              		.cfi_endproc
 203              	.LFE3:
 204              		.size	UART_IntClock_StandbyPower, .-UART_IntClock_StandbyPower
 205              		.section	.text.UART_IntClock_SetDividerRegister,"ax",%progbits
 206              		.align	1
 207              		.global	UART_IntClock_SetDividerRegister
 208              		.thumb
 209              		.thumb_func
 210              		.type	UART_IntClock_SetDividerRegister, %function
 211              	UART_IntClock_SetDividerRegister:
 212              	.LFB4:
 166:.\Generated_Source\PSoC5/UART_IntClock.c ****     }
 167:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 168:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 169:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 170:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_SetDividerRegister
 172:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 174:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 175:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/UART_IntClock.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/UART_IntClock.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/UART_IntClock.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 180:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 181:.\Generated_Source\PSoC5/UART_IntClock.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/UART_IntClock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 8


 183:.\Generated_Source\PSoC5/UART_IntClock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/UART_IntClock.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/UART_IntClock.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/UART_IntClock.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/UART_IntClock.c **** *   cycle.
 188:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 189:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 190:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 191:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 192:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/UART_IntClock.c ****                                 
 195:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 213              		.loc 1 195 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              	.LVL3:
 218 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 219              		.cfi_def_cfa_offset 20
 220              		.cfi_offset 4, -20
 221              		.cfi_offset 5, -16
 222              		.cfi_offset 6, -12
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225              	.LBB11:
 226              	.LBB12:
 196:.\Generated_Source\PSoC5/UART_IntClock.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 198:.\Generated_Source\PSoC5/UART_IntClock.c ****     uint8 currSrc = UART_IntClock_GetSourceRegister();
 199:.\Generated_Source\PSoC5/UART_IntClock.c ****     uint16 oldDivider = UART_IntClock_GetDividerRegister();
 200:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 201:.\Generated_Source\PSoC5/UART_IntClock.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/UART_IntClock.c ****     {
 203:.\Generated_Source\PSoC5/UART_IntClock.c ****         enabled = UART_IntClock_CLKEN & UART_IntClock_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 205:.\Generated_Source\PSoC5/UART_IntClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/UART_IntClock.c ****         {
 207:.\Generated_Source\PSoC5/UART_IntClock.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/UART_IntClock.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/UART_IntClock.c ****             {
 210:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(UART_IntClock_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/UART_IntClock.c ****                 UART_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/UART_IntClock.c ****             }
 216:.\Generated_Source\PSoC5/UART_IntClock.c ****             else
 217:.\Generated_Source\PSoC5/UART_IntClock.c ****             {
 218:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/UART_IntClock.c ****                 UART_IntClock_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(UART_IntClock_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/UART_IntClock.c ****             }
 223:.\Generated_Source\PSoC5/UART_IntClock.c ****         }
 224:.\Generated_Source\PSoC5/UART_IntClock.c ****         else
 225:.\Generated_Source\PSoC5/UART_IntClock.c ****         {
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 9


 226:.\Generated_Source\PSoC5/UART_IntClock.c **** 			
 227:.\Generated_Source\PSoC5/UART_IntClock.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/UART_IntClock.c ****             {
 229:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 231:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/UART_IntClock.c **** #if defined(UART_IntClock__CFG3)
 233:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_AMASK = UART_IntClock_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/UART_IntClock.c **** #else
 236:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_DMASK = UART_IntClock_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/UART_IntClock.c **** #endif /* UART_IntClock__CFG3 */
 239:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 242:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/UART_IntClock.c ****                 if (((UART_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/UART_IntClock.c ****                 {
 245:.\Generated_Source\PSoC5/UART_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/UART_IntClock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/UART_IntClock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 249:.\Generated_Source\PSoC5/UART_IntClock.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/UART_IntClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/UART_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 253:.\Generated_Source\PSoC5/UART_IntClock.c ****                     UART_IntClock_CLKEN &= (uint8)(~UART_IntClock_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 255:.\Generated_Source\PSoC5/UART_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/UART_IntClock.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/UART_IntClock.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/UART_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/UART_IntClock.c ****                 }
 260:.\Generated_Source\PSoC5/UART_IntClock.c ****             }
 261:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 262:.\Generated_Source\PSoC5/UART_IntClock.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/UART_IntClock.c ****             if ((UART_IntClock_CLKEN & UART_IntClock_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/UART_IntClock.c ****             {
 265:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 268:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/UART_IntClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/UART_IntClock.c ****             }
 271:.\Generated_Source\PSoC5/UART_IntClock.c ****             else
 272:.\Generated_Source\PSoC5/UART_IntClock.c ****             {
 273:.\Generated_Source\PSoC5/UART_IntClock.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(UART_IntClock_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/UART_IntClock.c **** 				UART_IntClock_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/UART_IntClock.c ****             }
 277:.\Generated_Source\PSoC5/UART_IntClock.c ****         }
 278:.\Generated_Source\PSoC5/UART_IntClock.c ****     }
 279:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 280:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 281:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 282:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 10


 283:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_GetDividerRegister
 284:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 286:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 287:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 289:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 290:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 291:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 292:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 293:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/UART_IntClock.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 296:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/UART_IntClock.c **** uint16 UART_IntClock_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 299:.\Generated_Source\PSoC5/UART_IntClock.c ****     return CY_GET_REG16(UART_IntClock_DIV_PTR);
 300:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 301:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 302:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 303:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_SetModeRegister
 305:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 307:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 308:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/UART_IntClock.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/UART_IntClock.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/UART_IntClock.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 313:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 314:.\Generated_Source\PSoC5/UART_IntClock.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/UART_IntClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 value.
 319:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/UART_IntClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/UART_IntClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 328:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 329:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 330:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 331:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 334:.\Generated_Source\PSoC5/UART_IntClock.c ****     UART_IntClock_MOD_SRC |= modeBitMask & (uint8)UART_IntClock_MODE_MASK;
 335:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 336:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 337:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 338:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_ClearModeRegister
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 11


 340:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 342:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 343:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/UART_IntClock.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/UART_IntClock.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/UART_IntClock.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 348:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 349:.\Generated_Source\PSoC5/UART_IntClock.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/UART_IntClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 value.
 354:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/UART_IntClock.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/UART_IntClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/UART_IntClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 363:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 364:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 365:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 366:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 369:.\Generated_Source\PSoC5/UART_IntClock.c ****     UART_IntClock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(UART_IntClock_MODE_MASK));
 370:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 371:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 372:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 373:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_GetModeRegister
 375:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 377:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 378:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 380:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 381:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 382:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 383:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 384:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/UART_IntClock.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 387:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/UART_IntClock.c **** uint8 UART_IntClock_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 390:.\Generated_Source\PSoC5/UART_IntClock.c ****     return UART_IntClock_MOD_SRC & (uint8)(UART_IntClock_MODE_MASK);
 391:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 392:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 393:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 394:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_SetSourceRegister
 396:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 12


 397:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 398:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 399:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/UART_IntClock.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 402:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 403:.\Generated_Source\PSoC5/UART_IntClock.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/UART_IntClock.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/UART_IntClock.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/UART_IntClock.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 415:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 416:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 417:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 418:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/UART_IntClock.c **** void UART_IntClock_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 421:.\Generated_Source\PSoC5/UART_IntClock.c ****     uint16 currDiv = UART_IntClock_GetDividerRegister();
 422:.\Generated_Source\PSoC5/UART_IntClock.c ****     uint8 oldSrc = UART_IntClock_GetSourceRegister();
 423:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 424:.\Generated_Source\PSoC5/UART_IntClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/UART_IntClock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/UART_IntClock.c ****     {
 427:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC =
 431:.\Generated_Source\PSoC5/UART_IntClock.c ****             (UART_IntClock_MOD_SRC & (uint8)(~UART_IntClock_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/UART_IntClock.c ****     }
 433:.\Generated_Source\PSoC5/UART_IntClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/UART_IntClock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/UART_IntClock.c ****     {
 436:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/UART_IntClock.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC =
 439:.\Generated_Source\PSoC5/UART_IntClock.c ****             (UART_IntClock_MOD_SRC & (uint8)(~UART_IntClock_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/UART_IntClock.c ****     }
 442:.\Generated_Source\PSoC5/UART_IntClock.c ****     else
 443:.\Generated_Source\PSoC5/UART_IntClock.c ****     {
 444:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC =
 445:.\Generated_Source\PSoC5/UART_IntClock.c ****             (UART_IntClock_MOD_SRC & (uint8)(~UART_IntClock_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/UART_IntClock.c ****     }
 447:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 448:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 449:.\Generated_Source\PSoC5/UART_IntClock.c **** 
 450:.\Generated_Source\PSoC5/UART_IntClock.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/UART_IntClock.c **** * Function Name: UART_IntClock_GetSourceRegister
 452:.\Generated_Source\PSoC5/UART_IntClock.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/UART_IntClock.c **** *
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 13


 454:.\Generated_Source\PSoC5/UART_IntClock.c **** * Summary:
 455:.\Generated_Source\PSoC5/UART_IntClock.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 457:.\Generated_Source\PSoC5/UART_IntClock.c **** * Parameters:
 458:.\Generated_Source\PSoC5/UART_IntClock.c **** *  None
 459:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 460:.\Generated_Source\PSoC5/UART_IntClock.c **** * Returns:
 461:.\Generated_Source\PSoC5/UART_IntClock.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/UART_IntClock.c **** *
 463:.\Generated_Source\PSoC5/UART_IntClock.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/UART_IntClock.c **** uint8 UART_IntClock_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 466:.\Generated_Source\PSoC5/UART_IntClock.c ****     return UART_IntClock_MOD_SRC & UART_IntClock_SRC_SEL_MSK;
 227              		.loc 1 466 0
 228 0002 2B4B     		ldr	r3, .L46
 229              	.LBE12:
 230              	.LBE11:
 231              	.LBB15:
 232              	.LBB16:
 299:.\Generated_Source\PSoC5/UART_IntClock.c ****     return CY_GET_REG16(UART_IntClock_DIV_PTR);
 233              		.loc 1 299 0
 234 0004 2B4D     		ldr	r5, .L46+4
 235              	.LBE16:
 236              	.LBE15:
 237              	.LBB19:
 238              	.LBB13:
 239              		.loc 1 466 0
 240 0006 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 241              	.LBE13:
 242              	.LBE19:
 243              	.LBB20:
 244              	.LBB17:
 299:.\Generated_Source\PSoC5/UART_IntClock.c ****     return CY_GET_REG16(UART_IntClock_DIV_PTR);
 245              		.loc 1 299 0
 246 0008 2C88     		ldrh	r4, [r5]
 247              	.LBE17:
 248              	.LBE20:
 249              	.LBB21:
 250              	.LBB14:
 251              		.loc 1 466 0
 252 000a 07F00707 		and	r7, r7, #7
 253              	.LBE14:
 254              	.LBE21:
 255              	.LBB22:
 256              	.LBB18:
 299:.\Generated_Source\PSoC5/UART_IntClock.c ****     return CY_GET_REG16(UART_IntClock_DIV_PTR);
 257              		.loc 1 299 0
 258 000e A4B2     		uxth	r4, r4
 259              	.LBE18:
 260              	.LBE22:
 201:.\Generated_Source\PSoC5/UART_IntClock.c ****     if (clkDivider != oldDivider)
 261              		.loc 1 201 0
 262 0010 A042     		cmp	r0, r4
 263 0012 4CD0     		beq	.L23
 203:.\Generated_Source\PSoC5/UART_IntClock.c ****         enabled = UART_IntClock_CLKEN & UART_IntClock_CLKEN_MASK;
 264              		.loc 1 203 0
 265 0014 284A     		ldr	r2, .L46+8
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 14


 266 0016 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 267 0018 F6B2     		uxtb	r6, r6
 268              	.LVL4:
 205:.\Generated_Source\PSoC5/UART_IntClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 269              		.loc 1 205 0
 270 001a 6FB9     		cbnz	r7, .L26
 205:.\Generated_Source\PSoC5/UART_IntClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 271              		.loc 1 205 0 is_stmt 0 discriminator 1
 272 001c 34B1     		cbz	r4, .L27
 273 001e 58B9     		cbnz	r0, .L26
 220:.\Generated_Source\PSoC5/UART_IntClock.c ****                 UART_IntClock_MOD_SRC |= CYCLK_SSS;
 274              		.loc 1 220 0 is_stmt 1
 275 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 276 0022 42F04002 		orr	r2, r2, #64
 277 0026 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(UART_IntClock_DIV_PTR, clkDivider);
 278              		.loc 1 221 0
 279 0028 2880     		strh	r0, [r5]	@ movhi
 280 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 281              	.LVL5:
 282              	.L27:
 213:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(UART_IntClock_DIV_PTR, clkDivider);
 283              		.loc 1 213 0
 284 002c 2880     		strh	r0, [r5]	@ movhi
 214:.\Generated_Source\PSoC5/UART_IntClock.c ****                 UART_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 285              		.loc 1 214 0
 286 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 287 0030 02F0BF02 		and	r2, r2, #191
 288 0034 1A70     		strb	r2, [r3]
 289 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 290              	.LVL6:
 291              	.L26:
 227:.\Generated_Source\PSoC5/UART_IntClock.c ****             if (enabled != 0u)
 292              		.loc 1 227 0
 293 0038 16F00106 		ands	r6, r6, #1
 294              	.LVL7:
 295 003c 21D0     		beq	.L30
 236:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_DMASK = UART_IntClock_CLKEN_MASK;
 296              		.loc 1 236 0
 297 003e 1F4F     		ldr	r7, .L46+12
 229:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_LD = 0x00u;
 298              		.loc 1 229 0
 299 0040 1F4D     		ldr	r5, .L46+16
 300 0042 0023     		movs	r3, #0
 236:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_DMASK = UART_IntClock_CLKEN_MASK;
 301              		.loc 1 236 0
 302 0044 4FF0010C 		mov	ip, #1
 229:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_LD = 0x00u;
 303              		.loc 1 229 0
 304 0048 2B70     		strb	r3, [r5]
 236:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_DMASK = UART_IntClock_CLKEN_MASK;
 305              		.loc 1 236 0
 306 004a 87F800C0 		strb	ip, [r7]
 237:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_AMASK = 0x00u;
 307              		.loc 1 237 0
 308 004e 3B71     		strb	r3, [r7, #4]
 240:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 15


 309              		.loc 1 240 0
 310 0050 1C4B     		ldr	r3, .L46+20
 311 0052 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 243:.\Generated_Source\PSoC5/UART_IntClock.c ****                 if (((UART_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 312              		.loc 1 243 0
 313 0054 7A33     		adds	r3, r3, #122
 240:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 314              		.loc 1 240 0
 315 0056 07F07F07 		and	r7, r7, #127
 316 005a 03F87A7C 		strb	r7, [r3, #-122]
 243:.\Generated_Source\PSoC5/UART_IntClock.c ****                 if (((UART_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 317              		.loc 1 243 0
 318 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319 0060 1F07     		lsls	r7, r3, #28
 320 0062 00D5     		bpl	.L31
 243:.\Generated_Source\PSoC5/UART_IntClock.c ****                 if (((UART_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 321              		.loc 1 243 0 is_stmt 0 discriminator 1
 322 0064 68B9     		cbnz	r0, .L30
 323              	.L31:
 246:.\Generated_Source\PSoC5/UART_IntClock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 324              		.loc 1 246 0 is_stmt 1
 325 0066 184B     		ldr	r3, .L46+24
 326 0068 1C80     		strh	r4, [r3]	@ movhi
 247:.\Generated_Source\PSoC5/UART_IntClock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 327              		.loc 1 247 0
 328 006a 0723     		movs	r3, #7
 329 006c 2B70     		strb	r3, [r5]
 330              	.L34:
 250:.\Generated_Source\PSoC5/UART_IntClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 331              		.loc 1 250 0 discriminator 1
 332 006e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 333 0070 13F00103 		ands	r3, r3, #1
 334 0074 FBD1     		bne	.L34
 253:.\Generated_Source\PSoC5/UART_IntClock.c ****                     UART_IntClock_CLKEN &= (uint8)(~UART_IntClock_CLKEN_MASK);
 335              		.loc 1 253 0
 336 0076 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 337 0078 04F0FE04 		and	r4, r4, #254
 338 007c 1470     		strb	r4, [r2]
 257:.\Generated_Source\PSoC5/UART_IntClock.c ****                     CLK_DIST_LD = 0x00u;
 339              		.loc 1 257 0
 340 007e 104C     		ldr	r4, .L46+16
 341 0080 2370     		strb	r3, [r4]
 342              	.L30:
 263:.\Generated_Source\PSoC5/UART_IntClock.c ****             if ((UART_IntClock_CLKEN & UART_IntClock_CLKEN_MASK) != 0u)
 343              		.loc 1 263 0
 344 0082 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 345 0084 0C4B     		ldr	r3, .L46+8
 346 0086 D407     		lsls	r4, r2, #31
 347 0088 0CD5     		bpl	.L35
 266:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 348              		.loc 1 266 0
 349 008a A3F56873 		sub	r3, r3, #928
 268:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 350              		.loc 1 268 0
 351 008e 0029     		cmp	r1, #0
 266:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 352              		.loc 1 266 0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 16


 353 0090 1880     		strh	r0, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 354              		.loc 1 268 0
 355 0092 0CBF     		ite	eq
 356 0094 0122     		moveq	r2, #1
 357 0096 0322     		movne	r2, #3
 358 0098 013B     		subs	r3, r3, #1
 359 009a 1A70     		strb	r2, [r3]
 360              	.L38:
 269:.\Generated_Source\PSoC5/UART_IntClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 361              		.loc 1 269 0 discriminator 1
 362 009c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 363 009e D207     		lsls	r2, r2, #31
 364 00a0 FCD4     		bmi	.L38
 365 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 366              	.L35:
 274:.\Generated_Source\PSoC5/UART_IntClock.c ****                 CY_SET_REG16(UART_IntClock_DIV_PTR, clkDivider);
 367              		.loc 1 274 0
 368 00a4 034A     		ldr	r2, .L46+4
 369 00a6 1080     		strh	r0, [r2]	@ movhi
 275:.\Generated_Source\PSoC5/UART_IntClock.c **** 				UART_IntClock_CLKEN |= enabled;
 370              		.loc 1 275 0
 371 00a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 372 00aa 1643     		orrs	r6, r6, r2
 373 00ac 1E70     		strb	r6, [r3]
 374              	.L23:
 375 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 376              	.L47:
 377              		.align	2
 378              	.L46:
 379 00b0 82400040 		.word	1073758338
 380 00b4 80400040 		.word	1073758336
 381 00b8 A2430040 		.word	1073759138
 382 00bc 10400040 		.word	1073758224
 383 00c0 01400040 		.word	1073758209
 384 00c4 08400040 		.word	1073758216
 385 00c8 02400040 		.word	1073758210
 386              		.cfi_endproc
 387              	.LFE4:
 388              		.size	UART_IntClock_SetDividerRegister, .-UART_IntClock_SetDividerRegister
 389              		.section	.text.UART_IntClock_GetDividerRegister,"ax",%progbits
 390              		.align	1
 391              		.global	UART_IntClock_GetDividerRegister
 392              		.thumb
 393              		.thumb_func
 394              		.type	UART_IntClock_GetDividerRegister, %function
 395              	UART_IntClock_GetDividerRegister:
 396              	.LFB5:
 298:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 397              		.loc 1 298 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/UART_IntClock.c ****     return CY_GET_REG16(UART_IntClock_DIV_PTR);
 402              		.loc 1 299 0
 403 0000 014B     		ldr	r3, .L49
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 17


 404 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 405              		.loc 1 300 0
 406 0004 80B2     		uxth	r0, r0
 407 0006 7047     		bx	lr
 408              	.L50:
 409              		.align	2
 410              	.L49:
 411 0008 80400040 		.word	1073758336
 412              		.cfi_endproc
 413              	.LFE5:
 414              		.size	UART_IntClock_GetDividerRegister, .-UART_IntClock_GetDividerRegister
 415              		.section	.text.UART_IntClock_SetModeRegister,"ax",%progbits
 416              		.align	1
 417              		.global	UART_IntClock_SetModeRegister
 418              		.thumb
 419              		.thumb_func
 420              		.type	UART_IntClock_SetModeRegister, %function
 421              	UART_IntClock_SetModeRegister:
 422              	.LFB6:
 333:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 423              		.loc 1 333 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL8:
 334:.\Generated_Source\PSoC5/UART_IntClock.c ****     UART_IntClock_MOD_SRC |= modeBitMask & (uint8)UART_IntClock_MODE_MASK;
 429              		.loc 1 334 0
 430 0000 034B     		ldr	r3, .L52
 431 0002 00F0F800 		and	r0, r0, #248
 432              	.LVL9:
 433 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 434 0008 0243     		orrs	r2, r2, r0
 435 000a 1A70     		strb	r2, [r3]
 436 000c 7047     		bx	lr
 437              	.L53:
 438 000e 00BF     		.align	2
 439              	.L52:
 440 0010 82400040 		.word	1073758338
 441              		.cfi_endproc
 442              	.LFE6:
 443              		.size	UART_IntClock_SetModeRegister, .-UART_IntClock_SetModeRegister
 444              		.section	.text.UART_IntClock_ClearModeRegister,"ax",%progbits
 445              		.align	1
 446              		.global	UART_IntClock_ClearModeRegister
 447              		.thumb
 448              		.thumb_func
 449              		.type	UART_IntClock_ClearModeRegister, %function
 450              	UART_IntClock_ClearModeRegister:
 451              	.LFB7:
 368:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 452              		.loc 1 368 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 18


 457              	.LVL10:
 369:.\Generated_Source\PSoC5/UART_IntClock.c ****     UART_IntClock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(UART_IntClock_MODE_MASK));
 458              		.loc 1 369 0
 459 0000 034B     		ldr	r3, .L55
 460 0002 C043     		mvns	r0, r0
 461              	.LVL11:
 462 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 463 0006 40F00700 		orr	r0, r0, #7
 464 000a 0240     		ands	r2, r2, r0
 465 000c 1A70     		strb	r2, [r3]
 466 000e 7047     		bx	lr
 467              	.L56:
 468              		.align	2
 469              	.L55:
 470 0010 82400040 		.word	1073758338
 471              		.cfi_endproc
 472              	.LFE7:
 473              		.size	UART_IntClock_ClearModeRegister, .-UART_IntClock_ClearModeRegister
 474              		.section	.text.UART_IntClock_GetModeRegister,"ax",%progbits
 475              		.align	1
 476              		.global	UART_IntClock_GetModeRegister
 477              		.thumb
 478              		.thumb_func
 479              		.type	UART_IntClock_GetModeRegister, %function
 480              	UART_IntClock_GetModeRegister:
 481              	.LFB8:
 389:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 482              		.loc 1 389 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/UART_IntClock.c ****     return UART_IntClock_MOD_SRC & (uint8)(UART_IntClock_MODE_MASK);
 487              		.loc 1 390 0
 488 0000 024B     		ldr	r3, .L58
 489 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 490              		.loc 1 391 0
 491 0004 00F0F800 		and	r0, r0, #248
 492 0008 7047     		bx	lr
 493              	.L59:
 494 000a 00BF     		.align	2
 495              	.L58:
 496 000c 82400040 		.word	1073758338
 497              		.cfi_endproc
 498              	.LFE8:
 499              		.size	UART_IntClock_GetModeRegister, .-UART_IntClock_GetModeRegister
 500              		.section	.text.UART_IntClock_SetSourceRegister,"ax",%progbits
 501              		.align	1
 502              		.global	UART_IntClock_SetSourceRegister
 503              		.thumb
 504              		.thumb_func
 505              		.type	UART_IntClock_SetSourceRegister, %function
 506              	UART_IntClock_SetSourceRegister:
 507              	.LFB9:
 420:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 508              		.loc 1 420 0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 19


 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL12:
 514              	.LBB23:
 515              	.LBB24:
 299:.\Generated_Source\PSoC5/UART_IntClock.c ****     return CY_GET_REG16(UART_IntClock_DIV_PTR);
 516              		.loc 1 299 0
 517 0000 124B     		ldr	r3, .L68
 518 0002 1988     		ldrh	r1, [r3]
 519              	.LBE24:
 520              	.LBE23:
 521              	.LBB26:
 522              	.LBB27:
 523              		.loc 1 466 0
 524 0004 0233     		adds	r3, r3, #2
 525 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 526              	.LBE27:
 527              	.LBE26:
 528              	.LBB28:
 529              	.LBB25:
 299:.\Generated_Source\PSoC5/UART_IntClock.c ****     return CY_GET_REG16(UART_IntClock_DIV_PTR);
 530              		.loc 1 299 0
 531 0008 89B2     		uxth	r1, r1
 532              	.LBE25:
 533              	.LBE28:
 424:.\Generated_Source\PSoC5/UART_IntClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 534              		.loc 1 424 0
 535 000a 12F0070F 		tst	r2, #7
 536 000e 1A46     		mov	r2, r3
 537 0010 09D0     		beq	.L61
 424:.\Generated_Source\PSoC5/UART_IntClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 538              		.loc 1 424 0 is_stmt 0 discriminator 1
 539 0012 A0B9     		cbnz	r0, .L62
 425:.\Generated_Source\PSoC5/UART_IntClock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 540              		.loc 1 425 0 is_stmt 1
 541 0014 99B9     		cbnz	r1, .L62
 429:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC |= CYCLK_SSS;
 542              		.loc 1 429 0
 543 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 544 0018 42F04002 		orr	r2, r2, #64
 545 001c 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC5/UART_IntClock.c ****             (UART_IntClock_MOD_SRC & (uint8)(~UART_IntClock_SRC_SEL_MSK)) | clkSource;
 546              		.loc 1 431 0
 547 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC =
 548              		.loc 1 430 0
 549 0020 02F0F802 		and	r2, r2, #248
 550 0024 09E0     		b	.L67
 551              	.L61:
 433:.\Generated_Source\PSoC5/UART_IntClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 552              		.loc 1 433 0 discriminator 1
 553 0026 50B1     		cbz	r0, .L62
 434:.\Generated_Source\PSoC5/UART_IntClock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 554              		.loc 1 434 0
 555 0028 49B9     		cbnz	r1, .L62
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 20


 439:.\Generated_Source\PSoC5/UART_IntClock.c ****             (UART_IntClock_MOD_SRC & (uint8)(~UART_IntClock_SRC_SEL_MSK)) | clkSource;
 556              		.loc 1 439 0
 557 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC =
 558              		.loc 1 438 0
 559 002c 02F0F802 		and	r2, r2, #248
 560 0030 1043     		orrs	r0, r0, r2
 561              	.LVL13:
 562 0032 1870     		strb	r0, [r3]
 440:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 563              		.loc 1 440 0
 564 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 565 0036 02F0BF02 		and	r2, r2, #191
 566              	.L67:
 567 003a 1A70     		strb	r2, [r3]
 568 003c 7047     		bx	lr
 569              	.LVL14:
 570              	.L62:
 445:.\Generated_Source\PSoC5/UART_IntClock.c ****             (UART_IntClock_MOD_SRC & (uint8)(~UART_IntClock_SRC_SEL_MSK)) | clkSource;
 571              		.loc 1 445 0
 572 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/UART_IntClock.c ****         UART_IntClock_MOD_SRC =
 573              		.loc 1 444 0
 574 0040 03F0F803 		and	r3, r3, #248
 575 0044 1843     		orrs	r0, r0, r3
 576              	.LVL15:
 577 0046 1070     		strb	r0, [r2]
 578 0048 7047     		bx	lr
 579              	.L69:
 580 004a 00BF     		.align	2
 581              	.L68:
 582 004c 80400040 		.word	1073758336
 583              		.cfi_endproc
 584              	.LFE9:
 585              		.size	UART_IntClock_SetSourceRegister, .-UART_IntClock_SetSourceRegister
 586              		.section	.text.UART_IntClock_GetSourceRegister,"ax",%progbits
 587              		.align	1
 588              		.global	UART_IntClock_GetSourceRegister
 589              		.thumb
 590              		.thumb_func
 591              		.type	UART_IntClock_GetSourceRegister, %function
 592              	UART_IntClock_GetSourceRegister:
 593              	.LFB10:
 465:.\Generated_Source\PSoC5/UART_IntClock.c **** {
 594              		.loc 1 465 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599              		.loc 1 466 0
 600 0000 024B     		ldr	r3, .L71
 601 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/UART_IntClock.c **** }
 602              		.loc 1 467 0
 603 0004 00F00700 		and	r0, r0, #7
 604 0008 7047     		bx	lr
 605              	.L72:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 21


 606 000a 00BF     		.align	2
 607              	.L71:
 608 000c 82400040 		.word	1073758338
 609              		.cfi_endproc
 610              	.LFE10:
 611              		.size	UART_IntClock_GetSourceRegister, .-UART_IntClock_GetSourceRegister
 612              		.text
 613              	.Letext0:
 614              		.file 2 ".\\Generated_Source\\PSoC5/cytypes.h"
 615              		.section	.debug_info,"",%progbits
 616              	.Ldebug_info0:
 617 0000 97020000 		.4byte	0x297
 618 0004 0400     		.2byte	0x4
 619 0006 00000000 		.4byte	.Ldebug_abbrev0
 620 000a 04       		.byte	0x4
 621 000b 01       		.uleb128 0x1
 622 000c 7A000000 		.4byte	.LASF36
 623 0010 01       		.byte	0x1
 624 0011 15020000 		.4byte	.LASF37
 625 0015 A5020000 		.4byte	.LASF38
 626 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 627 001d 00000000 		.4byte	0
 628 0021 00000000 		.4byte	.Ldebug_line0
 629 0025 02       		.uleb128 0x2
 630 0026 01       		.byte	0x1
 631 0027 06       		.byte	0x6
 632 0028 AD010000 		.4byte	.LASF0
 633 002c 02       		.uleb128 0x2
 634 002d 01       		.byte	0x1
 635 002e 08       		.byte	0x8
 636 002f 7B010000 		.4byte	.LASF1
 637 0033 02       		.uleb128 0x2
 638 0034 02       		.byte	0x2
 639 0035 05       		.byte	0x5
 640 0036 2F000000 		.4byte	.LASF2
 641 003a 02       		.uleb128 0x2
 642 003b 02       		.byte	0x2
 643 003c 07       		.byte	0x7
 644 003d DD010000 		.4byte	.LASF3
 645 0041 02       		.uleb128 0x2
 646 0042 04       		.byte	0x4
 647 0043 05       		.byte	0x5
 648 0044 22010000 		.4byte	.LASF4
 649 0048 02       		.uleb128 0x2
 650 0049 04       		.byte	0x4
 651 004a 07       		.byte	0x7
 652 004b 56020000 		.4byte	.LASF5
 653 004f 02       		.uleb128 0x2
 654 0050 08       		.byte	0x8
 655 0051 05       		.byte	0x5
 656 0052 F6000000 		.4byte	.LASF6
 657 0056 02       		.uleb128 0x2
 658 0057 08       		.byte	0x8
 659 0058 07       		.byte	0x7
 660 0059 B9010000 		.4byte	.LASF7
 661 005d 03       		.uleb128 0x3
 662 005e 04       		.byte	0x4
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 22


 663 005f 05       		.byte	0x5
 664 0060 696E7400 		.ascii	"int\000"
 665 0064 02       		.uleb128 0x2
 666 0065 04       		.byte	0x4
 667 0066 07       		.byte	0x7
 668 0067 D0010000 		.4byte	.LASF8
 669 006b 04       		.uleb128 0x4
 670 006c 63000000 		.4byte	.LASF9
 671 0070 02       		.byte	0x2
 672 0071 A1       		.byte	0xa1
 673 0072 2C000000 		.4byte	0x2c
 674 0076 04       		.uleb128 0x4
 675 0077 4D000000 		.4byte	.LASF10
 676 007b 02       		.byte	0x2
 677 007c A2       		.byte	0xa2
 678 007d 3A000000 		.4byte	0x3a
 679 0081 02       		.uleb128 0x2
 680 0082 04       		.byte	0x4
 681 0083 04       		.byte	0x4
 682 0084 74000000 		.4byte	.LASF11
 683 0088 02       		.uleb128 0x2
 684 0089 08       		.byte	0x8
 685 008a 04       		.byte	0x4
 686 008b 68020000 		.4byte	.LASF12
 687 008f 02       		.uleb128 0x2
 688 0090 01       		.byte	0x1
 689 0091 08       		.byte	0x8
 690 0092 F0010000 		.4byte	.LASF13
 691 0096 05       		.uleb128 0x5
 692 0097 51020000 		.4byte	.LASF14
 693 009b 02       		.byte	0x2
 694 009c 4B01     		.2byte	0x14b
 695 009e A2000000 		.4byte	0xa2
 696 00a2 06       		.uleb128 0x6
 697 00a3 6B000000 		.4byte	0x6b
 698 00a7 05       		.uleb128 0x5
 699 00a8 08000000 		.4byte	.LASF15
 700 00ac 02       		.byte	0x2
 701 00ad 4C01     		.2byte	0x14c
 702 00af B3000000 		.4byte	0xb3
 703 00b3 06       		.uleb128 0x6
 704 00b4 76000000 		.4byte	0x76
 705 00b8 07       		.uleb128 0x7
 706 00b9 35010000 		.4byte	.LASF16
 707 00bd 01       		.byte	0x1
 708 00be D001     		.2byte	0x1d0
 709 00c0 6B000000 		.4byte	0x6b
 710 00c4 01       		.byte	0x1
 711 00c5 07       		.uleb128 0x7
 712 00c6 0E000000 		.4byte	.LASF17
 713 00ca 01       		.byte	0x1
 714 00cb 2901     		.2byte	0x129
 715 00cd 76000000 		.4byte	0x76
 716 00d1 01       		.byte	0x1
 717 00d2 08       		.uleb128 0x8
 718 00d3 39000000 		.4byte	.LASF18
 719 00d7 01       		.byte	0x1
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 23


 720 00d8 2D       		.byte	0x2d
 721 00d9 00000000 		.4byte	.LFB0
 722 00dd 18000000 		.4byte	.LFE0-.LFB0
 723 00e1 01       		.uleb128 0x1
 724 00e2 9C       		.byte	0x9c
 725 00e3 08       		.uleb128 0x8
 726 00e4 6F020000 		.4byte	.LASF19
 727 00e8 01       		.byte	0x1
 728 00e9 47       		.byte	0x47
 729 00ea 00000000 		.4byte	.LFB1
 730 00ee 18000000 		.4byte	.LFE1-.LFB1
 731 00f2 01       		.uleb128 0x1
 732 00f3 9C       		.byte	0x9c
 733 00f4 09       		.uleb128 0x9
 734 00f5 95010000 		.4byte	.LASF20
 735 00f9 01       		.byte	0x1
 736 00fa 64       		.byte	0x64
 737 00fb 00000000 		.4byte	.LFB2
 738 00ff 74000000 		.4byte	.LFE2-.LFB2
 739 0103 01       		.uleb128 0x1
 740 0104 9C       		.byte	0x9c
 741 0105 23010000 		.4byte	0x123
 742 0109 0A       		.uleb128 0xa
 743 010a 0A000000 		.4byte	.LBB10
 744 010e 6A000000 		.4byte	.LBE10-.LBB10
 745 0112 0B       		.uleb128 0xb
 746 0113 46020000 		.4byte	.LASF26
 747 0117 01       		.byte	0x1
 748 0118 69       		.byte	0x69
 749 0119 76000000 		.4byte	0x76
 750 011d 00000000 		.4byte	.LLST0
 751 0121 00       		.byte	0
 752 0122 00       		.byte	0
 753 0123 09       		.uleb128 0x9
 754 0124 8A020000 		.4byte	.LASF21
 755 0128 01       		.byte	0x1
 756 0129 9D       		.byte	0x9d
 757 012a 00000000 		.4byte	.LFB3
 758 012e 18000000 		.4byte	.LFE3-.LFB3
 759 0132 01       		.uleb128 0x1
 760 0133 9C       		.byte	0x9c
 761 0134 46010000 		.4byte	0x146
 762 0138 0C       		.uleb128 0xc
 763 0139 55010000 		.4byte	.LASF23
 764 013d 01       		.byte	0x1
 765 013e 9D       		.byte	0x9d
 766 013f 6B000000 		.4byte	0x6b
 767 0143 01       		.uleb128 0x1
 768 0144 50       		.byte	0x50
 769 0145 00       		.byte	0
 770 0146 09       		.uleb128 0x9
 771 0147 FD020000 		.4byte	.LASF22
 772 014b 01       		.byte	0x1
 773 014c C1       		.byte	0xc1
 774 014d 00000000 		.4byte	.LFB4
 775 0151 CC000000 		.4byte	.LFE4-.LFB4
 776 0155 01       		.uleb128 0x1
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 24


 777 0156 9C       		.byte	0x9c
 778 0157 B9010000 		.4byte	0x1b9
 779 015b 0C       		.uleb128 0xc
 780 015c 69000000 		.4byte	.LASF24
 781 0160 01       		.byte	0x1
 782 0161 C1       		.byte	0xc1
 783 0162 76000000 		.4byte	0x76
 784 0166 01       		.uleb128 0x1
 785 0167 50       		.byte	0x50
 786 0168 0C       		.uleb128 0xc
 787 0169 54000000 		.4byte	.LASF25
 788 016d 01       		.byte	0x1
 789 016e C1       		.byte	0xc1
 790 016f 6B000000 		.4byte	0x6b
 791 0173 01       		.uleb128 0x1
 792 0174 51       		.byte	0x51
 793 0175 0B       		.uleb128 0xb
 794 0176 82020000 		.4byte	.LASF27
 795 017a 01       		.byte	0x1
 796 017b C4       		.byte	0xc4
 797 017c 6B000000 		.4byte	0x6b
 798 0180 13000000 		.4byte	.LLST1
 799 0184 0D       		.uleb128 0xd
 800 0185 3E020000 		.4byte	.LASF28
 801 0189 01       		.byte	0x1
 802 018a C6       		.byte	0xc6
 803 018b 6B000000 		.4byte	0x6b
 804 018f 0D       		.uleb128 0xd
 805 0190 46020000 		.4byte	.LASF26
 806 0194 01       		.byte	0x1
 807 0195 C7       		.byte	0xc7
 808 0196 76000000 		.4byte	0x76
 809 019a 0E       		.uleb128 0xe
 810 019b B8000000 		.4byte	0xb8
 811 019f 02000000 		.4byte	.LBB11
 812 01a3 00000000 		.4byte	.Ldebug_ranges0+0
 813 01a7 01       		.byte	0x1
 814 01a8 C6       		.byte	0xc6
 815 01a9 0E       		.uleb128 0xe
 816 01aa C5000000 		.4byte	0xc5
 817 01ae 04000000 		.4byte	.LBB15
 818 01b2 20000000 		.4byte	.Ldebug_ranges0+0x20
 819 01b6 01       		.byte	0x1
 820 01b7 C7       		.byte	0xc7
 821 01b8 00       		.byte	0
 822 01b9 0F       		.uleb128 0xf
 823 01ba C5000000 		.4byte	0xc5
 824 01be 00000000 		.4byte	.LFB5
 825 01c2 0C000000 		.4byte	.LFE5-.LFB5
 826 01c6 01       		.uleb128 0x1
 827 01c7 9C       		.byte	0x9c
 828 01c8 10       		.uleb128 0x10
 829 01c9 DF020000 		.4byte	.LASF29
 830 01cd 01       		.byte	0x1
 831 01ce 4C01     		.2byte	0x14c
 832 01d0 00000000 		.4byte	.LFB6
 833 01d4 14000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 25


 834 01d8 01       		.uleb128 0x1
 835 01d9 9C       		.byte	0x9c
 836 01da EF010000 		.4byte	0x1ef
 837 01de 11       		.uleb128 0x11
 838 01df 89010000 		.4byte	.LASF30
 839 01e3 01       		.byte	0x1
 840 01e4 4C01     		.2byte	0x14c
 841 01e6 6B000000 		.4byte	0x6b
 842 01ea 2A000000 		.4byte	.LLST2
 843 01ee 00       		.byte	0
 844 01ef 10       		.uleb128 0x10
 845 01f0 F5010000 		.4byte	.LASF31
 846 01f4 01       		.byte	0x1
 847 01f5 6F01     		.2byte	0x16f
 848 01f7 00000000 		.4byte	.LFB7
 849 01fb 14000000 		.4byte	.LFE7-.LFB7
 850 01ff 01       		.uleb128 0x1
 851 0200 9C       		.byte	0x9c
 852 0201 16020000 		.4byte	0x216
 853 0205 11       		.uleb128 0x11
 854 0206 89010000 		.4byte	.LASF30
 855 020a 01       		.byte	0x1
 856 020b 6F01     		.2byte	0x16f
 857 020d 6B000000 		.4byte	0x6b
 858 0211 4B000000 		.4byte	.LLST3
 859 0215 00       		.byte	0
 860 0216 12       		.uleb128 0x12
 861 0217 04010000 		.4byte	.LASF39
 862 021b 01       		.byte	0x1
 863 021c 8401     		.2byte	0x184
 864 021e 6B000000 		.4byte	0x6b
 865 0222 00000000 		.4byte	.LFB8
 866 0226 10000000 		.4byte	.LFE8-.LFB8
 867 022a 01       		.uleb128 0x1
 868 022b 9C       		.byte	0x9c
 869 022c 10       		.uleb128 0x10
 870 022d 5B010000 		.4byte	.LASF32
 871 0231 01       		.byte	0x1
 872 0232 A301     		.2byte	0x1a3
 873 0234 00000000 		.4byte	.LFB9
 874 0238 50000000 		.4byte	.LFE9-.LFB9
 875 023c 01       		.uleb128 0x1
 876 023d 9C       		.byte	0x9c
 877 023e 8B020000 		.4byte	0x28b
 878 0242 11       		.uleb128 0x11
 879 0243 2B010000 		.4byte	.LASF33
 880 0247 01       		.byte	0x1
 881 0248 A301     		.2byte	0x1a3
 882 024a 6B000000 		.4byte	0x6b
 883 024e 6C000000 		.4byte	.LLST4
 884 0252 13       		.uleb128 0x13
 885 0253 00000000 		.4byte	.LASF34
 886 0257 01       		.byte	0x1
 887 0258 A501     		.2byte	0x1a5
 888 025a 76000000 		.4byte	0x76
 889 025e 13       		.uleb128 0x13
 890 025f 5C000000 		.4byte	.LASF35
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 26


 891 0263 01       		.byte	0x1
 892 0264 A601     		.2byte	0x1a6
 893 0266 6B000000 		.4byte	0x6b
 894 026a 14       		.uleb128 0x14
 895 026b C5000000 		.4byte	0xc5
 896 026f 00000000 		.4byte	.LBB23
 897 0273 40000000 		.4byte	.Ldebug_ranges0+0x40
 898 0277 01       		.byte	0x1
 899 0278 A501     		.2byte	0x1a5
 900 027a 15       		.uleb128 0x15
 901 027b B8000000 		.4byte	0xb8
 902 027f 04000000 		.4byte	.LBB26
 903 0283 04000000 		.4byte	.LBE26-.LBB26
 904 0287 01       		.byte	0x1
 905 0288 A601     		.2byte	0x1a6
 906 028a 00       		.byte	0
 907 028b 0F       		.uleb128 0xf
 908 028c B8000000 		.4byte	0xb8
 909 0290 00000000 		.4byte	.LFB10
 910 0294 10000000 		.4byte	.LFE10-.LFB10
 911 0298 01       		.uleb128 0x1
 912 0299 9C       		.byte	0x9c
 913 029a 00       		.byte	0
 914              		.section	.debug_abbrev,"",%progbits
 915              	.Ldebug_abbrev0:
 916 0000 01       		.uleb128 0x1
 917 0001 11       		.uleb128 0x11
 918 0002 01       		.byte	0x1
 919 0003 25       		.uleb128 0x25
 920 0004 0E       		.uleb128 0xe
 921 0005 13       		.uleb128 0x13
 922 0006 0B       		.uleb128 0xb
 923 0007 03       		.uleb128 0x3
 924 0008 0E       		.uleb128 0xe
 925 0009 1B       		.uleb128 0x1b
 926 000a 0E       		.uleb128 0xe
 927 000b 55       		.uleb128 0x55
 928 000c 17       		.uleb128 0x17
 929 000d 11       		.uleb128 0x11
 930 000e 01       		.uleb128 0x1
 931 000f 10       		.uleb128 0x10
 932 0010 17       		.uleb128 0x17
 933 0011 00       		.byte	0
 934 0012 00       		.byte	0
 935 0013 02       		.uleb128 0x2
 936 0014 24       		.uleb128 0x24
 937 0015 00       		.byte	0
 938 0016 0B       		.uleb128 0xb
 939 0017 0B       		.uleb128 0xb
 940 0018 3E       		.uleb128 0x3e
 941 0019 0B       		.uleb128 0xb
 942 001a 03       		.uleb128 0x3
 943 001b 0E       		.uleb128 0xe
 944 001c 00       		.byte	0
 945 001d 00       		.byte	0
 946 001e 03       		.uleb128 0x3
 947 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 27


 948 0020 00       		.byte	0
 949 0021 0B       		.uleb128 0xb
 950 0022 0B       		.uleb128 0xb
 951 0023 3E       		.uleb128 0x3e
 952 0024 0B       		.uleb128 0xb
 953 0025 03       		.uleb128 0x3
 954 0026 08       		.uleb128 0x8
 955 0027 00       		.byte	0
 956 0028 00       		.byte	0
 957 0029 04       		.uleb128 0x4
 958 002a 16       		.uleb128 0x16
 959 002b 00       		.byte	0
 960 002c 03       		.uleb128 0x3
 961 002d 0E       		.uleb128 0xe
 962 002e 3A       		.uleb128 0x3a
 963 002f 0B       		.uleb128 0xb
 964 0030 3B       		.uleb128 0x3b
 965 0031 0B       		.uleb128 0xb
 966 0032 49       		.uleb128 0x49
 967 0033 13       		.uleb128 0x13
 968 0034 00       		.byte	0
 969 0035 00       		.byte	0
 970 0036 05       		.uleb128 0x5
 971 0037 16       		.uleb128 0x16
 972 0038 00       		.byte	0
 973 0039 03       		.uleb128 0x3
 974 003a 0E       		.uleb128 0xe
 975 003b 3A       		.uleb128 0x3a
 976 003c 0B       		.uleb128 0xb
 977 003d 3B       		.uleb128 0x3b
 978 003e 05       		.uleb128 0x5
 979 003f 49       		.uleb128 0x49
 980 0040 13       		.uleb128 0x13
 981 0041 00       		.byte	0
 982 0042 00       		.byte	0
 983 0043 06       		.uleb128 0x6
 984 0044 35       		.uleb128 0x35
 985 0045 00       		.byte	0
 986 0046 49       		.uleb128 0x49
 987 0047 13       		.uleb128 0x13
 988 0048 00       		.byte	0
 989 0049 00       		.byte	0
 990 004a 07       		.uleb128 0x7
 991 004b 2E       		.uleb128 0x2e
 992 004c 00       		.byte	0
 993 004d 3F       		.uleb128 0x3f
 994 004e 19       		.uleb128 0x19
 995 004f 03       		.uleb128 0x3
 996 0050 0E       		.uleb128 0xe
 997 0051 3A       		.uleb128 0x3a
 998 0052 0B       		.uleb128 0xb
 999 0053 3B       		.uleb128 0x3b
 1000 0054 05       		.uleb128 0x5
 1001 0055 27       		.uleb128 0x27
 1002 0056 19       		.uleb128 0x19
 1003 0057 49       		.uleb128 0x49
 1004 0058 13       		.uleb128 0x13
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 28


 1005 0059 20       		.uleb128 0x20
 1006 005a 0B       		.uleb128 0xb
 1007 005b 00       		.byte	0
 1008 005c 00       		.byte	0
 1009 005d 08       		.uleb128 0x8
 1010 005e 2E       		.uleb128 0x2e
 1011 005f 00       		.byte	0
 1012 0060 3F       		.uleb128 0x3f
 1013 0061 19       		.uleb128 0x19
 1014 0062 03       		.uleb128 0x3
 1015 0063 0E       		.uleb128 0xe
 1016 0064 3A       		.uleb128 0x3a
 1017 0065 0B       		.uleb128 0xb
 1018 0066 3B       		.uleb128 0x3b
 1019 0067 0B       		.uleb128 0xb
 1020 0068 27       		.uleb128 0x27
 1021 0069 19       		.uleb128 0x19
 1022 006a 11       		.uleb128 0x11
 1023 006b 01       		.uleb128 0x1
 1024 006c 12       		.uleb128 0x12
 1025 006d 06       		.uleb128 0x6
 1026 006e 40       		.uleb128 0x40
 1027 006f 18       		.uleb128 0x18
 1028 0070 9742     		.uleb128 0x2117
 1029 0072 19       		.uleb128 0x19
 1030 0073 00       		.byte	0
 1031 0074 00       		.byte	0
 1032 0075 09       		.uleb128 0x9
 1033 0076 2E       		.uleb128 0x2e
 1034 0077 01       		.byte	0x1
 1035 0078 3F       		.uleb128 0x3f
 1036 0079 19       		.uleb128 0x19
 1037 007a 03       		.uleb128 0x3
 1038 007b 0E       		.uleb128 0xe
 1039 007c 3A       		.uleb128 0x3a
 1040 007d 0B       		.uleb128 0xb
 1041 007e 3B       		.uleb128 0x3b
 1042 007f 0B       		.uleb128 0xb
 1043 0080 27       		.uleb128 0x27
 1044 0081 19       		.uleb128 0x19
 1045 0082 11       		.uleb128 0x11
 1046 0083 01       		.uleb128 0x1
 1047 0084 12       		.uleb128 0x12
 1048 0085 06       		.uleb128 0x6
 1049 0086 40       		.uleb128 0x40
 1050 0087 18       		.uleb128 0x18
 1051 0088 9742     		.uleb128 0x2117
 1052 008a 19       		.uleb128 0x19
 1053 008b 01       		.uleb128 0x1
 1054 008c 13       		.uleb128 0x13
 1055 008d 00       		.byte	0
 1056 008e 00       		.byte	0
 1057 008f 0A       		.uleb128 0xa
 1058 0090 0B       		.uleb128 0xb
 1059 0091 01       		.byte	0x1
 1060 0092 11       		.uleb128 0x11
 1061 0093 01       		.uleb128 0x1
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 29


 1062 0094 12       		.uleb128 0x12
 1063 0095 06       		.uleb128 0x6
 1064 0096 00       		.byte	0
 1065 0097 00       		.byte	0
 1066 0098 0B       		.uleb128 0xb
 1067 0099 34       		.uleb128 0x34
 1068 009a 00       		.byte	0
 1069 009b 03       		.uleb128 0x3
 1070 009c 0E       		.uleb128 0xe
 1071 009d 3A       		.uleb128 0x3a
 1072 009e 0B       		.uleb128 0xb
 1073 009f 3B       		.uleb128 0x3b
 1074 00a0 0B       		.uleb128 0xb
 1075 00a1 49       		.uleb128 0x49
 1076 00a2 13       		.uleb128 0x13
 1077 00a3 02       		.uleb128 0x2
 1078 00a4 17       		.uleb128 0x17
 1079 00a5 00       		.byte	0
 1080 00a6 00       		.byte	0
 1081 00a7 0C       		.uleb128 0xc
 1082 00a8 05       		.uleb128 0x5
 1083 00a9 00       		.byte	0
 1084 00aa 03       		.uleb128 0x3
 1085 00ab 0E       		.uleb128 0xe
 1086 00ac 3A       		.uleb128 0x3a
 1087 00ad 0B       		.uleb128 0xb
 1088 00ae 3B       		.uleb128 0x3b
 1089 00af 0B       		.uleb128 0xb
 1090 00b0 49       		.uleb128 0x49
 1091 00b1 13       		.uleb128 0x13
 1092 00b2 02       		.uleb128 0x2
 1093 00b3 18       		.uleb128 0x18
 1094 00b4 00       		.byte	0
 1095 00b5 00       		.byte	0
 1096 00b6 0D       		.uleb128 0xd
 1097 00b7 34       		.uleb128 0x34
 1098 00b8 00       		.byte	0
 1099 00b9 03       		.uleb128 0x3
 1100 00ba 0E       		.uleb128 0xe
 1101 00bb 3A       		.uleb128 0x3a
 1102 00bc 0B       		.uleb128 0xb
 1103 00bd 3B       		.uleb128 0x3b
 1104 00be 0B       		.uleb128 0xb
 1105 00bf 49       		.uleb128 0x49
 1106 00c0 13       		.uleb128 0x13
 1107 00c1 00       		.byte	0
 1108 00c2 00       		.byte	0
 1109 00c3 0E       		.uleb128 0xe
 1110 00c4 1D       		.uleb128 0x1d
 1111 00c5 00       		.byte	0
 1112 00c6 31       		.uleb128 0x31
 1113 00c7 13       		.uleb128 0x13
 1114 00c8 52       		.uleb128 0x52
 1115 00c9 01       		.uleb128 0x1
 1116 00ca 55       		.uleb128 0x55
 1117 00cb 17       		.uleb128 0x17
 1118 00cc 58       		.uleb128 0x58
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 30


 1119 00cd 0B       		.uleb128 0xb
 1120 00ce 59       		.uleb128 0x59
 1121 00cf 0B       		.uleb128 0xb
 1122 00d0 00       		.byte	0
 1123 00d1 00       		.byte	0
 1124 00d2 0F       		.uleb128 0xf
 1125 00d3 2E       		.uleb128 0x2e
 1126 00d4 00       		.byte	0
 1127 00d5 31       		.uleb128 0x31
 1128 00d6 13       		.uleb128 0x13
 1129 00d7 11       		.uleb128 0x11
 1130 00d8 01       		.uleb128 0x1
 1131 00d9 12       		.uleb128 0x12
 1132 00da 06       		.uleb128 0x6
 1133 00db 40       		.uleb128 0x40
 1134 00dc 18       		.uleb128 0x18
 1135 00dd 9742     		.uleb128 0x2117
 1136 00df 19       		.uleb128 0x19
 1137 00e0 00       		.byte	0
 1138 00e1 00       		.byte	0
 1139 00e2 10       		.uleb128 0x10
 1140 00e3 2E       		.uleb128 0x2e
 1141 00e4 01       		.byte	0x1
 1142 00e5 3F       		.uleb128 0x3f
 1143 00e6 19       		.uleb128 0x19
 1144 00e7 03       		.uleb128 0x3
 1145 00e8 0E       		.uleb128 0xe
 1146 00e9 3A       		.uleb128 0x3a
 1147 00ea 0B       		.uleb128 0xb
 1148 00eb 3B       		.uleb128 0x3b
 1149 00ec 05       		.uleb128 0x5
 1150 00ed 27       		.uleb128 0x27
 1151 00ee 19       		.uleb128 0x19
 1152 00ef 11       		.uleb128 0x11
 1153 00f0 01       		.uleb128 0x1
 1154 00f1 12       		.uleb128 0x12
 1155 00f2 06       		.uleb128 0x6
 1156 00f3 40       		.uleb128 0x40
 1157 00f4 18       		.uleb128 0x18
 1158 00f5 9742     		.uleb128 0x2117
 1159 00f7 19       		.uleb128 0x19
 1160 00f8 01       		.uleb128 0x1
 1161 00f9 13       		.uleb128 0x13
 1162 00fa 00       		.byte	0
 1163 00fb 00       		.byte	0
 1164 00fc 11       		.uleb128 0x11
 1165 00fd 05       		.uleb128 0x5
 1166 00fe 00       		.byte	0
 1167 00ff 03       		.uleb128 0x3
 1168 0100 0E       		.uleb128 0xe
 1169 0101 3A       		.uleb128 0x3a
 1170 0102 0B       		.uleb128 0xb
 1171 0103 3B       		.uleb128 0x3b
 1172 0104 05       		.uleb128 0x5
 1173 0105 49       		.uleb128 0x49
 1174 0106 13       		.uleb128 0x13
 1175 0107 02       		.uleb128 0x2
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 31


 1176 0108 17       		.uleb128 0x17
 1177 0109 00       		.byte	0
 1178 010a 00       		.byte	0
 1179 010b 12       		.uleb128 0x12
 1180 010c 2E       		.uleb128 0x2e
 1181 010d 00       		.byte	0
 1182 010e 3F       		.uleb128 0x3f
 1183 010f 19       		.uleb128 0x19
 1184 0110 03       		.uleb128 0x3
 1185 0111 0E       		.uleb128 0xe
 1186 0112 3A       		.uleb128 0x3a
 1187 0113 0B       		.uleb128 0xb
 1188 0114 3B       		.uleb128 0x3b
 1189 0115 05       		.uleb128 0x5
 1190 0116 27       		.uleb128 0x27
 1191 0117 19       		.uleb128 0x19
 1192 0118 49       		.uleb128 0x49
 1193 0119 13       		.uleb128 0x13
 1194 011a 11       		.uleb128 0x11
 1195 011b 01       		.uleb128 0x1
 1196 011c 12       		.uleb128 0x12
 1197 011d 06       		.uleb128 0x6
 1198 011e 40       		.uleb128 0x40
 1199 011f 18       		.uleb128 0x18
 1200 0120 9742     		.uleb128 0x2117
 1201 0122 19       		.uleb128 0x19
 1202 0123 00       		.byte	0
 1203 0124 00       		.byte	0
 1204 0125 13       		.uleb128 0x13
 1205 0126 34       		.uleb128 0x34
 1206 0127 00       		.byte	0
 1207 0128 03       		.uleb128 0x3
 1208 0129 0E       		.uleb128 0xe
 1209 012a 3A       		.uleb128 0x3a
 1210 012b 0B       		.uleb128 0xb
 1211 012c 3B       		.uleb128 0x3b
 1212 012d 05       		.uleb128 0x5
 1213 012e 49       		.uleb128 0x49
 1214 012f 13       		.uleb128 0x13
 1215 0130 00       		.byte	0
 1216 0131 00       		.byte	0
 1217 0132 14       		.uleb128 0x14
 1218 0133 1D       		.uleb128 0x1d
 1219 0134 00       		.byte	0
 1220 0135 31       		.uleb128 0x31
 1221 0136 13       		.uleb128 0x13
 1222 0137 52       		.uleb128 0x52
 1223 0138 01       		.uleb128 0x1
 1224 0139 55       		.uleb128 0x55
 1225 013a 17       		.uleb128 0x17
 1226 013b 58       		.uleb128 0x58
 1227 013c 0B       		.uleb128 0xb
 1228 013d 59       		.uleb128 0x59
 1229 013e 05       		.uleb128 0x5
 1230 013f 00       		.byte	0
 1231 0140 00       		.byte	0
 1232 0141 15       		.uleb128 0x15
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 32


 1233 0142 1D       		.uleb128 0x1d
 1234 0143 00       		.byte	0
 1235 0144 31       		.uleb128 0x31
 1236 0145 13       		.uleb128 0x13
 1237 0146 11       		.uleb128 0x11
 1238 0147 01       		.uleb128 0x1
 1239 0148 12       		.uleb128 0x12
 1240 0149 06       		.uleb128 0x6
 1241 014a 58       		.uleb128 0x58
 1242 014b 0B       		.uleb128 0xb
 1243 014c 59       		.uleb128 0x59
 1244 014d 05       		.uleb128 0x5
 1245 014e 00       		.byte	0
 1246 014f 00       		.byte	0
 1247 0150 00       		.byte	0
 1248              		.section	.debug_loc,"",%progbits
 1249              	.Ldebug_loc0:
 1250              	.LLST0:
 1251 0000 2C000000 		.4byte	.LVL0
 1252 0004 58000000 		.4byte	.LVL1
 1253 0008 0100     		.2byte	0x1
 1254 000a 52       		.byte	0x52
 1255 000b 00000000 		.4byte	0
 1256 000f 00000000 		.4byte	0
 1257              	.LLST1:
 1258 0013 1A000000 		.4byte	.LVL4
 1259 0017 3C000000 		.4byte	.LVL7
 1260 001b 0500     		.2byte	0x5
 1261 001d 76       		.byte	0x76
 1262 001e 00       		.sleb128 0
 1263 001f 31       		.byte	0x31
 1264 0020 1A       		.byte	0x1a
 1265 0021 9F       		.byte	0x9f
 1266 0022 00000000 		.4byte	0
 1267 0026 00000000 		.4byte	0
 1268              	.LLST2:
 1269 002a 00000000 		.4byte	.LVL8
 1270 002e 06000000 		.4byte	.LVL9
 1271 0032 0100     		.2byte	0x1
 1272 0034 50       		.byte	0x50
 1273 0035 06000000 		.4byte	.LVL9
 1274 0039 14000000 		.4byte	.LFE6
 1275 003d 0400     		.2byte	0x4
 1276 003f F3       		.byte	0xf3
 1277 0040 01       		.uleb128 0x1
 1278 0041 50       		.byte	0x50
 1279 0042 9F       		.byte	0x9f
 1280 0043 00000000 		.4byte	0
 1281 0047 00000000 		.4byte	0
 1282              	.LLST3:
 1283 004b 00000000 		.4byte	.LVL10
 1284 004f 04000000 		.4byte	.LVL11
 1285 0053 0100     		.2byte	0x1
 1286 0055 50       		.byte	0x50
 1287 0056 04000000 		.4byte	.LVL11
 1288 005a 14000000 		.4byte	.LFE7
 1289 005e 0400     		.2byte	0x4
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 33


 1290 0060 F3       		.byte	0xf3
 1291 0061 01       		.uleb128 0x1
 1292 0062 50       		.byte	0x50
 1293 0063 9F       		.byte	0x9f
 1294 0064 00000000 		.4byte	0
 1295 0068 00000000 		.4byte	0
 1296              	.LLST4:
 1297 006c 00000000 		.4byte	.LVL12
 1298 0070 32000000 		.4byte	.LVL13
 1299 0074 0100     		.2byte	0x1
 1300 0076 50       		.byte	0x50
 1301 0077 32000000 		.4byte	.LVL13
 1302 007b 3E000000 		.4byte	.LVL14
 1303 007f 0400     		.2byte	0x4
 1304 0081 F3       		.byte	0xf3
 1305 0082 01       		.uleb128 0x1
 1306 0083 50       		.byte	0x50
 1307 0084 9F       		.byte	0x9f
 1308 0085 3E000000 		.4byte	.LVL14
 1309 0089 46000000 		.4byte	.LVL15
 1310 008d 0100     		.2byte	0x1
 1311 008f 50       		.byte	0x50
 1312 0090 46000000 		.4byte	.LVL15
 1313 0094 50000000 		.4byte	.LFE9
 1314 0098 0400     		.2byte	0x4
 1315 009a F3       		.byte	0xf3
 1316 009b 01       		.uleb128 0x1
 1317 009c 50       		.byte	0x50
 1318 009d 9F       		.byte	0x9f
 1319 009e 00000000 		.4byte	0
 1320 00a2 00000000 		.4byte	0
 1321              		.section	.debug_aranges,"",%progbits
 1322 0000 6C000000 		.4byte	0x6c
 1323 0004 0200     		.2byte	0x2
 1324 0006 00000000 		.4byte	.Ldebug_info0
 1325 000a 04       		.byte	0x4
 1326 000b 00       		.byte	0
 1327 000c 0000     		.2byte	0
 1328 000e 0000     		.2byte	0
 1329 0010 00000000 		.4byte	.LFB0
 1330 0014 18000000 		.4byte	.LFE0-.LFB0
 1331 0018 00000000 		.4byte	.LFB1
 1332 001c 18000000 		.4byte	.LFE1-.LFB1
 1333 0020 00000000 		.4byte	.LFB2
 1334 0024 74000000 		.4byte	.LFE2-.LFB2
 1335 0028 00000000 		.4byte	.LFB3
 1336 002c 18000000 		.4byte	.LFE3-.LFB3
 1337 0030 00000000 		.4byte	.LFB4
 1338 0034 CC000000 		.4byte	.LFE4-.LFB4
 1339 0038 00000000 		.4byte	.LFB5
 1340 003c 0C000000 		.4byte	.LFE5-.LFB5
 1341 0040 00000000 		.4byte	.LFB6
 1342 0044 14000000 		.4byte	.LFE6-.LFB6
 1343 0048 00000000 		.4byte	.LFB7
 1344 004c 14000000 		.4byte	.LFE7-.LFB7
 1345 0050 00000000 		.4byte	.LFB8
 1346 0054 10000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 34


 1347 0058 00000000 		.4byte	.LFB9
 1348 005c 50000000 		.4byte	.LFE9-.LFB9
 1349 0060 00000000 		.4byte	.LFB10
 1350 0064 10000000 		.4byte	.LFE10-.LFB10
 1351 0068 00000000 		.4byte	0
 1352 006c 00000000 		.4byte	0
 1353              		.section	.debug_ranges,"",%progbits
 1354              	.Ldebug_ranges0:
 1355 0000 02000000 		.4byte	.LBB11
 1356 0004 04000000 		.4byte	.LBE11
 1357 0008 06000000 		.4byte	.LBB19
 1358 000c 08000000 		.4byte	.LBE19
 1359 0010 0A000000 		.4byte	.LBB21
 1360 0014 0E000000 		.4byte	.LBE21
 1361 0018 00000000 		.4byte	0
 1362 001c 00000000 		.4byte	0
 1363 0020 04000000 		.4byte	.LBB15
 1364 0024 06000000 		.4byte	.LBE15
 1365 0028 08000000 		.4byte	.LBB20
 1366 002c 0A000000 		.4byte	.LBE20
 1367 0030 0E000000 		.4byte	.LBB22
 1368 0034 10000000 		.4byte	.LBE22
 1369 0038 00000000 		.4byte	0
 1370 003c 00000000 		.4byte	0
 1371 0040 00000000 		.4byte	.LBB23
 1372 0044 04000000 		.4byte	.LBE23
 1373 0048 08000000 		.4byte	.LBB28
 1374 004c 0A000000 		.4byte	.LBE28
 1375 0050 00000000 		.4byte	0
 1376 0054 00000000 		.4byte	0
 1377 0058 00000000 		.4byte	.LFB0
 1378 005c 18000000 		.4byte	.LFE0
 1379 0060 00000000 		.4byte	.LFB1
 1380 0064 18000000 		.4byte	.LFE1
 1381 0068 00000000 		.4byte	.LFB2
 1382 006c 74000000 		.4byte	.LFE2
 1383 0070 00000000 		.4byte	.LFB3
 1384 0074 18000000 		.4byte	.LFE3
 1385 0078 00000000 		.4byte	.LFB4
 1386 007c CC000000 		.4byte	.LFE4
 1387 0080 00000000 		.4byte	.LFB5
 1388 0084 0C000000 		.4byte	.LFE5
 1389 0088 00000000 		.4byte	.LFB6
 1390 008c 14000000 		.4byte	.LFE6
 1391 0090 00000000 		.4byte	.LFB7
 1392 0094 14000000 		.4byte	.LFE7
 1393 0098 00000000 		.4byte	.LFB8
 1394 009c 10000000 		.4byte	.LFE8
 1395 00a0 00000000 		.4byte	.LFB9
 1396 00a4 50000000 		.4byte	.LFE9
 1397 00a8 00000000 		.4byte	.LFB10
 1398 00ac 10000000 		.4byte	.LFE10
 1399 00b0 00000000 		.4byte	0
 1400 00b4 00000000 		.4byte	0
 1401              		.section	.debug_line,"",%progbits
 1402              	.Ldebug_line0:
 1403 0000 B1010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 35


 1403      02004C00 
 1403      00000201 
 1403      FB0E0D00 
 1403      01010101 
 1404              	.LASF34:
 1405 0000 63757272 		.ascii	"currDiv\000"
 1405      44697600 
 1406              	.LASF15:
 1407 0008 72656731 		.ascii	"reg16\000"
 1407      3600
 1408              	.LASF17:
 1409 000e 55415254 		.ascii	"UART_IntClock_GetDividerRegister\000"
 1409      5F496E74 
 1409      436C6F63 
 1409      6B5F4765 
 1409      74446976 
 1410              	.LASF2:
 1411 002f 73686F72 		.ascii	"short int\000"
 1411      7420696E 
 1411      7400
 1412              	.LASF18:
 1413 0039 55415254 		.ascii	"UART_IntClock_Start\000"
 1413      5F496E74 
 1413      436C6F63 
 1413      6B5F5374 
 1413      61727400 
 1414              	.LASF10:
 1415 004d 75696E74 		.ascii	"uint16\000"
 1415      313600
 1416              	.LASF25:
 1417 0054 72657374 		.ascii	"restart\000"
 1417      61727400 
 1418              	.LASF35:
 1419 005c 6F6C6453 		.ascii	"oldSrc\000"
 1419      726300
 1420              	.LASF9:
 1421 0063 75696E74 		.ascii	"uint8\000"
 1421      3800
 1422              	.LASF24:
 1423 0069 636C6B44 		.ascii	"clkDivider\000"
 1423      69766964 
 1423      657200
 1424              	.LASF11:
 1425 0074 666C6F61 		.ascii	"float\000"
 1425      7400
 1426              	.LASF36:
 1427 007a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1427      4320342E 
 1427      382E3420 
 1427      32303134 
 1427      30353236 
 1428 00ad 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1428      20726576 
 1428      6973696F 
 1428      6E203231 
 1428      31333538 
 1429 00e0 73202D66 		.ascii	"s -ffunction-sections\000"
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 36


 1429      66756E63 
 1429      74696F6E 
 1429      2D736563 
 1429      74696F6E 
 1430              	.LASF6:
 1431 00f6 6C6F6E67 		.ascii	"long long int\000"
 1431      206C6F6E 
 1431      6720696E 
 1431      7400
 1432              	.LASF39:
 1433 0104 55415254 		.ascii	"UART_IntClock_GetModeRegister\000"
 1433      5F496E74 
 1433      436C6F63 
 1433      6B5F4765 
 1433      744D6F64 
 1434              	.LASF4:
 1435 0122 6C6F6E67 		.ascii	"long int\000"
 1435      20696E74 
 1435      00
 1436              	.LASF33:
 1437 012b 636C6B53 		.ascii	"clkSource\000"
 1437      6F757263 
 1437      6500
 1438              	.LASF16:
 1439 0135 55415254 		.ascii	"UART_IntClock_GetSourceRegister\000"
 1439      5F496E74 
 1439      436C6F63 
 1439      6B5F4765 
 1439      74536F75 
 1440              	.LASF23:
 1441 0155 73746174 		.ascii	"state\000"
 1441      6500
 1442              	.LASF32:
 1443 015b 55415254 		.ascii	"UART_IntClock_SetSourceRegister\000"
 1443      5F496E74 
 1443      436C6F63 
 1443      6B5F5365 
 1443      74536F75 
 1444              	.LASF1:
 1445 017b 756E7369 		.ascii	"unsigned char\000"
 1445      676E6564 
 1445      20636861 
 1445      7200
 1446              	.LASF30:
 1447 0189 6D6F6465 		.ascii	"modeBitMask\000"
 1447      4269744D 
 1447      61736B00 
 1448              	.LASF20:
 1449 0195 55415254 		.ascii	"UART_IntClock_StopBlock\000"
 1449      5F496E74 
 1449      436C6F63 
 1449      6B5F5374 
 1449      6F70426C 
 1450              	.LASF0:
 1451 01ad 7369676E 		.ascii	"signed char\000"
 1451      65642063 
 1451      68617200 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 37


 1452              	.LASF7:
 1453 01b9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1453      206C6F6E 
 1453      6720756E 
 1453      7369676E 
 1453      65642069 
 1454              	.LASF8:
 1455 01d0 756E7369 		.ascii	"unsigned int\000"
 1455      676E6564 
 1455      20696E74 
 1455      00
 1456              	.LASF3:
 1457 01dd 73686F72 		.ascii	"short unsigned int\000"
 1457      7420756E 
 1457      7369676E 
 1457      65642069 
 1457      6E7400
 1458              	.LASF13:
 1459 01f0 63686172 		.ascii	"char\000"
 1459      00
 1460              	.LASF31:
 1461 01f5 55415254 		.ascii	"UART_IntClock_ClearModeRegister\000"
 1461      5F496E74 
 1461      436C6F63 
 1461      6B5F436C 
 1461      6561724D 
 1462              	.LASF37:
 1463 0215 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_IntClock.c\000"
 1463      6E657261 
 1463      7465645F 
 1463      536F7572 
 1463      63655C50 
 1464              	.LASF28:
 1465 023e 63757272 		.ascii	"currSrc\000"
 1465      53726300 
 1466              	.LASF26:
 1467 0246 6F6C6444 		.ascii	"oldDivider\000"
 1467      69766964 
 1467      657200
 1468              	.LASF14:
 1469 0251 72656738 		.ascii	"reg8\000"
 1469      00
 1470              	.LASF5:
 1471 0256 6C6F6E67 		.ascii	"long unsigned int\000"
 1471      20756E73 
 1471      69676E65 
 1471      6420696E 
 1471      7400
 1472              	.LASF12:
 1473 0268 646F7562 		.ascii	"double\000"
 1473      6C6500
 1474              	.LASF19:
 1475 026f 55415254 		.ascii	"UART_IntClock_Stop\000"
 1475      5F496E74 
 1475      436C6F63 
 1475      6B5F5374 
 1475      6F7000
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccAIOfSt.s 			page 38


 1476              	.LASF27:
 1477 0282 656E6162 		.ascii	"enabled\000"
 1477      6C656400 
 1478              	.LASF21:
 1479 028a 55415254 		.ascii	"UART_IntClock_StandbyPower\000"
 1479      5F496E74 
 1479      436C6F63 
 1479      6B5F5374 
 1479      616E6462 
 1480              	.LASF38:
 1481 02a5 443A5C45 		.ascii	"D:\\Eih3Cloud\\Projet Programme\\Module HF\\5\\Modu"
 1481      69683343 
 1481      6C6F7564 
 1481      5C50726F 
 1481      6A657420 
 1482 02d3 6C652048 		.ascii	"le HF.cydsn\000"
 1482      462E6379 
 1482      64736E00 
 1483              	.LASF29:
 1484 02df 55415254 		.ascii	"UART_IntClock_SetModeRegister\000"
 1484      5F496E74 
 1484      436C6F63 
 1484      6B5F5365 
 1484      744D6F64 
 1485              	.LASF22:
 1486 02fd 55415254 		.ascii	"UART_IntClock_SetDividerRegister\000"
 1486      5F496E74 
 1486      436C6F63 
 1486      6B5F5365 
 1486      74446976 
 1487              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
