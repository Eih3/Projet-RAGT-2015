ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_Init,"ax",%progbits
  19              		.align	1
  20              		.global	UART_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_Init, %function
  24              	UART_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART.c"
   1:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC5/UART.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/UART.c **** *
   5:.\Generated_Source\PSoC5/UART.c **** * Description:
   6:.\Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART.c **** *
   8:.\Generated_Source\PSoC5/UART.c **** * Note:
   9:.\Generated_Source\PSoC5/UART.c **** *
  10:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART.c **** 
  17:.\Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART.c **** 
  22:.\Generated_Source\PSoC5/UART.c **** 
  23:.\Generated_Source\PSoC5/UART.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART.c **** 
  27:.\Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART.c **** 
  29:.\Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 2


  32:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART.c **** 
  35:.\Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART.c **** 
  48:.\Generated_Source\PSoC5/UART.c **** 
  49:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART.c **** *
  53:.\Generated_Source\PSoC5/UART.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:.\Generated_Source\PSoC5/UART.c **** *
  59:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART.c **** *  None.
  61:.\Generated_Source\PSoC5/UART.c **** *
  62:.\Generated_Source\PSoC5/UART.c **** * Return:
  63:.\Generated_Source\PSoC5/UART.c **** *  None.
  64:.\Generated_Source\PSoC5/UART.c **** *
  65:.\Generated_Source\PSoC5/UART.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:.\Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:.\Generated_Source\PSoC5/UART.c **** *
  72:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART.c **** *  No.
  74:.\Generated_Source\PSoC5/UART.c **** *
  75:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:.\Generated_Source\PSoC5/UART.c **** {
  78:.\Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:.\Generated_Source\PSoC5/UART.c ****     {
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:.\Generated_Source\PSoC5/UART.c ****     }
  84:.\Generated_Source\PSoC5/UART.c **** 
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:.\Generated_Source\PSoC5/UART.c **** }
  87:.\Generated_Source\PSoC5/UART.c **** 
  88:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 3


  89:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART.c **** *
  93:.\Generated_Source\PSoC5/UART.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:.\Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART.c **** *
  99:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART.c **** *  None.
 101:.\Generated_Source\PSoC5/UART.c **** *
 102:.\Generated_Source\PSoC5/UART.c **** * Return:
 103:.\Generated_Source\PSoC5/UART.c **** *  None.
 104:.\Generated_Source\PSoC5/UART.c **** *
 105:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:.\Generated_Source\PSoC5/UART.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 108:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART.c **** 
 110:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART.c **** 
 117:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART.c **** 
 123:.\Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  32              		.loc 1 124 0
  33 0000 074B     		ldr	r3, .L2
  34 0002 7222     		movs	r2, #114
  35 0004 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  36              		.loc 1 126 0
  37 0006 2022     		movs	r2, #32
  38 0008 03F8032C 		strb	r2, [r3, #-3]
 127:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART.c **** 
 129:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 4


 134:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART.c **** 
 136:.\Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  39              		.loc 1 138 0
  40 000c A3F5B073 		sub	r3, r3, #352
  41 0010 0622     		movs	r2, #6
  42 0012 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  43              		.loc 1 139 0
  44 0014 4722     		movs	r2, #71
  45 0016 1A74     		strb	r2, [r3, #16]
 140:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART.c ****         #else
 142:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART.c **** 
 146:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART.c ****         #else
 150:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  46              		.loc 1 150 0
  47 0018 0022     		movs	r2, #0
  48 001a 83F85F20 		strb	r2, [r3, #95]
  49 001e 7047     		bx	lr
  50              	.L3:
  51              		.align	2
  52              	.L2:
  53 0020 87650040 		.word	1073767815
  54              		.cfi_endproc
  55              	.LFE1:
  56              		.size	UART_Init, .-UART_Init
  57              		.section	.text.UART_Enable,"ax",%progbits
  58              		.align	1
  59              		.global	UART_Enable
  60              		.thumb
  61              		.thumb_func
  62              		.type	UART_Enable, %function
  63              	UART_Enable:
  64              	.LFB2:
 151:.\Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART.c **** 
 153:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART.c **** 
 155:.\Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART.c **** }
 161:.\Generated_Source\PSoC5/UART.c **** 
 162:.\Generated_Source\PSoC5/UART.c **** 
 163:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 5


 165:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART.c **** *
 167:.\Generated_Source\PSoC5/UART.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:.\Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART.c **** 
 173:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART.c **** *  None.
 175:.\Generated_Source\PSoC5/UART.c **** *
 176:.\Generated_Source\PSoC5/UART.c **** * Return:
 177:.\Generated_Source\PSoC5/UART.c **** *  None.
 178:.\Generated_Source\PSoC5/UART.c **** *
 179:.\Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART.c **** *
 182:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:.\Generated_Source\PSoC5/UART.c **** {
  65              		.loc 1 184 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  73              		.loc 1 186 0
  74 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  75              	.LVL0:
 187:.\Generated_Source\PSoC5/UART.c **** 
 188:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  76              		.loc 1 190 0
  77 0006 0C4B     		ldr	r3, .L5
 186:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  78              		.loc 1 186 0
  79 0008 0446     		mov	r4, r0
  80              	.LVL1:
  81              		.loc 1 190 0
  82 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 191:.\Generated_Source\PSoC5/UART.c **** 
 192:.\Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  83              		.loc 1 193 0
  84 000c 033B     		subs	r3, r3, #3
 190:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  85              		.loc 1 190 0
  86 000e 42F02002 		orr	r2, r2, #32
  87 0012 DA70     		strb	r2, [r3, #3]
  88              		.loc 1 193 0
  89 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  90 0016 42F01002 		orr	r2, r2, #16
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 6


  91 001a 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/UART.c **** 
 195:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART.c **** 
 198:.\Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART.c **** 
 204:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART.c **** 
 210:.\Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  92              		.loc 1 211 0
  93 001c 13F8FE2C 		ldrb	r2, [r3, #-254]	@ zero_extendqisi2
  94 0020 42F01002 		orr	r2, r2, #16
  95 0024 03F8FE2C 		strb	r2, [r3, #-254]
 212:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART.c **** 
 218:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  96              		.loc 1 219 0
  97 0028 FFF7FEFF 		bl	UART_IntClock_Start
  98              	.LVL2:
 220:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART.c **** 
 222:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 222 0
 100 002c 2046     		mov	r0, r4
 223:.\Generated_Source\PSoC5/UART.c **** }
 101              		.loc 1 223 0
 102 002e BDE81040 		pop	{r4, lr}
 103              	.LVL3:
 222:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 104              		.loc 1 222 0
 105 0032 FFF7FEBF 		b	CyExitCriticalSection
 106              	.LVL4:
 107              	.L6:
 108 0036 00BF     		.align	2
 109              	.L5:
 110 0038 97650040 		.word	1073767831
 111              		.cfi_endproc
 112              	.LFE2:
 113              		.size	UART_Enable, .-UART_Enable
 114              		.section	.text.UART_Start,"ax",%progbits
 115              		.align	1
 116              		.global	UART_Start
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 7


 117              		.thumb
 118              		.thumb_func
 119              		.type	UART_Start, %function
 120              	UART_Start:
 121              	.LFB0:
  77:.\Generated_Source\PSoC5/UART.c **** {
 122              		.loc 1 77 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 10B5     		push	{r4, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
 130              		.loc 1 79 0
 131 0002 054C     		ldr	r4, .L10
 132 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 133 0006 1BB9     		cbnz	r3, .L8
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
 134              		.loc 1 81 0
 135 0008 FFF7FEFF 		bl	UART_Init
 136              	.LVL5:
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 137              		.loc 1 82 0
 138 000c 0123     		movs	r3, #1
 139 000e 2370     		strb	r3, [r4]
 140              	.L8:
  86:.\Generated_Source\PSoC5/UART.c **** }
 141              		.loc 1 86 0
 142 0010 BDE81040 		pop	{r4, lr}
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
 143              		.loc 1 85 0
 144 0014 FFF7FEBF 		b	UART_Enable
 145              	.LVL6:
 146              	.L11:
 147              		.align	2
 148              	.L10:
 149 0018 00000000 		.word	.LANCHOR0
 150              		.cfi_endproc
 151              	.LFE0:
 152              		.size	UART_Start, .-UART_Start
 153              		.section	.text.UART_Stop,"ax",%progbits
 154              		.align	1
 155              		.global	UART_Stop
 156              		.thumb
 157              		.thumb_func
 158              		.type	UART_Stop, %function
 159              	UART_Stop:
 160              	.LFB3:
 224:.\Generated_Source\PSoC5/UART.c **** 
 225:.\Generated_Source\PSoC5/UART.c **** 
 226:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART.c **** *
 230:.\Generated_Source\PSoC5/UART.c **** * Summary:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 8


 231:.\Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART.c **** *
 233:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART.c **** *  None.
 235:.\Generated_Source\PSoC5/UART.c **** *
 236:.\Generated_Source\PSoC5/UART.c **** * Return:
 237:.\Generated_Source\PSoC5/UART.c **** *  None.
 238:.\Generated_Source\PSoC5/UART.c **** *
 239:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:.\Generated_Source\PSoC5/UART.c **** {
 161              		.loc 1 241 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 10B5     		push	{r4, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 169              		.loc 1 243 0
 170 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 171              	.LVL7:
 244:.\Generated_Source\PSoC5/UART.c **** 
 245:.\Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 172              		.loc 1 247 0
 173 0006 0C4B     		ldr	r3, .L13
 243:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 174              		.loc 1 243 0
 175 0008 0446     		mov	r4, r0
 176              	.LVL8:
 177              		.loc 1 247 0
 178 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 179 000c 02F0DF02 		and	r2, r2, #223
 180 0010 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART.c **** 
 250:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART.c **** 
 256:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 181              		.loc 1 257 0
 182 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 183              	.LVL9:
 258:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART.c **** 
 260:.\Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 184              		.loc 1 262 0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 9


 185 0016 094B     		ldr	r3, .L13+4
 263:.\Generated_Source\PSoC5/UART.c **** 
 264:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART.c **** 
 269:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 271:.\Generated_Source\PSoC5/UART.c **** 
 272:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART.c **** 
 277:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 186              		.loc 1 277 0
 187 0018 2046     		mov	r0, r4
 262:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 188              		.loc 1 262 0
 189 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 190 001c 02F0EF02 		and	r2, r2, #239
 191 0020 1A70     		strb	r2, [r3]
 270:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 192              		.loc 1 270 0
 193 0022 13F8FE2C 		ldrb	r2, [r3, #-254]	@ zero_extendqisi2
 194 0026 02F0EF02 		and	r2, r2, #239
 195 002a 03F8FE2C 		strb	r2, [r3, #-254]
 278:.\Generated_Source\PSoC5/UART.c **** }
 196              		.loc 1 278 0
 197 002e BDE81040 		pop	{r4, lr}
 198              	.LVL10:
 277:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 199              		.loc 1 277 0
 200 0032 FFF7FEBF 		b	CyExitCriticalSection
 201              	.LVL11:
 202              	.L14:
 203 0036 00BF     		.align	2
 204              	.L13:
 205 0038 97650040 		.word	1073767831
 206 003c 94650040 		.word	1073767828
 207              		.cfi_endproc
 208              	.LFE3:
 209              		.size	UART_Stop, .-UART_Stop
 210              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 211              		.align	1
 212              		.global	UART_ReadControlRegister
 213              		.thumb
 214              		.thumb_func
 215              		.type	UART_ReadControlRegister, %function
 216              	UART_ReadControlRegister:
 217              	.LFB4:
 279:.\Generated_Source\PSoC5/UART.c **** 
 280:.\Generated_Source\PSoC5/UART.c **** 
 281:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 10


 284:.\Generated_Source\PSoC5/UART.c **** *
 285:.\Generated_Source\PSoC5/UART.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART.c **** *
 288:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART.c **** *  None.
 290:.\Generated_Source\PSoC5/UART.c **** *
 291:.\Generated_Source\PSoC5/UART.c **** * Return:
 292:.\Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART.c **** *
 294:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART.c **** {
 218              		.loc 1 296 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART.c ****     #else
 300:.\Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART.c **** }
 223              		.loc 1 302 0
 224 0000 0020     		movs	r0, #0
 225 0002 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE4:
 228              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 229              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 230              		.align	1
 231              		.global	UART_WriteControlRegister
 232              		.thumb
 233              		.thumb_func
 234              		.type	UART_WriteControlRegister, %function
 235              	UART_WriteControlRegister:
 236              	.LFB5:
 303:.\Generated_Source\PSoC5/UART.c **** 
 304:.\Generated_Source\PSoC5/UART.c **** 
 305:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART.c **** *
 309:.\Generated_Source\PSoC5/UART.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART.c **** *
 312:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART.c **** *
 315:.\Generated_Source\PSoC5/UART.c **** * Return:
 316:.\Generated_Source\PSoC5/UART.c **** *  None.
 317:.\Generated_Source\PSoC5/UART.c **** *
 318:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART.c **** {
 237              		.loc 1 320 0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 11


 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL12:
 243 0000 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE5:
 246              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 247              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 248              		.align	1
 249              		.global	UART_SetRxInterruptMode
 250              		.thumb
 251              		.thumb_func
 252              		.type	UART_SetRxInterruptMode, %function
 253              	UART_SetRxInterruptMode:
 254              	.LFB6:
 321:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART.c ****         {
 324:.\Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART.c ****         }
 326:.\Generated_Source\PSoC5/UART.c ****     #else
 327:.\Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART.c **** }
 330:.\Generated_Source\PSoC5/UART.c **** 
 331:.\Generated_Source\PSoC5/UART.c **** 
 332:.\Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART.c ****     *
 337:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART.c ****     *
 340:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART.c ****     *
 352:.\Generated_Source\PSoC5/UART.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART.c ****     *
 355:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART.c ****     *
 358:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 12


 255              		.loc 1 360 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 260              	.LVL13:
 361:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 261              		.loc 1 361 0
 262 0000 014B     		ldr	r3, .L18
 263 0002 1870     		strb	r0, [r3]
 264 0004 7047     		bx	lr
 265              	.L19:
 266 0006 00BF     		.align	2
 267              	.L18:
 268 0008 84650040 		.word	1073767812
 269              		.cfi_endproc
 270              	.LFE6:
 271              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 272              		.section	.text.UART_ReadRxData,"ax",%progbits
 273              		.align	1
 274              		.global	UART_ReadRxData
 275              		.thumb
 276              		.thumb_func
 277              		.type	UART_ReadRxData, %function
 278              	UART_ReadRxData:
 279              	.LFB7:
 362:.\Generated_Source\PSoC5/UART.c ****     }
 363:.\Generated_Source\PSoC5/UART.c **** 
 364:.\Generated_Source\PSoC5/UART.c **** 
 365:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART.c ****     *
 369:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART.c ****     *
 373:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART.c ****     *
 376:.\Generated_Source\PSoC5/UART.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART.c ****     *
 379:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART.c ****     *
 388:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART.c ****     *
 391:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 13


 393:.\Generated_Source\PSoC5/UART.c ****     {
 280              		.loc 1 393 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 394:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART.c **** 
 396:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART.c **** 
 398:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART.c **** 
 401:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART.c **** 
 404:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART.c **** 
 407:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART.c ****         {
 409:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART.c **** 
 412:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART.c ****             {
 414:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART.c ****             }
 416:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART.c **** 
 419:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART.c ****             {
 421:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART.c ****                             */
 430:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART.c ****                         }
 432:.\Generated_Source\PSoC5/UART.c ****                     #else
 433:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART.c ****             }
 437:.\Generated_Source\PSoC5/UART.c ****         }
 438:.\Generated_Source\PSoC5/UART.c ****         else
 439:.\Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART.c ****         }
 442:.\Generated_Source\PSoC5/UART.c **** 
 443:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 14


 445:.\Generated_Source\PSoC5/UART.c ****     #else
 446:.\Generated_Source\PSoC5/UART.c **** 
 447:.\Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 285              		.loc 1 448 0
 286 0000 014B     		ldr	r3, .L21
 287 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 288              	.LVL14:
 449:.\Generated_Source\PSoC5/UART.c **** 
 450:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART.c **** 
 452:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART.c ****     }
 289              		.loc 1 453 0
 290 0004 7047     		bx	lr
 291              	.L22:
 292 0006 00BF     		.align	2
 293              	.L21:
 294 0008 44650040 		.word	1073767748
 295              		.cfi_endproc
 296              	.LFE7:
 297              		.size	UART_ReadRxData, .-UART_ReadRxData
 298              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 299              		.align	1
 300              		.global	UART_ReadRxStatus
 301              		.thumb
 302              		.thumb_func
 303              		.type	UART_ReadRxStatus, %function
 304              	UART_ReadRxStatus:
 305              	.LFB8:
 454:.\Generated_Source\PSoC5/UART.c **** 
 455:.\Generated_Source\PSoC5/UART.c **** 
 456:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART.c ****     *
 460:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART.c ****     *
 464:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART.c ****     *
 467:.\Generated_Source\PSoC5/UART.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART.c ****     *
 470:.\Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART.c ****     *
 476:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 15


 481:.\Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART.c ****     *
 484:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART.c ****     {
 306              		.loc 1 486 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 487:.\Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART.c **** 
 489:.\Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 311              		.loc 1 489 0
 312 0000 024B     		ldr	r3, .L24
 313 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 314              	.LVL15:
 490:.\Generated_Source\PSoC5/UART.c **** 
 491:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART.c ****         {
 494:.\Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART.c ****         }
 497:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART.c **** 
 499:.\Generated_Source\PSoC5/UART.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART.c ****     }
 315              		.loc 1 500 0
 316 0004 00F07F00 		and	r0, r0, #127
 317              	.LVL16:
 318 0008 7047     		bx	lr
 319              	.L25:
 320 000a 00BF     		.align	2
 321              	.L24:
 322 000c 64650040 		.word	1073767780
 323              		.cfi_endproc
 324              	.LFE8:
 325              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 326              		.section	.text.UART_GetChar,"ax",%progbits
 327              		.align	1
 328              		.global	UART_GetChar
 329              		.thumb
 330              		.thumb_func
 331              		.type	UART_GetChar, %function
 332              	UART_GetChar:
 333              	.LFB9:
 501:.\Generated_Source\PSoC5/UART.c **** 
 502:.\Generated_Source\PSoC5/UART.c **** 
 503:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART.c ****     *
 507:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:.\Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 16


 510:.\Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART.c ****     *
 512:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART.c ****     *
 515:.\Generated_Source\PSoC5/UART.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART.c ****     *
 519:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART.c ****     *
 528:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART.c ****     *
 531:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART.c ****     {
 334              		.loc 1 533 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LVL17:
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART.c **** 
 537:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART.c **** 
 541:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART.c **** 
 544:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART.c **** 
 547:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART.c ****         {
 549:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART.c ****             {
 553:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART.c ****             }
 555:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART.c **** 
 558:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART.c ****             {
 560:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 17


 561:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART.c ****                             */
 569:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART.c ****                         }
 571:.\Generated_Source\PSoC5/UART.c ****                     #else
 572:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART.c ****             }
 576:.\Generated_Source\PSoC5/UART.c **** 
 577:.\Generated_Source\PSoC5/UART.c ****         }
 578:.\Generated_Source\PSoC5/UART.c ****         else
 579:.\Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART.c ****                 {
 587:.\Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART.c ****                 }
 589:.\Generated_Source\PSoC5/UART.c ****             }
 590:.\Generated_Source\PSoC5/UART.c ****         }
 591:.\Generated_Source\PSoC5/UART.c **** 
 592:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART.c **** 
 594:.\Generated_Source\PSoC5/UART.c ****     #else
 595:.\Generated_Source\PSoC5/UART.c **** 
 596:.\Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 340              		.loc 1 596 0
 341 0000 074B     		ldr	r3, .L31
 342 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 343 0004 DBB2     		uxtb	r3, r3
 344              	.LVL18:
 597:.\Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 345              		.loc 1 597 0
 346 0006 03F02002 		and	r2, r3, #32
 347 000a 02F0FF00 		and	r0, r2, #255
 348 000e 2AB1     		cbz	r2, .L27
 598:.\Generated_Source\PSoC5/UART.c ****         {
 599:.\Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 349              		.loc 1 600 0
 350 0010 044A     		ldr	r2, .L31+4
 601:.\Generated_Source\PSoC5/UART.c **** 
 602:.\Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 351              		.loc 1 603 0
 352 0012 13F01E0F 		tst	r3, #30
 600:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 18


 353              		.loc 1 600 0
 354 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 355              	.LVL19:
 604:.\Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART.c ****             {
 606:.\Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 356              		.loc 1 606 0
 357 0018 18BF     		it	ne
 358 001a 0020     		movne	r0, #0
 359              	.LVL20:
 360              	.L27:
 607:.\Generated_Source\PSoC5/UART.c ****             }
 608:.\Generated_Source\PSoC5/UART.c ****         }
 609:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART.c **** 
 611:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART.c ****     }
 361              		.loc 1 612 0
 362 001c 7047     		bx	lr
 363              	.L32:
 364 001e 00BF     		.align	2
 365              	.L31:
 366 0020 64650040 		.word	1073767780
 367 0024 44650040 		.word	1073767748
 368              		.cfi_endproc
 369              	.LFE9:
 370              		.size	UART_GetChar, .-UART_GetChar
 371              		.section	.text.UART_GetByte,"ax",%progbits
 372              		.align	1
 373              		.global	UART_GetByte
 374              		.thumb
 375              		.thumb_func
 376              		.type	UART_GetByte, %function
 377              	UART_GetByte:
 378              	.LFB10:
 613:.\Generated_Source\PSoC5/UART.c **** 
 614:.\Generated_Source\PSoC5/UART.c **** 
 615:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART.c ****     *
 619:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART.c ****     *
 623:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART.c ****     *
 626:.\Generated_Source\PSoC5/UART.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART.c ****     *
 630:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART.c ****     *
 633:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 19


 635:.\Generated_Source\PSoC5/UART.c ****     {
 379              		.loc 1 635 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384              	.LBB6:
 385              	.LBB7:
 489:.\Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 386              		.loc 1 489 0
 387 0000 044B     		ldr	r3, .L34
 388 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 389              	.LVL21:
 390              	.LBE7:
 391              	.LBE6:
 392              	.LBB8:
 393              	.LBB9:
 448:.\Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 394              		.loc 1 448 0
 395 0004 203B     		subs	r3, r3, #32
 396 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397              	.LVL22:
 398              	.LBE9:
 399              	.LBE8:
 636:.\Generated_Source\PSoC5/UART.c ****         
 637:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:.\Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART.c ****     #else
 646:.\Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 400              		.loc 1 646 0
 401 0008 00F07F00 		and	r0, r0, #127
 402              	.LVL23:
 647:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART.c ****         
 649:.\Generated_Source\PSoC5/UART.c ****     }
 403              		.loc 1 649 0
 404 000c 43EA0020 		orr	r0, r3, r0, lsl #8
 405 0010 7047     		bx	lr
 406              	.L35:
 407 0012 00BF     		.align	2
 408              	.L34:
 409 0014 64650040 		.word	1073767780
 410              		.cfi_endproc
 411              	.LFE10:
 412              		.size	UART_GetByte, .-UART_GetByte
 413              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 414              		.align	1
 415              		.global	UART_GetRxBufferSize
 416              		.thumb
 417              		.thumb_func
 418              		.type	UART_GetRxBufferSize, %function
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 20


 419              	UART_GetRxBufferSize:
 420              	.LFB11:
 650:.\Generated_Source\PSoC5/UART.c **** 
 651:.\Generated_Source\PSoC5/UART.c **** 
 652:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART.c ****     *
 656:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART.c ****     *
 664:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART.c ****     *
 667:.\Generated_Source\PSoC5/UART.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART.c ****     *
 671:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART.c ****     *
 676:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART.c ****     *
 679:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART.c ****     *
 682:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART.c ****                                                             
 685:.\Generated_Source\PSoC5/UART.c ****     {
 421              		.loc 1 685 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 686:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART.c **** 
 688:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART.c **** 
 690:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART.c **** 
 693:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART.c ****         {
 695:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART.c ****             {
 697:.\Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART.c ****             }
 699:.\Generated_Source\PSoC5/UART.c ****             else
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 21


 700:.\Generated_Source\PSoC5/UART.c ****             {
 701:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART.c ****             }
 703:.\Generated_Source\PSoC5/UART.c ****         }
 704:.\Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART.c ****         {
 706:.\Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART.c ****         }
 708:.\Generated_Source\PSoC5/UART.c ****         else
 709:.\Generated_Source\PSoC5/UART.c ****         {
 710:.\Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART.c ****         }
 712:.\Generated_Source\PSoC5/UART.c **** 
 713:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART.c **** 
 715:.\Generated_Source\PSoC5/UART.c ****     #else
 716:.\Generated_Source\PSoC5/UART.c **** 
 717:.\Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 426              		.loc 1 718 0
 427 0000 024B     		ldr	r3, .L37
 428 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 429              	.LVL24:
 719:.\Generated_Source\PSoC5/UART.c **** 
 720:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART.c **** 
 722:.\Generated_Source\PSoC5/UART.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART.c ****     }
 430              		.loc 1 723 0
 431 0004 C0F34010 		ubfx	r0, r0, #5, #1
 432              	.LVL25:
 433 0008 7047     		bx	lr
 434              	.L38:
 435 000a 00BF     		.align	2
 436              	.L37:
 437 000c 64650040 		.word	1073767780
 438              		.cfi_endproc
 439              	.LFE11:
 440              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 441              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 442              		.align	1
 443              		.global	UART_ClearRxBuffer
 444              		.thumb
 445              		.thumb_func
 446              		.type	UART_ClearRxBuffer, %function
 447              	UART_ClearRxBuffer:
 448              	.LFB12:
 724:.\Generated_Source\PSoC5/UART.c **** 
 725:.\Generated_Source\PSoC5/UART.c **** 
 726:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART.c ****     *
 730:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART.c ****     *
 733:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 22


 734:.\Generated_Source\PSoC5/UART.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART.c ****     *
 736:.\Generated_Source\PSoC5/UART.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART.c ****     *
 739:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART.c ****     *
 745:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART.c ****     *
 748:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART.c ****     *
 753:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART.c ****     *
 756:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART.c ****     {
 449              		.loc 1 758 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 08B5     		push	{r3, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 3, -8
 456              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART.c **** 
 761:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 457              		.loc 1 762 0
 458 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 459              	.LVL26:
 763:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 460              		.loc 1 763 0
 461 0006 064B     		ldr	r3, .L40
 462 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 463 000a 42F00102 		orr	r2, r2, #1
 464 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 465              		.loc 1 764 0
 466 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 467 0012 02F0FE02 		and	r2, r2, #254
 468 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC5/UART.c **** 
 767:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART.c **** 
 769:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 23


 771:.\Generated_Source\PSoC5/UART.c **** 
 772:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART.c **** 
 777:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART.c **** 
 779:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART.c **** 
 781:.\Generated_Source\PSoC5/UART.c ****     }
 469              		.loc 1 781 0
 470 0018 BDE80840 		pop	{r3, lr}
 765:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 471              		.loc 1 765 0
 472 001c FFF7FEBF 		b	CyExitCriticalSection
 473              	.LVL27:
 474              	.L41:
 475              		.align	2
 476              	.L40:
 477 0020 94650040 		.word	1073767828
 478              		.cfi_endproc
 479              	.LFE12:
 480              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 481              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 482              		.align	1
 483              		.global	UART_SetRxAddressMode
 484              		.thumb
 485              		.thumb_func
 486              		.type	UART_SetRxAddressMode, %function
 487              	UART_SetRxAddressMode:
 488              	.LFB13:
 782:.\Generated_Source\PSoC5/UART.c **** 
 783:.\Generated_Source\PSoC5/UART.c **** 
 784:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART.c ****     *
 788:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART.c ****     *
 792:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART.c ****     *
 804:.\Generated_Source\PSoC5/UART.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 24


 807:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART.c ****     *
 812:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART.c ****                                                         
 815:.\Generated_Source\PSoC5/UART.c ****     {
 489              		.loc 1 815 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL28:
 495 0000 7047     		bx	lr
 496              		.cfi_endproc
 497              	.LFE13:
 498              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 499              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 500              		.align	1
 501              		.global	UART_SetRxAddress1
 502              		.thumb
 503              		.thumb_func
 504              		.type	UART_SetRxAddress1, %function
 505              	UART_SetRxAddress1:
 506              	.LFB14:
 816:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART.c ****                 {
 820:.\Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART.c ****                 }
 822:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART.c **** 
 828:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART.c ****             {
 837:.\Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART.c ****             }
 839:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART.c ****     }
 841:.\Generated_Source\PSoC5/UART.c **** 
 842:.\Generated_Source\PSoC5/UART.c **** 
 843:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 25


 846:.\Generated_Source\PSoC5/UART.c ****     *
 847:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART.c ****     *
 850:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART.c ****     *
 853:.\Generated_Source\PSoC5/UART.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART.c ****     *
 856:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART.c ****     {
 507              		.loc 1 858 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL29:
 859:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 513              		.loc 1 859 0
 514 0000 014B     		ldr	r3, .L44
 515 0002 1870     		strb	r0, [r3]
 516 0004 7047     		bx	lr
 517              	.L45:
 518 0006 00BF     		.align	2
 519              	.L44:
 520 0008 24650040 		.word	1073767716
 521              		.cfi_endproc
 522              	.LFE14:
 523              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 524              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 525              		.align	1
 526              		.global	UART_SetRxAddress2
 527              		.thumb
 528              		.thumb_func
 529              		.type	UART_SetRxAddress2, %function
 530              	UART_SetRxAddress2:
 531              	.LFB15:
 860:.\Generated_Source\PSoC5/UART.c ****     }
 861:.\Generated_Source\PSoC5/UART.c **** 
 862:.\Generated_Source\PSoC5/UART.c **** 
 863:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART.c ****     *
 867:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART.c ****     *
 870:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART.c ****     *
 873:.\Generated_Source\PSoC5/UART.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART.c ****     *
 876:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 26


 878:.\Generated_Source\PSoC5/UART.c ****     {
 532              		.loc 1 878 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL30:
 879:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 538              		.loc 1 879 0
 539 0000 014B     		ldr	r3, .L47
 540 0002 1870     		strb	r0, [r3]
 541 0004 7047     		bx	lr
 542              	.L48:
 543 0006 00BF     		.align	2
 544              	.L47:
 545 0008 34650040 		.word	1073767732
 546              		.cfi_endproc
 547              	.LFE15:
 548              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 549              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 550              		.align	1
 551              		.global	UART_SetTxInterruptMode
 552              		.thumb
 553              		.thumb_func
 554              		.type	UART_SetTxInterruptMode, %function
 555              	UART_SetTxInterruptMode:
 556              	.LFB16:
 880:.\Generated_Source\PSoC5/UART.c ****     }
 881:.\Generated_Source\PSoC5/UART.c **** 
 882:.\Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART.c **** 
 884:.\Generated_Source\PSoC5/UART.c **** 
 885:.\Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART.c ****     *
 890:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART.c ****     *
 894:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART.c ****     *
 901:.\Generated_Source\PSoC5/UART.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART.c ****     *
 904:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART.c ****     *
 907:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 27


 557              		.loc 1 909 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              	.LVL31:
 910:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 563              		.loc 1 910 0
 564 0000 014B     		ldr	r3, .L50
 565 0002 1870     		strb	r0, [r3]
 566 0004 7047     		bx	lr
 567              	.L51:
 568 0006 00BF     		.align	2
 569              	.L50:
 570 0008 86640040 		.word	1073767558
 571              		.cfi_endproc
 572              	.LFE16:
 573              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 574              		.section	.text.UART_WriteTxData,"ax",%progbits
 575              		.align	1
 576              		.global	UART_WriteTxData
 577              		.thumb
 578              		.thumb_func
 579              		.type	UART_WriteTxData, %function
 580              	UART_WriteTxData:
 581              	.LFB17:
 911:.\Generated_Source\PSoC5/UART.c ****     }
 912:.\Generated_Source\PSoC5/UART.c **** 
 913:.\Generated_Source\PSoC5/UART.c **** 
 914:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART.c ****     *
 918:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART.c ****     *
 923:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART.c ****     *
 926:.\Generated_Source\PSoC5/UART.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART.c ****     * None.
 928:.\Generated_Source\PSoC5/UART.c ****     *
 929:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART.c ****     *
 938:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART.c ****     *
 941:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 28


 942:.\Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART.c ****     {
 582              		.loc 1 943 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587              	.LVL32:
 944:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 588              		.loc 1 945 0
 589 0000 024B     		ldr	r3, .L57
 590 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 591 0004 0BB1     		cbz	r3, .L52
 946:.\Generated_Source\PSoC5/UART.c ****         {
 947:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART.c **** 
 949:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART.c **** 
 952:.\Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART.c ****             {
 955:.\Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART.c ****             }
 958:.\Generated_Source\PSoC5/UART.c ****             else
 959:.\Generated_Source\PSoC5/UART.c ****             {
 960:.\Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART.c ****                 {
 962:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART.c ****                 }
 964:.\Generated_Source\PSoC5/UART.c **** 
 965:.\Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART.c **** 
 967:.\Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART.c ****             }
 970:.\Generated_Source\PSoC5/UART.c **** 
 971:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART.c **** 
 973:.\Generated_Source\PSoC5/UART.c ****         #else
 974:.\Generated_Source\PSoC5/UART.c **** 
 975:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 592              		.loc 1 976 0
 593 0006 024B     		ldr	r3, .L57+4
 594 0008 1870     		strb	r0, [r3]
 595              	.L52:
 596 000a 7047     		bx	lr
 597              	.L58:
 598              		.align	2
 599              	.L57:
 600 000c 00000000 		.word	.LANCHOR0
 601 0010 46640040 		.word	1073767494
 602              		.cfi_endproc
 603              	.LFE17:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 29


 604              		.size	UART_WriteTxData, .-UART_WriteTxData
 605              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 606              		.align	1
 607              		.global	UART_ReadTxStatus
 608              		.thumb
 609              		.thumb_func
 610              		.type	UART_ReadTxStatus, %function
 611              	UART_ReadTxStatus:
 612              	.LFB18:
 977:.\Generated_Source\PSoC5/UART.c **** 
 978:.\Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART.c ****         }
 980:.\Generated_Source\PSoC5/UART.c ****     }
 981:.\Generated_Source\PSoC5/UART.c **** 
 982:.\Generated_Source\PSoC5/UART.c **** 
 983:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART.c ****     *
 987:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART.c ****     *
 990:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART.c ****     *
 993:.\Generated_Source\PSoC5/UART.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART.c ****     *
 996:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART.c ****     *
1002:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART.c ****     {
 613              		.loc 1 1004 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 618              		.loc 1 1005 0
 619 0000 014B     		ldr	r3, .L60
 620 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/UART.c ****     }
 621              		.loc 1 1006 0
 622 0004 7047     		bx	lr
 623              	.L61:
 624 0006 00BF     		.align	2
 625              	.L60:
 626 0008 66640040 		.word	1073767526
 627              		.cfi_endproc
 628              	.LFE18:
 629              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 630              		.section	.text.UART_PutChar,"ax",%progbits
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 30


 631              		.align	1
 632              		.global	UART_PutChar
 633              		.thumb
 634              		.thumb_func
 635              		.type	UART_PutChar, %function
 636              	UART_PutChar:
 637              	.LFB19:
1007:.\Generated_Source\PSoC5/UART.c **** 
1008:.\Generated_Source\PSoC5/UART.c **** 
1009:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART.c ****     *
1013:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART.c ****     *
1018:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART.c ****     *
1021:.\Generated_Source\PSoC5/UART.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART.c ****     *
1024:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART.c ****     *
1034:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART.c ****     *
1037:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART.c ****     *
1040:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART.c ****     {
 638              		.loc 1 1042 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643              	.LVL33:
 644              	.L64:
1043:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART.c ****         */
1048:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 31


1050:.\Generated_Source\PSoC5/UART.c **** 
1051:.\Generated_Source\PSoC5/UART.c ****         do
1052:.\Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART.c **** 
1054:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > 255) */
1058:.\Generated_Source\PSoC5/UART.c **** 
1059:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:.\Generated_Source\PSoC5/UART.c **** 
1062:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > 255) */
1066:.\Generated_Source\PSoC5/UART.c ****         }
1067:.\Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART.c **** 
1071:.\Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART.c ****         {
1074:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART.c ****         }
1077:.\Generated_Source\PSoC5/UART.c ****         else
1078:.\Generated_Source\PSoC5/UART.c ****         {
1079:.\Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART.c ****             {
1081:.\Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART.c ****             }
1083:.\Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART.c **** 
1087:.\Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > 255) */
1091:.\Generated_Source\PSoC5/UART.c **** 
1092:.\Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART.c **** 
1094:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > 255) */
1097:.\Generated_Source\PSoC5/UART.c **** 
1098:.\Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART.c ****             {
1100:.\Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART.c ****             }
1103:.\Generated_Source\PSoC5/UART.c ****         }
1104:.\Generated_Source\PSoC5/UART.c **** 
1105:.\Generated_Source\PSoC5/UART.c ****     #else
1106:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 32


1107:.\Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 645              		.loc 1 1107 0 discriminator 1
 646 0000 034B     		ldr	r3, .L65
 647 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 648 0004 5B07     		lsls	r3, r3, #29
 649 0006 FBD4     		bmi	.L64
1108:.\Generated_Source\PSoC5/UART.c ****         {
1109:.\Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART.c ****         }
1111:.\Generated_Source\PSoC5/UART.c **** 
1112:.\Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 650              		.loc 1 1113 0
 651 0008 024B     		ldr	r3, .L65+4
 652 000a 1870     		strb	r0, [r3]
 653 000c 7047     		bx	lr
 654              	.L66:
 655 000e 00BF     		.align	2
 656              	.L65:
 657 0010 66640040 		.word	1073767526
 658 0014 46640040 		.word	1073767494
 659              		.cfi_endproc
 660              	.LFE19:
 661              		.size	UART_PutChar, .-UART_PutChar
 662              		.section	.text.UART_PutString,"ax",%progbits
 663              		.align	1
 664              		.global	UART_PutString
 665              		.thumb
 666              		.thumb_func
 667              		.type	UART_PutString, %function
 668              	UART_PutString:
 669              	.LFB20:
1114:.\Generated_Source\PSoC5/UART.c **** 
1115:.\Generated_Source\PSoC5/UART.c ****     #endif /* End (UART_TX_INTERRUPT_ENABLED) */
1116:.\Generated_Source\PSoC5/UART.c ****     }
1117:.\Generated_Source\PSoC5/UART.c **** 
1118:.\Generated_Source\PSoC5/UART.c **** 
1119:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART.c ****     *
1123:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART.c ****     *
1126:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART.c ****     *
1129:.\Generated_Source\PSoC5/UART.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART.c ****     *
1132:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART.c ****     *
1136:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 33


1139:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART.c ****     *
1144:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART.c ****     {
 670              		.loc 1 1146 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              	.LVL34:
 675 0000 38B5     		push	{r3, r4, r5, lr}
 676              		.cfi_def_cfa_offset 16
 677              		.cfi_offset 3, -16
 678              		.cfi_offset 4, -12
 679              		.cfi_offset 5, -8
 680              		.cfi_offset 14, -4
1147:.\Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC5/UART.c **** 
1149:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 681              		.loc 1 1150 0
 682 0002 064B     		ldr	r3, .L72
1146:.\Generated_Source\PSoC5/UART.c ****     {
 683              		.loc 1 1146 0
 684 0004 0546     		mov	r5, r0
 685              		.loc 1 1150 0
 686 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 687 0008 3BB1     		cbz	r3, .L67
 688 000a 0024     		movs	r4, #0
 689              	.LVL35:
 690              	.L69:
1151:.\Generated_Source\PSoC5/UART.c ****         {
1152:.\Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 691              		.loc 1 1153 0 discriminator 1
 692 000c A3B2     		uxth	r3, r4
 693 000e E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 694 0010 0134     		adds	r4, r4, #1
 695              	.LVL36:
 696 0012 10B1     		cbz	r0, .L67
1154:.\Generated_Source\PSoC5/UART.c ****             {
1155:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 697              		.loc 1 1155 0
 698 0014 FFF7FEFF 		bl	UART_PutChar
 699              	.LVL37:
 700 0018 F8E7     		b	.L69
 701              	.LVL38:
 702              	.L67:
 703 001a 38BD     		pop	{r3, r4, r5, pc}
 704              	.LVL39:
 705              	.L73:
 706              		.align	2
 707              	.L72:
 708 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 34


 709              		.cfi_endproc
 710              	.LFE20:
 711              		.size	UART_PutString, .-UART_PutString
 712              		.section	.text.UART_PutArray,"ax",%progbits
 713              		.align	1
 714              		.global	UART_PutArray
 715              		.thumb
 716              		.thumb_func
 717              		.type	UART_PutArray, %function
 718              	UART_PutArray:
 719              	.LFB21:
1156:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1157:.\Generated_Source\PSoC5/UART.c ****             }
1158:.\Generated_Source\PSoC5/UART.c ****         }
1159:.\Generated_Source\PSoC5/UART.c ****     }
1160:.\Generated_Source\PSoC5/UART.c **** 
1161:.\Generated_Source\PSoC5/UART.c **** 
1162:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART.c ****     *
1166:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART.c ****     *
1170:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART.c ****     *
1175:.\Generated_Source\PSoC5/UART.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART.c ****     *
1178:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART.c ****     *
1182:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART.c ****     *
1185:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART.c ****     *
1190:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART.c ****     {
 720              		.loc 1 1193 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              	.LVL40:
 725 0000 70B5     		push	{r4, r5, r6, lr}
 726              		.cfi_def_cfa_offset 16
 727              		.cfi_offset 4, -16
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 35


 728              		.cfi_offset 5, -12
 729              		.cfi_offset 6, -8
 730              		.cfi_offset 14, -4
1194:.\Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/UART.c **** 
1196:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 731              		.loc 1 1197 0
 732 0002 074B     		ldr	r3, .L79
1193:.\Generated_Source\PSoC5/UART.c ****     {
 733              		.loc 1 1193 0
 734 0004 0546     		mov	r5, r0
 735              		.loc 1 1197 0
 736 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1193:.\Generated_Source\PSoC5/UART.c ****     {
 737              		.loc 1 1193 0
 738 0008 0E46     		mov	r6, r1
 739              		.loc 1 1197 0
 740 000a 43B1     		cbz	r3, .L74
 741 000c 0024     		movs	r4, #0
 742              	.LVL41:
 743              	.L76:
1198:.\Generated_Source\PSoC5/UART.c ****         {
1199:.\Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 744              		.loc 1 1199 0 discriminator 1
 745 000e E3B2     		uxtb	r3, r4
 746 0010 B342     		cmp	r3, r6
 747 0012 04D2     		bcs	.L74
1200:.\Generated_Source\PSoC5/UART.c ****             {
1201:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 748              		.loc 1 1201 0
 749 0014 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 750 0016 FFF7FEFF 		bl	UART_PutChar
 751              	.LVL42:
 752 001a 0134     		adds	r4, r4, #1
 753              	.LVL43:
 754 001c F7E7     		b	.L76
 755              	.LVL44:
 756              	.L74:
 757 001e 70BD     		pop	{r4, r5, r6, pc}
 758              	.LVL45:
 759              	.L80:
 760              		.align	2
 761              	.L79:
 762 0020 00000000 		.word	.LANCHOR0
 763              		.cfi_endproc
 764              	.LFE21:
 765              		.size	UART_PutArray, .-UART_PutArray
 766              		.section	.text.UART_PutCRLF,"ax",%progbits
 767              		.align	1
 768              		.global	UART_PutCRLF
 769              		.thumb
 770              		.thumb_func
 771              		.type	UART_PutCRLF, %function
 772              	UART_PutCRLF:
 773              	.LFB22:
1202:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 36


1203:.\Generated_Source\PSoC5/UART.c ****             }
1204:.\Generated_Source\PSoC5/UART.c ****         }
1205:.\Generated_Source\PSoC5/UART.c ****     }
1206:.\Generated_Source\PSoC5/UART.c **** 
1207:.\Generated_Source\PSoC5/UART.c **** 
1208:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART.c ****     *
1212:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART.c ****     *
1216:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART.c ****     *
1219:.\Generated_Source\PSoC5/UART.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART.c ****     *
1222:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART.c ****     *
1226:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART.c ****     *
1229:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART.c ****     {
 774              		.loc 1 1231 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL46:
 779 0000 08B5     		push	{r3, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 3, -8
 782              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 783              		.loc 1 1233 0
 784 0002 074B     		ldr	r3, .L83
 785 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 786 0006 4BB1     		cbz	r3, .L81
1234:.\Generated_Source\PSoC5/UART.c ****         {
1235:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 787              		.loc 1 1235 0
 788 0008 FFF7FEFF 		bl	UART_PutChar
 789              	.LVL47:
1236:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 790              		.loc 1 1236 0
 791 000c 0D20     		movs	r0, #13
 792 000e FFF7FEFF 		bl	UART_PutChar
 793              	.LVL48:
1237:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
1238:.\Generated_Source\PSoC5/UART.c ****         }
1239:.\Generated_Source\PSoC5/UART.c ****     }
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 37


 794              		.loc 1 1239 0
 795 0012 BDE80840 		pop	{r3, lr}
1237:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 796              		.loc 1 1237 0
 797 0016 0A20     		movs	r0, #10
 798 0018 FFF7FEBF 		b	UART_PutChar
 799              	.LVL49:
 800              	.L81:
 801 001c 08BD     		pop	{r3, pc}
 802              	.L84:
 803 001e 00BF     		.align	2
 804              	.L83:
 805 0020 00000000 		.word	.LANCHOR0
 806              		.cfi_endproc
 807              	.LFE22:
 808              		.size	UART_PutCRLF, .-UART_PutCRLF
 809              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 810              		.align	1
 811              		.global	UART_GetTxBufferSize
 812              		.thumb
 813              		.thumb_func
 814              		.type	UART_GetTxBufferSize, %function
 815              	UART_GetTxBufferSize:
 816              	.LFB23:
1240:.\Generated_Source\PSoC5/UART.c **** 
1241:.\Generated_Source\PSoC5/UART.c **** 
1242:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART.c ****     *
1246:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not take to account.
1254:.\Generated_Source\PSoC5/UART.c ****     *
1255:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART.c ****     *
1258:.\Generated_Source\PSoC5/UART.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART.c ****     *
1262:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART.c ****     *
1266:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART.c ****     *
1269:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART.c ****     *
1272:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 38


1273:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART.c ****                                                             
1275:.\Generated_Source\PSoC5/UART.c ****     {
 817              		.loc 1 1275 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART.c **** 
1278:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART.c **** 
1280:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART.c **** 
1283:.\Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART.c ****         {
1285:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART.c ****         }
1287:.\Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART.c ****         {
1289:.\Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:.\Generated_Source\PSoC5/UART.c ****         }
1291:.\Generated_Source\PSoC5/UART.c ****         else
1292:.\Generated_Source\PSoC5/UART.c ****         {
1293:.\Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART.c ****         }
1296:.\Generated_Source\PSoC5/UART.c **** 
1297:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART.c **** 
1299:.\Generated_Source\PSoC5/UART.c ****     #else
1300:.\Generated_Source\PSoC5/UART.c **** 
1301:.\Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 822              		.loc 1 1301 0
 823 0000 054B     		ldr	r3, .L88
 824 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 825 0004 C0B2     		uxtb	r0, r0
 826              	.LVL50:
1302:.\Generated_Source\PSoC5/UART.c **** 
1303:.\Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 827              		.loc 1 1304 0
 828 0006 4307     		lsls	r3, r0, #29
1305:.\Generated_Source\PSoC5/UART.c ****         {
1306:.\Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART.c ****         }
1308:.\Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 829              		.loc 1 1308 0
 830 0008 5ABF     		itte	pl
 831 000a 80F00200 		eorpl	r0, r0, #2
 832              	.LVL51:
 833 000e C0F34000 		ubfxpl	r0, r0, #1, #1
1306:.\Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
 834              		.loc 1 1306 0
 835 0012 0420     		movmi	r0, #4
 836              	.LVL52:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 39


1309:.\Generated_Source\PSoC5/UART.c ****         {
1310:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:.\Generated_Source\PSoC5/UART.c ****         }
1312:.\Generated_Source\PSoC5/UART.c ****         else
1313:.\Generated_Source\PSoC5/UART.c ****         {
1314:.\Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:.\Generated_Source\PSoC5/UART.c ****         }
1317:.\Generated_Source\PSoC5/UART.c **** 
1318:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART.c **** 
1320:.\Generated_Source\PSoC5/UART.c ****     return(size);
1321:.\Generated_Source\PSoC5/UART.c ****     }
 837              		.loc 1 1321 0
 838 0014 7047     		bx	lr
 839              	.L89:
 840 0016 00BF     		.align	2
 841              	.L88:
 842 0018 66640040 		.word	1073767526
 843              		.cfi_endproc
 844              	.LFE23:
 845              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 846              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 847              		.align	1
 848              		.global	UART_ClearTxBuffer
 849              		.thumb
 850              		.thumb_func
 851              		.type	UART_ClearTxBuffer, %function
 852              	UART_ClearTxBuffer:
 853              	.LFB24:
1322:.\Generated_Source\PSoC5/UART.c **** 
1323:.\Generated_Source\PSoC5/UART.c **** 
1324:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART.c ****     *
1328:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART.c ****     *
1331:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART.c ****     *
1334:.\Generated_Source\PSoC5/UART.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART.c ****     *
1337:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART.c ****     *
1341:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART.c ****     *
1344:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 40


1349:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART.c ****     *
1353:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART.c ****     {
 854              		.loc 1 1355 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858 0000 08B5     		push	{r3, lr}
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 3, -8
 861              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART.c **** 
1358:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 862              		.loc 1 1358 0
 863 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 864              	.LVL53:
1359:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 865              		.loc 1 1360 0
 866 0006 064B     		ldr	r3, .L91
 867 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 868 000a 42F00102 		orr	r2, r2, #1
 869 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 870              		.loc 1 1361 0
 871 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 872 0012 02F0FE02 		and	r2, r2, #254
 873 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
1363:.\Generated_Source\PSoC5/UART.c **** 
1364:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART.c **** 
1366:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART.c **** 
1369:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART.c **** 
1372:.\Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART.c **** 
1375:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART.c ****     }
 874              		.loc 1 1376 0
 875 0018 BDE80840 		pop	{r3, lr}
1362:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 876              		.loc 1 1362 0
 877 001c FFF7FEBF 		b	CyExitCriticalSection
 878              	.LVL54:
 879              	.L92:
 880              		.align	2
 881              	.L91:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 41


 882 0020 96640040 		.word	1073767574
 883              		.cfi_endproc
 884              	.LFE24:
 885              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 886              		.section	.text.UART_SendBreak,"ax",%progbits
 887              		.align	1
 888              		.global	UART_SendBreak
 889              		.thumb
 890              		.thumb_func
 891              		.type	UART_SendBreak, %function
 892              	UART_SendBreak:
 893              	.LFB25:
1377:.\Generated_Source\PSoC5/UART.c **** 
1378:.\Generated_Source\PSoC5/UART.c **** 
1379:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART.c ****     *
1383:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART.c ****     *
1386:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART.c ****     *
1398:.\Generated_Source\PSoC5/UART.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART.c ****     *
1401:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART.c ****     *
1406:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART.c ****     *
1409:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 42


1422:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART.c ****     *
1432:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART.c ****     *
1439:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART.c ****     {
 894              		.loc 1 1441 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899              	.LVL55:
1442:.\Generated_Source\PSoC5/UART.c **** 
1443:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 900              		.loc 1 1444 0
 901 0000 124B     		ldr	r3, .L118
 902 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 903 0004 02B3     		cbz	r2, .L93
 904              	.LBB10:
1445:.\Generated_Source\PSoC5/UART.c ****         {
1446:.\Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART.c **** 
1450:.\Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART.c **** 
1452:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART.c ****             {
1455:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART.c **** 
1461:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART.c ****                 {
1463:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART.c ****                 }
1465:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART.c ****             }
1467:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 43


1468:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART.c ****             {
1471:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART.c ****                 {
1473:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART.c ****                 }
1475:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART.c ****             }
1477:.\Generated_Source\PSoC5/UART.c **** 
1478:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART.c ****             {
1482:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART.c ****             }
1485:.\Generated_Source\PSoC5/UART.c **** 
1486:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART.c **** 
1488:.\Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART.c **** 
1490:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 905              		.loc 1 1490 0
 906 0006 08B1     		cbz	r0, .L96
 907              		.loc 1 1490 0 is_stmt 0 discriminator 1
 908 0008 0328     		cmp	r0, #3
 909 000a 1BD1     		bne	.L97
 910              	.L96:
1491:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART.c ****             {
1493:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART.c **** 
1500:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 911              		.loc 1 1501 0 is_stmt 1
 912 000c 104A     		ldr	r2, .L118+4
 913 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 914 0010 5970     		strb	r1, [r3, #1]
1502:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 915              		.loc 1 1502 0
 916 0012 6721     		movs	r1, #103
 917 0014 1170     		strb	r1, [r2]
1503:.\Generated_Source\PSoC5/UART.c ****                 #else
1504:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART.c **** 
1508:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 918              		.loc 1 1509 0
 919 0016 0021     		movs	r1, #0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 44


 920 0018 D173     		strb	r1, [r2, #15]
 921              	.L99:
1510:.\Generated_Source\PSoC5/UART.c **** 
1511:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART.c ****                 {
1513:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 922              		.loc 1 1513 0 discriminator 1
 923 001a 0E4A     		ldr	r2, .L118+8
 924 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 925              	.LVL56:
1514:.\Generated_Source\PSoC5/UART.c ****                 }
1515:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 926              		.loc 1 1515 0 discriminator 1
 927 001e 9107     		lsls	r1, r2, #30
 928 0020 FBD4     		bmi	.L99
1516:.\Generated_Source\PSoC5/UART.c ****             }
1517:.\Generated_Source\PSoC5/UART.c **** 
1518:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 929              		.loc 1 1518 0
 930 0022 00F0FD02 		and	r2, r0, #253
 931              	.LVL57:
 932 0026 012A     		cmp	r2, #1
 933              	.L117:
 934 0028 03D0     		beq	.L104
 935              	.L103:
1519:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART.c ****             {
1521:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART.c ****                 {
1523:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:.\Generated_Source\PSoC5/UART.c ****                 }
1525:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC5/UART.c ****             }
1527:.\Generated_Source\PSoC5/UART.c **** 
1528:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 936              		.loc 1 1528 0
 937 002a 0138     		subs	r0, r0, #1
 938              	.LVL58:
 939 002c 0228     		cmp	r0, #2
 940 002e 05D9     		bls	.L101
 941 0030 7047     		bx	lr
 942              	.LVL59:
 943              	.L104:
1523:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 944              		.loc 1 1523 0 discriminator 1
 945 0032 084A     		ldr	r2, .L118+8
 946 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 947              	.LVL60:
1525:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 948              		.loc 1 1525 0 discriminator 1
 949 0036 D207     		lsls	r2, r2, #31
 950              	.LVL61:
 951 0038 FBD5     		bpl	.L104
 952 003a F6E7     		b	.L103
 953              	.LVL62:
 954              	.L101:
1529:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 45


1530:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART.c ****             {
1532:.\Generated_Source\PSoC5/UART.c **** 
1533:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 955              		.loc 1 1534 0
 956 003c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 957 003e 044B     		ldr	r3, .L118+4
 958 0040 1A70     		strb	r2, [r3]
 959 0042 7047     		bx	lr
 960              	.LVL63:
 961              	.L97:
1518:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 962              		.loc 1 1518 0
 963 0044 0128     		cmp	r0, #1
 964 0046 EFE7     		b	.L117
 965              	.L93:
 966 0048 7047     		bx	lr
 967              	.L119:
 968 004a 00BF     		.align	2
 969              	.L118:
 970 004c 00000000 		.word	.LANCHOR0
 971 0050 37640040 		.word	1073767479
 972 0054 66640040 		.word	1073767526
 973              	.LBE10:
 974              		.cfi_endproc
 975              	.LFE25:
 976              		.size	UART_SendBreak, .-UART_SendBreak
 977              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 978              		.align	1
 979              		.global	UART_SetTxAddressMode
 980              		.thumb
 981              		.thumb_func
 982              		.type	UART_SetTxAddressMode, %function
 983              	UART_SetTxAddressMode:
 984              	.LFB26:
1535:.\Generated_Source\PSoC5/UART.c ****             #else
1536:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART.c **** 
1539:.\Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART.c ****             }
1545:.\Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART.c ****         }
1547:.\Generated_Source\PSoC5/UART.c ****     }
1548:.\Generated_Source\PSoC5/UART.c **** 
1549:.\Generated_Source\PSoC5/UART.c **** 
1550:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART.c ****     *
1554:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 46


1556:.\Generated_Source\PSoC5/UART.c ****     *
1557:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART.c ****     *
1564:.\Generated_Source\PSoC5/UART.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART.c ****     *
1567:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART.c ****     *
1571:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART.c ****     {
 985              		.loc 1 1573 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990              	.LVL64:
 991 0000 7047     		bx	lr
 992              		.cfi_endproc
 993              	.LFE26:
 994              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 995              		.global	UART_initVar
 996              		.bss
 997              		.set	.LANCHOR0,. + 0
 998              		.type	UART_initVar, %object
 999              		.size	UART_initVar, 1
 1000              	UART_initVar:
 1001 0000 00       		.space	1
 1002              		.type	txPeriod.4988, %object
 1003              		.size	txPeriod.4988, 1
 1004              	txPeriod.4988:
 1005 0001 00       		.space	1
 1006              		.text
 1007              	.Letext0:
 1008              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1009              		.file 3 ".\\Generated_Source\\PSoC5\\UART_IntClock.h"
 1010              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1011              		.section	.debug_info,"",%progbits
 1012              	.Ldebug_info0:
 1013 0000 48060000 		.4byte	0x648
 1014 0004 0400     		.2byte	0x4
 1015 0006 00000000 		.4byte	.Ldebug_abbrev0
 1016 000a 04       		.byte	0x4
 1017 000b 01       		.uleb128 0x1
 1018 000c 00030000 		.4byte	.LASF61
 1019 0010 01       		.byte	0x1
 1020 0011 69000000 		.4byte	.LASF62
 1021 0015 32020000 		.4byte	.LASF63
 1022 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1023 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 47


 1024 0021 00000000 		.4byte	.Ldebug_line0
 1025 0025 02       		.uleb128 0x2
 1026 0026 01       		.byte	0x1
 1027 0027 06       		.byte	0x6
 1028 0028 97000000 		.4byte	.LASF0
 1029 002c 02       		.uleb128 0x2
 1030 002d 01       		.byte	0x1
 1031 002e 08       		.byte	0x8
 1032 002f BE020000 		.4byte	.LASF1
 1033 0033 02       		.uleb128 0x2
 1034 0034 02       		.byte	0x2
 1035 0035 05       		.byte	0x5
 1036 0036 DD020000 		.4byte	.LASF2
 1037 003a 02       		.uleb128 0x2
 1038 003b 02       		.byte	0x2
 1039 003c 07       		.byte	0x7
 1040 003d 94010000 		.4byte	.LASF3
 1041 0041 02       		.uleb128 0x2
 1042 0042 04       		.byte	0x4
 1043 0043 05       		.byte	0x5
 1044 0044 AC000000 		.4byte	.LASF4
 1045 0048 02       		.uleb128 0x2
 1046 0049 04       		.byte	0x4
 1047 004a 07       		.byte	0x7
 1048 004b 58010000 		.4byte	.LASF5
 1049 004f 02       		.uleb128 0x2
 1050 0050 08       		.byte	0x8
 1051 0051 05       		.byte	0x5
 1052 0052 89000000 		.4byte	.LASF6
 1053 0056 02       		.uleb128 0x2
 1054 0057 08       		.byte	0x8
 1055 0058 07       		.byte	0x7
 1056 0059 2F000000 		.4byte	.LASF7
 1057 005d 03       		.uleb128 0x3
 1058 005e 04       		.byte	0x4
 1059 005f 05       		.byte	0x5
 1060 0060 696E7400 		.ascii	"int\000"
 1061 0064 02       		.uleb128 0x2
 1062 0065 04       		.byte	0x4
 1063 0066 07       		.byte	0x7
 1064 0067 2B010000 		.4byte	.LASF8
 1065 006b 04       		.uleb128 0x4
 1066 006c D2000000 		.4byte	.LASF9
 1067 0070 02       		.byte	0x2
 1068 0071 A1       		.byte	0xa1
 1069 0072 2C000000 		.4byte	0x2c
 1070 0076 04       		.uleb128 0x4
 1071 0077 00000000 		.4byte	.LASF10
 1072 007b 02       		.byte	0x2
 1073 007c A2       		.byte	0xa2
 1074 007d 3A000000 		.4byte	0x3a
 1075 0081 02       		.uleb128 0x2
 1076 0082 04       		.byte	0x4
 1077 0083 04       		.byte	0x4
 1078 0084 88020000 		.4byte	.LASF11
 1079 0088 02       		.uleb128 0x2
 1080 0089 08       		.byte	0x8
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 48


 1081 008a 04       		.byte	0x4
 1082 008b F1000000 		.4byte	.LASF12
 1083 008f 04       		.uleb128 0x4
 1084 0090 A6030000 		.4byte	.LASF13
 1085 0094 02       		.byte	0x2
 1086 0095 B2       		.byte	0xb2
 1087 0096 9A000000 		.4byte	0x9a
 1088 009a 02       		.uleb128 0x2
 1089 009b 01       		.byte	0x1
 1090 009c 08       		.byte	0x8
 1091 009d A1030000 		.4byte	.LASF14
 1092 00a1 05       		.uleb128 0x5
 1093 00a2 A3020000 		.4byte	.LASF15
 1094 00a6 02       		.byte	0x2
 1095 00a7 4B01     		.2byte	0x14b
 1096 00a9 AD000000 		.4byte	0xad
 1097 00ad 06       		.uleb128 0x6
 1098 00ae 6B000000 		.4byte	0x6b
 1099 00b2 02       		.uleb128 0x2
 1100 00b3 04       		.byte	0x4
 1101 00b4 07       		.byte	0x7
 1102 00b5 FB010000 		.4byte	.LASF16
 1103 00b9 07       		.uleb128 0x7
 1104 00ba 8F030000 		.4byte	.LASF17
 1105 00be 01       		.byte	0x1
 1106 00bf E501     		.2byte	0x1e5
 1107 00c1 6B000000 		.4byte	0x6b
 1108 00c5 01       		.byte	0x1
 1109 00c6 D7000000 		.4byte	0xd7
 1110 00ca 08       		.uleb128 0x8
 1111 00cb 04040000 		.4byte	.LASF19
 1112 00cf 01       		.byte	0x1
 1113 00d0 E701     		.2byte	0x1e7
 1114 00d2 6B000000 		.4byte	0x6b
 1115 00d6 00       		.byte	0
 1116 00d7 07       		.uleb128 0x7
 1117 00d8 C2000000 		.4byte	.LASF18
 1118 00dc 01       		.byte	0x1
 1119 00dd 8801     		.2byte	0x188
 1120 00df 6B000000 		.4byte	0x6b
 1121 00e3 01       		.byte	0x1
 1122 00e4 F5000000 		.4byte	0xf5
 1123 00e8 08       		.uleb128 0x8
 1124 00e9 7C030000 		.4byte	.LASF20
 1125 00ed 01       		.byte	0x1
 1126 00ee 8A01     		.2byte	0x18a
 1127 00f0 6B000000 		.4byte	0x6b
 1128 00f4 00       		.byte	0
 1129 00f5 09       		.uleb128 0x9
 1130 00f6 0C010000 		.4byte	.LASF64
 1131 00fa 01       		.byte	0x1
 1132 00fb 6A       		.byte	0x6a
 1133 00fc 00000000 		.4byte	.LFB1
 1134 0100 24000000 		.4byte	.LFE1-.LFB1
 1135 0104 01       		.uleb128 0x1
 1136 0105 9C       		.byte	0x9c
 1137 0106 0A       		.uleb128 0xa
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 49


 1138 0107 83030000 		.4byte	.LASF21
 1139 010b 01       		.byte	0x1
 1140 010c B7       		.byte	0xb7
 1141 010d 00000000 		.4byte	.LFB2
 1142 0111 3C000000 		.4byte	.LFE2-.LFB2
 1143 0115 01       		.uleb128 0x1
 1144 0116 9C       		.byte	0x9c
 1145 0117 46010000 		.4byte	0x146
 1146 011b 0B       		.uleb128 0xb
 1147 011c D1030000 		.4byte	.LASF24
 1148 0120 01       		.byte	0x1
 1149 0121 B9       		.byte	0xb9
 1150 0122 6B000000 		.4byte	0x6b
 1151 0126 00000000 		.4byte	.LLST0
 1152 012a 0C       		.uleb128 0xc
 1153 012b 06000000 		.4byte	.LVL0
 1154 012f 21060000 		.4byte	0x621
 1155 0133 0C       		.uleb128 0xc
 1156 0134 2C000000 		.4byte	.LVL2
 1157 0138 2C060000 		.4byte	0x62c
 1158 013c 0D       		.uleb128 0xd
 1159 013d 36000000 		.4byte	.LVL4
 1160 0141 33060000 		.4byte	0x633
 1161 0145 00       		.byte	0
 1162 0146 0A       		.uleb128 0xa
 1163 0147 46000000 		.4byte	.LASF22
 1164 014b 01       		.byte	0x1
 1165 014c 4C       		.byte	0x4c
 1166 014d 00000000 		.4byte	.LFB0
 1167 0151 1C000000 		.4byte	.LFE0-.LFB0
 1168 0155 01       		.uleb128 0x1
 1169 0156 9C       		.byte	0x9c
 1170 0157 6E010000 		.4byte	0x16e
 1171 015b 0C       		.uleb128 0xc
 1172 015c 0C000000 		.4byte	.LVL5
 1173 0160 F5000000 		.4byte	0xf5
 1174 0164 0D       		.uleb128 0xd
 1175 0165 18000000 		.4byte	.LVL6
 1176 0169 06010000 		.4byte	0x106
 1177 016d 00       		.byte	0
 1178 016e 0A       		.uleb128 0xa
 1179 016f 0B040000 		.4byte	.LASF23
 1180 0173 01       		.byte	0x1
 1181 0174 F0       		.byte	0xf0
 1182 0175 00000000 		.4byte	.LFB3
 1183 0179 40000000 		.4byte	.LFE3-.LFB3
 1184 017d 01       		.uleb128 0x1
 1185 017e 9C       		.byte	0x9c
 1186 017f AE010000 		.4byte	0x1ae
 1187 0183 0B       		.uleb128 0xb
 1188 0184 D1030000 		.4byte	.LASF24
 1189 0188 01       		.byte	0x1
 1190 0189 F2       		.byte	0xf2
 1191 018a 6B000000 		.4byte	0x6b
 1192 018e 29000000 		.4byte	.LLST1
 1193 0192 0C       		.uleb128 0xc
 1194 0193 06000000 		.4byte	.LVL7
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 50


 1195 0197 21060000 		.4byte	0x621
 1196 019b 0C       		.uleb128 0xc
 1197 019c 16000000 		.4byte	.LVL9
 1198 01a0 44060000 		.4byte	0x644
 1199 01a4 0D       		.uleb128 0xd
 1200 01a5 36000000 		.4byte	.LVL11
 1201 01a9 33060000 		.4byte	0x633
 1202 01ad 00       		.byte	0
 1203 01ae 0E       		.uleb128 0xe
 1204 01af D8000000 		.4byte	.LASF43
 1205 01b3 01       		.byte	0x1
 1206 01b4 2701     		.2byte	0x127
 1207 01b6 6B000000 		.4byte	0x6b
 1208 01ba 00000000 		.4byte	.LFB4
 1209 01be 04000000 		.4byte	.LFE4-.LFB4
 1210 01c2 01       		.uleb128 0x1
 1211 01c3 9C       		.byte	0x9c
 1212 01c4 0F       		.uleb128 0xf
 1213 01c5 24040000 		.4byte	.LASF25
 1214 01c9 01       		.byte	0x1
 1215 01ca 3F01     		.2byte	0x13f
 1216 01cc 00000000 		.4byte	.LFB5
 1217 01d0 02000000 		.4byte	.LFE5-.LFB5
 1218 01d4 01       		.uleb128 0x1
 1219 01d5 9C       		.byte	0x9c
 1220 01d6 E9010000 		.4byte	0x1e9
 1221 01da 10       		.uleb128 0x10
 1222 01db 04010000 		.4byte	.LASF27
 1223 01df 01       		.byte	0x1
 1224 01e0 3F01     		.2byte	0x13f
 1225 01e2 6B000000 		.4byte	0x6b
 1226 01e6 01       		.uleb128 0x1
 1227 01e7 50       		.byte	0x50
 1228 01e8 00       		.byte	0
 1229 01e9 0F       		.uleb128 0xf
 1230 01ea AC030000 		.4byte	.LASF26
 1231 01ee 01       		.byte	0x1
 1232 01ef 6701     		.2byte	0x167
 1233 01f1 00000000 		.4byte	.LFB6
 1234 01f5 0C000000 		.4byte	.LFE6-.LFB6
 1235 01f9 01       		.uleb128 0x1
 1236 01fa 9C       		.byte	0x9c
 1237 01fb 0E020000 		.4byte	0x20e
 1238 01ff 10       		.uleb128 0x10
 1239 0200 B0010000 		.4byte	.LASF28
 1240 0204 01       		.byte	0x1
 1241 0205 6701     		.2byte	0x167
 1242 0207 6B000000 		.4byte	0x6b
 1243 020b 01       		.uleb128 0x1
 1244 020c 50       		.byte	0x50
 1245 020d 00       		.byte	0
 1246 020e 11       		.uleb128 0x11
 1247 020f D7000000 		.4byte	0xd7
 1248 0213 00000000 		.4byte	.LFB7
 1249 0217 0C000000 		.4byte	.LFE7-.LFB7
 1250 021b 01       		.uleb128 0x1
 1251 021c 9C       		.byte	0x9c
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 51


 1252 021d 29020000 		.4byte	0x229
 1253 0221 12       		.uleb128 0x12
 1254 0222 E8000000 		.4byte	0xe8
 1255 0226 01       		.uleb128 0x1
 1256 0227 50       		.byte	0x50
 1257 0228 00       		.byte	0
 1258 0229 11       		.uleb128 0x11
 1259 022a B9000000 		.4byte	0xb9
 1260 022e 00000000 		.4byte	.LFB8
 1261 0232 10000000 		.4byte	.LFE8-.LFB8
 1262 0236 01       		.uleb128 0x1
 1263 0237 9C       		.byte	0x9c
 1264 0238 46020000 		.4byte	0x246
 1265 023c 13       		.uleb128 0x13
 1266 023d CA000000 		.4byte	0xca
 1267 0241 52000000 		.4byte	.LLST2
 1268 0245 00       		.byte	0
 1269 0246 14       		.uleb128 0x14
 1270 0247 C4030000 		.4byte	.LASF30
 1271 024b 01       		.byte	0x1
 1272 024c 1402     		.2byte	0x214
 1273 024e 6B000000 		.4byte	0x6b
 1274 0252 00000000 		.4byte	.LFB9
 1275 0256 28000000 		.4byte	.LFE9-.LFB9
 1276 025a 01       		.uleb128 0x1
 1277 025b 9C       		.byte	0x9c
 1278 025c 7F020000 		.4byte	0x27f
 1279 0260 15       		.uleb128 0x15
 1280 0261 7C030000 		.4byte	.LASF20
 1281 0265 01       		.byte	0x1
 1282 0266 1602     		.2byte	0x216
 1283 0268 6B000000 		.4byte	0x6b
 1284 026c 6A000000 		.4byte	.LLST3
 1285 0270 16       		.uleb128 0x16
 1286 0271 6C020000 		.4byte	.LASF29
 1287 0275 01       		.byte	0x1
 1288 0276 1702     		.2byte	0x217
 1289 0278 6B000000 		.4byte	0x6b
 1290 027c 01       		.uleb128 0x1
 1291 027d 53       		.byte	0x53
 1292 027e 00       		.byte	0
 1293 027f 14       		.uleb128 0x14
 1294 0280 1E010000 		.4byte	.LASF31
 1295 0284 01       		.byte	0x1
 1296 0285 7A02     		.2byte	0x27a
 1297 0287 76000000 		.4byte	0x76
 1298 028b 00000000 		.4byte	.LFB10
 1299 028f 18000000 		.4byte	.LFE10-.LFB10
 1300 0293 01       		.uleb128 0x1
 1301 0294 9C       		.byte	0x9c
 1302 0295 E4020000 		.4byte	0x2e4
 1303 0299 17       		.uleb128 0x17
 1304 029a B9000000 		.4byte	0xb9
 1305 029e 00000000 		.4byte	.LBB6
 1306 02a2 04000000 		.4byte	.LBE6-.LBB6
 1307 02a6 01       		.byte	0x1
 1308 02a7 8602     		.2byte	0x286
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 52


 1309 02a9 C1020000 		.4byte	0x2c1
 1310 02ad 18       		.uleb128 0x18
 1311 02ae 00000000 		.4byte	.LBB7
 1312 02b2 04000000 		.4byte	.LBE7-.LBB7
 1313 02b6 13       		.uleb128 0x13
 1314 02b7 CA000000 		.4byte	0xca
 1315 02bb 89000000 		.4byte	.LLST4
 1316 02bf 00       		.byte	0
 1317 02c0 00       		.byte	0
 1318 02c1 19       		.uleb128 0x19
 1319 02c2 D7000000 		.4byte	0xd7
 1320 02c6 04000000 		.4byte	.LBB8
 1321 02ca 04000000 		.4byte	.LBE8-.LBB8
 1322 02ce 01       		.byte	0x1
 1323 02cf 8602     		.2byte	0x286
 1324 02d1 18       		.uleb128 0x18
 1325 02d2 04000000 		.4byte	.LBB9
 1326 02d6 04000000 		.4byte	.LBE9-.LBB9
 1327 02da 12       		.uleb128 0x12
 1328 02db E8000000 		.4byte	0xe8
 1329 02df 01       		.uleb128 0x1
 1330 02e0 53       		.byte	0x53
 1331 02e1 00       		.byte	0
 1332 02e2 00       		.byte	0
 1333 02e3 00       		.byte	0
 1334 02e4 14       		.uleb128 0x14
 1335 02e5 EF030000 		.4byte	.LASF32
 1336 02e9 01       		.byte	0x1
 1337 02ea AB02     		.2byte	0x2ab
 1338 02ec 6B000000 		.4byte	0x6b
 1339 02f0 00000000 		.4byte	.LFB11
 1340 02f4 10000000 		.4byte	.LFE11-.LFB11
 1341 02f8 01       		.uleb128 0x1
 1342 02f9 9C       		.byte	0x9c
 1343 02fa 0F030000 		.4byte	0x30f
 1344 02fe 15       		.uleb128 0x15
 1345 02ff 8F010000 		.4byte	.LASF33
 1346 0303 01       		.byte	0x1
 1347 0304 AE02     		.2byte	0x2ae
 1348 0306 6B000000 		.4byte	0x6b
 1349 030a A1000000 		.4byte	.LLST5
 1350 030e 00       		.byte	0
 1351 030f 0F       		.uleb128 0xf
 1352 0310 3E040000 		.4byte	.LASF34
 1353 0314 01       		.byte	0x1
 1354 0315 F502     		.2byte	0x2f5
 1355 0317 00000000 		.4byte	.LFB12
 1356 031b 24000000 		.4byte	.LFE12-.LFB12
 1357 031f 01       		.uleb128 0x1
 1358 0320 9C       		.byte	0x9c
 1359 0321 48030000 		.4byte	0x348
 1360 0325 15       		.uleb128 0x15
 1361 0326 D1030000 		.4byte	.LASF24
 1362 032a 01       		.byte	0x1
 1363 032b F702     		.2byte	0x2f7
 1364 032d 6B000000 		.4byte	0x6b
 1365 0331 BD000000 		.4byte	.LLST6
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 53


 1366 0335 0C       		.uleb128 0xc
 1367 0336 06000000 		.4byte	.LVL26
 1368 033a 21060000 		.4byte	0x621
 1369 033e 0D       		.uleb128 0xd
 1370 033f 20000000 		.4byte	.LVL27
 1371 0343 33060000 		.4byte	0x633
 1372 0347 00       		.byte	0
 1373 0348 0F       		.uleb128 0xf
 1374 0349 A8020000 		.4byte	.LASF35
 1375 034d 01       		.byte	0x1
 1376 034e 2D03     		.2byte	0x32d
 1377 0350 00000000 		.4byte	.LFB13
 1378 0354 02000000 		.4byte	.LFE13-.LFB13
 1379 0358 01       		.uleb128 0x1
 1380 0359 9C       		.byte	0x9c
 1381 035a 6D030000 		.4byte	0x36d
 1382 035e 10       		.uleb128 0x10
 1383 035f F8000000 		.4byte	.LASF36
 1384 0363 01       		.byte	0x1
 1385 0364 2D03     		.2byte	0x32d
 1386 0366 6B000000 		.4byte	0x6b
 1387 036a 01       		.uleb128 0x1
 1388 036b 50       		.byte	0x50
 1389 036c 00       		.byte	0
 1390 036d 0F       		.uleb128 0xf
 1391 036e 0C020000 		.4byte	.LASF37
 1392 0372 01       		.byte	0x1
 1393 0373 5903     		.2byte	0x359
 1394 0375 00000000 		.4byte	.LFB14
 1395 0379 0C000000 		.4byte	.LFE14-.LFB14
 1396 037d 01       		.uleb128 0x1
 1397 037e 9C       		.byte	0x9c
 1398 037f 92030000 		.4byte	0x392
 1399 0383 10       		.uleb128 0x10
 1400 0384 04020000 		.4byte	.LASF38
 1401 0388 01       		.byte	0x1
 1402 0389 5903     		.2byte	0x359
 1403 038b 6B000000 		.4byte	0x6b
 1404 038f 01       		.uleb128 0x1
 1405 0390 50       		.byte	0x50
 1406 0391 00       		.byte	0
 1407 0392 0F       		.uleb128 0xf
 1408 0393 1F020000 		.4byte	.LASF39
 1409 0397 01       		.byte	0x1
 1410 0398 6D03     		.2byte	0x36d
 1411 039a 00000000 		.4byte	.LFB15
 1412 039e 0C000000 		.4byte	.LFE15-.LFB15
 1413 03a2 01       		.uleb128 0x1
 1414 03a3 9C       		.byte	0x9c
 1415 03a4 B7030000 		.4byte	0x3b7
 1416 03a8 10       		.uleb128 0x10
 1417 03a9 04020000 		.4byte	.LASF38
 1418 03ad 01       		.byte	0x1
 1419 03ae 6D03     		.2byte	0x36d
 1420 03b0 6B000000 		.4byte	0x6b
 1421 03b4 01       		.uleb128 0x1
 1422 03b5 50       		.byte	0x50
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 54


 1423 03b6 00       		.byte	0
 1424 03b7 0F       		.uleb128 0xf
 1425 03b8 51000000 		.4byte	.LASF40
 1426 03bc 01       		.byte	0x1
 1427 03bd 8C03     		.2byte	0x38c
 1428 03bf 00000000 		.4byte	.LFB16
 1429 03c3 0C000000 		.4byte	.LFE16-.LFB16
 1430 03c7 01       		.uleb128 0x1
 1431 03c8 9C       		.byte	0x9c
 1432 03c9 DC030000 		.4byte	0x3dc
 1433 03cd 10       		.uleb128 0x10
 1434 03ce B0010000 		.4byte	.LASF28
 1435 03d2 01       		.byte	0x1
 1436 03d3 8C03     		.2byte	0x38c
 1437 03d5 6B000000 		.4byte	0x6b
 1438 03d9 01       		.uleb128 0x1
 1439 03da 50       		.byte	0x50
 1440 03db 00       		.byte	0
 1441 03dc 0F       		.uleb128 0xf
 1442 03dd CC020000 		.4byte	.LASF41
 1443 03e1 01       		.byte	0x1
 1444 03e2 AE03     		.2byte	0x3ae
 1445 03e4 00000000 		.4byte	.LFB17
 1446 03e8 14000000 		.4byte	.LFE17-.LFB17
 1447 03ec 01       		.uleb128 0x1
 1448 03ed 9C       		.byte	0x9c
 1449 03ee 01040000 		.4byte	0x401
 1450 03f2 10       		.uleb128 0x10
 1451 03f3 1D000000 		.4byte	.LASF42
 1452 03f7 01       		.byte	0x1
 1453 03f8 AE03     		.2byte	0x3ae
 1454 03fa 6B000000 		.4byte	0x6b
 1455 03fe 01       		.uleb128 0x1
 1456 03ff 50       		.byte	0x50
 1457 0400 00       		.byte	0
 1458 0401 0E       		.uleb128 0xe
 1459 0402 CD010000 		.4byte	.LASF44
 1460 0406 01       		.byte	0x1
 1461 0407 EB03     		.2byte	0x3eb
 1462 0409 6B000000 		.4byte	0x6b
 1463 040d 00000000 		.4byte	.LFB18
 1464 0411 0C000000 		.4byte	.LFE18-.LFB18
 1465 0415 01       		.uleb128 0x1
 1466 0416 9C       		.byte	0x9c
 1467 0417 0F       		.uleb128 0xf
 1468 0418 B5000000 		.4byte	.LASF45
 1469 041c 01       		.byte	0x1
 1470 041d 1104     		.2byte	0x411
 1471 041f 00000000 		.4byte	.LFB19
 1472 0423 18000000 		.4byte	.LFE19-.LFB19
 1473 0427 01       		.uleb128 0x1
 1474 0428 9C       		.byte	0x9c
 1475 0429 3C040000 		.4byte	0x43c
 1476 042d 10       		.uleb128 0x10
 1477 042e 1D000000 		.4byte	.LASF42
 1478 0432 01       		.byte	0x1
 1479 0433 1104     		.2byte	0x411
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 55


 1480 0435 6B000000 		.4byte	0x6b
 1481 0439 01       		.uleb128 0x1
 1482 043a 50       		.byte	0x50
 1483 043b 00       		.byte	0
 1484 043c 0F       		.uleb128 0xf
 1485 043d 15040000 		.4byte	.LASF46
 1486 0441 01       		.byte	0x1
 1487 0442 7904     		.2byte	0x479
 1488 0444 00000000 		.4byte	.LFB20
 1489 0448 20000000 		.4byte	.LFE20-.LFB20
 1490 044c 01       		.uleb128 0x1
 1491 044d 9C       		.byte	0x9c
 1492 044e 7C040000 		.4byte	0x47c
 1493 0452 1A       		.uleb128 0x1a
 1494 0453 28000000 		.4byte	.LASF47
 1495 0457 01       		.byte	0x1
 1496 0458 7904     		.2byte	0x479
 1497 045a 7C040000 		.4byte	0x47c
 1498 045e D0000000 		.4byte	.LLST7
 1499 0462 15       		.uleb128 0x15
 1500 0463 A7010000 		.4byte	.LASF48
 1501 0467 01       		.byte	0x1
 1502 0468 7B04     		.2byte	0x47b
 1503 046a 76000000 		.4byte	0x76
 1504 046e FC000000 		.4byte	.LLST8
 1505 0472 0C       		.uleb128 0xc
 1506 0473 18000000 		.4byte	.LVL37
 1507 0477 17040000 		.4byte	0x417
 1508 047b 00       		.byte	0
 1509 047c 1B       		.uleb128 0x1b
 1510 047d 04       		.byte	0x4
 1511 047e 82040000 		.4byte	0x482
 1512 0482 1C       		.uleb128 0x1c
 1513 0483 8F000000 		.4byte	0x8f
 1514 0487 0F       		.uleb128 0xf
 1515 0488 6A010000 		.4byte	.LASF49
 1516 048c 01       		.byte	0x1
 1517 048d A704     		.2byte	0x4a7
 1518 048f 00000000 		.4byte	.LFB21
 1519 0493 24000000 		.4byte	.LFE21-.LFB21
 1520 0497 01       		.uleb128 0x1
 1521 0498 9C       		.byte	0x9c
 1522 0499 D7040000 		.4byte	0x4d7
 1523 049d 1A       		.uleb128 0x1a
 1524 049e 28000000 		.4byte	.LASF47
 1525 04a2 01       		.byte	0x1
 1526 04a3 A704     		.2byte	0x4a7
 1527 04a5 D7040000 		.4byte	0x4d7
 1528 04a9 33010000 		.4byte	.LLST9
 1529 04ad 1A       		.uleb128 0x1a
 1530 04ae F6020000 		.4byte	.LASF50
 1531 04b2 01       		.byte	0x1
 1532 04b3 A704     		.2byte	0x4a7
 1533 04b5 6B000000 		.4byte	0x6b
 1534 04b9 5F010000 		.4byte	.LLST10
 1535 04bd 15       		.uleb128 0x15
 1536 04be A7010000 		.4byte	.LASF48
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 56


 1537 04c2 01       		.byte	0x1
 1538 04c3 AA04     		.2byte	0x4aa
 1539 04c5 6B000000 		.4byte	0x6b
 1540 04c9 80010000 		.4byte	.LLST11
 1541 04cd 0C       		.uleb128 0xc
 1542 04ce 1A000000 		.4byte	.LVL42
 1543 04d2 17040000 		.4byte	0x417
 1544 04d6 00       		.byte	0
 1545 04d7 1B       		.uleb128 0x1b
 1546 04d8 04       		.byte	0x4
 1547 04d9 DD040000 		.4byte	0x4dd
 1548 04dd 1C       		.uleb128 0x1c
 1549 04de 6B000000 		.4byte	0x6b
 1550 04e2 0F       		.uleb128 0xf
 1551 04e3 4B010000 		.4byte	.LASF51
 1552 04e7 01       		.byte	0x1
 1553 04e8 CE04     		.2byte	0x4ce
 1554 04ea 00000000 		.4byte	.LFB22
 1555 04ee 24000000 		.4byte	.LFE22-.LFB22
 1556 04f2 01       		.uleb128 0x1
 1557 04f3 9C       		.byte	0x9c
 1558 04f4 34050000 		.4byte	0x534
 1559 04f8 1A       		.uleb128 0x1a
 1560 04f9 1D000000 		.4byte	.LASF42
 1561 04fd 01       		.byte	0x1
 1562 04fe CE04     		.2byte	0x4ce
 1563 0500 6B000000 		.4byte	0x6b
 1564 0504 B9010000 		.4byte	.LLST12
 1565 0508 0C       		.uleb128 0xc
 1566 0509 0C000000 		.4byte	.LVL47
 1567 050d 17040000 		.4byte	0x417
 1568 0511 1D       		.uleb128 0x1d
 1569 0512 12000000 		.4byte	.LVL48
 1570 0516 17040000 		.4byte	0x417
 1571 051a 24050000 		.4byte	0x524
 1572 051e 1E       		.uleb128 0x1e
 1573 051f 01       		.uleb128 0x1
 1574 0520 50       		.byte	0x50
 1575 0521 01       		.uleb128 0x1
 1576 0522 3D       		.byte	0x3d
 1577 0523 00       		.byte	0
 1578 0524 1F       		.uleb128 0x1f
 1579 0525 1C000000 		.4byte	.LVL49
 1580 0529 17040000 		.4byte	0x417
 1581 052d 1E       		.uleb128 0x1e
 1582 052e 01       		.uleb128 0x1
 1583 052f 50       		.byte	0x50
 1584 0530 01       		.uleb128 0x1
 1585 0531 3A       		.byte	0x3a
 1586 0532 00       		.byte	0
 1587 0533 00       		.byte	0
 1588 0534 14       		.uleb128 0x14
 1589 0535 8E020000 		.4byte	.LASF52
 1590 0539 01       		.byte	0x1
 1591 053a F904     		.2byte	0x4f9
 1592 053c 6B000000 		.4byte	0x6b
 1593 0540 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 57


 1594 0544 1C000000 		.4byte	.LFE23-.LFB23
 1595 0548 01       		.uleb128 0x1
 1596 0549 9C       		.byte	0x9c
 1597 054a 5F050000 		.4byte	0x55f
 1598 054e 15       		.uleb128 0x15
 1599 054f 8F010000 		.4byte	.LASF33
 1600 0553 01       		.byte	0x1
 1601 0554 FC04     		.2byte	0x4fc
 1602 0556 6B000000 		.4byte	0x6b
 1603 055a E5010000 		.4byte	.LLST13
 1604 055e 00       		.byte	0
 1605 055f 0F       		.uleb128 0xf
 1606 0560 38010000 		.4byte	.LASF53
 1607 0564 01       		.byte	0x1
 1608 0565 4A05     		.2byte	0x54a
 1609 0567 00000000 		.4byte	.LFB24
 1610 056b 24000000 		.4byte	.LFE24-.LFB24
 1611 056f 01       		.uleb128 0x1
 1612 0570 9C       		.byte	0x9c
 1613 0571 98050000 		.4byte	0x598
 1614 0575 15       		.uleb128 0x15
 1615 0576 D1030000 		.4byte	.LASF24
 1616 057a 01       		.byte	0x1
 1617 057b 4C05     		.2byte	0x54c
 1618 057d 6B000000 		.4byte	0x6b
 1619 0581 03020000 		.4byte	.LLST14
 1620 0585 0C       		.uleb128 0xc
 1621 0586 06000000 		.4byte	.LVL53
 1622 058a 21060000 		.4byte	0x621
 1623 058e 0D       		.uleb128 0xd
 1624 058f 20000000 		.4byte	.LVL54
 1625 0593 33060000 		.4byte	0x633
 1626 0597 00       		.byte	0
 1627 0598 0F       		.uleb128 0xf
 1628 0599 E7020000 		.4byte	.LASF54
 1629 059d 01       		.byte	0x1
 1630 059e A005     		.2byte	0x5a0
 1631 05a0 00000000 		.4byte	.LFB25
 1632 05a4 58000000 		.4byte	.LFE25-.LFB25
 1633 05a8 01       		.uleb128 0x1
 1634 05a9 9C       		.byte	0x9c
 1635 05aa EB050000 		.4byte	0x5eb
 1636 05ae 1A       		.uleb128 0x1a
 1637 05af 16010000 		.4byte	.LASF55
 1638 05b3 01       		.byte	0x1
 1639 05b4 A005     		.2byte	0x5a0
 1640 05b6 6B000000 		.4byte	0x6b
 1641 05ba 16020000 		.4byte	.LLST15
 1642 05be 18       		.uleb128 0x18
 1643 05bf 06000000 		.4byte	.LBB10
 1644 05c3 52000000 		.4byte	.LBE10-.LBB10
 1645 05c7 15       		.uleb128 0x15
 1646 05c8 F3010000 		.4byte	.LASF56
 1647 05cc 01       		.byte	0x1
 1648 05cd A805     		.2byte	0x5a8
 1649 05cf 6B000000 		.4byte	0x6b
 1650 05d3 5B020000 		.4byte	.LLST16
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 58


 1651 05d7 16       		.uleb128 0x16
 1652 05d8 A3000000 		.4byte	.LASF57
 1653 05dc 01       		.byte	0x1
 1654 05dd D005     		.2byte	0x5d0
 1655 05df 6B000000 		.4byte	0x6b
 1656 05e3 05       		.uleb128 0x5
 1657 05e4 03       		.byte	0x3
 1658 05e5 01000000 		.4byte	txPeriod.4988
 1659 05e9 00       		.byte	0
 1660 05ea 00       		.byte	0
 1661 05eb 0F       		.uleb128 0xf
 1662 05ec B7010000 		.4byte	.LASF58
 1663 05f0 01       		.byte	0x1
 1664 05f1 2406     		.2byte	0x624
 1665 05f3 00000000 		.4byte	.LFB26
 1666 05f7 02000000 		.4byte	.LFE26-.LFB26
 1667 05fb 01       		.uleb128 0x1
 1668 05fc 9C       		.byte	0x9c
 1669 05fd 10060000 		.4byte	0x610
 1670 0601 10       		.uleb128 0x10
 1671 0602 F8000000 		.4byte	.LASF36
 1672 0606 01       		.byte	0x1
 1673 0607 2406     		.2byte	0x624
 1674 0609 6B000000 		.4byte	0x6b
 1675 060d 01       		.uleb128 0x1
 1676 060e 50       		.byte	0x50
 1677 060f 00       		.byte	0
 1678 0610 20       		.uleb128 0x20
 1679 0611 E2030000 		.4byte	.LASF65
 1680 0615 01       		.byte	0x1
 1681 0616 1B       		.byte	0x1b
 1682 0617 6B000000 		.4byte	0x6b
 1683 061b 05       		.uleb128 0x5
 1684 061c 03       		.byte	0x3
 1685 061d 00000000 		.4byte	UART_initVar
 1686 0621 21       		.uleb128 0x21
 1687 0622 78010000 		.4byte	.LASF66
 1688 0626 04       		.byte	0x4
 1689 0627 7E       		.byte	0x7e
 1690 0628 6B000000 		.4byte	0x6b
 1691 062c 22       		.uleb128 0x22
 1692 062d DF010000 		.4byte	.LASF59
 1693 0631 03       		.byte	0x3
 1694 0632 27       		.byte	0x27
 1695 0633 23       		.uleb128 0x23
 1696 0634 07000000 		.4byte	.LASF67
 1697 0638 04       		.byte	0x4
 1698 0639 7F       		.byte	0x7f
 1699 063a 44060000 		.4byte	0x644
 1700 063e 24       		.uleb128 0x24
 1701 063f 6B000000 		.4byte	0x6b
 1702 0643 00       		.byte	0
 1703 0644 22       		.uleb128 0x22
 1704 0645 75020000 		.4byte	.LASF60
 1705 0649 03       		.byte	0x3
 1706 064a 28       		.byte	0x28
 1707 064b 00       		.byte	0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 59


 1708              		.section	.debug_abbrev,"",%progbits
 1709              	.Ldebug_abbrev0:
 1710 0000 01       		.uleb128 0x1
 1711 0001 11       		.uleb128 0x11
 1712 0002 01       		.byte	0x1
 1713 0003 25       		.uleb128 0x25
 1714 0004 0E       		.uleb128 0xe
 1715 0005 13       		.uleb128 0x13
 1716 0006 0B       		.uleb128 0xb
 1717 0007 03       		.uleb128 0x3
 1718 0008 0E       		.uleb128 0xe
 1719 0009 1B       		.uleb128 0x1b
 1720 000a 0E       		.uleb128 0xe
 1721 000b 55       		.uleb128 0x55
 1722 000c 17       		.uleb128 0x17
 1723 000d 11       		.uleb128 0x11
 1724 000e 01       		.uleb128 0x1
 1725 000f 10       		.uleb128 0x10
 1726 0010 17       		.uleb128 0x17
 1727 0011 00       		.byte	0
 1728 0012 00       		.byte	0
 1729 0013 02       		.uleb128 0x2
 1730 0014 24       		.uleb128 0x24
 1731 0015 00       		.byte	0
 1732 0016 0B       		.uleb128 0xb
 1733 0017 0B       		.uleb128 0xb
 1734 0018 3E       		.uleb128 0x3e
 1735 0019 0B       		.uleb128 0xb
 1736 001a 03       		.uleb128 0x3
 1737 001b 0E       		.uleb128 0xe
 1738 001c 00       		.byte	0
 1739 001d 00       		.byte	0
 1740 001e 03       		.uleb128 0x3
 1741 001f 24       		.uleb128 0x24
 1742 0020 00       		.byte	0
 1743 0021 0B       		.uleb128 0xb
 1744 0022 0B       		.uleb128 0xb
 1745 0023 3E       		.uleb128 0x3e
 1746 0024 0B       		.uleb128 0xb
 1747 0025 03       		.uleb128 0x3
 1748 0026 08       		.uleb128 0x8
 1749 0027 00       		.byte	0
 1750 0028 00       		.byte	0
 1751 0029 04       		.uleb128 0x4
 1752 002a 16       		.uleb128 0x16
 1753 002b 00       		.byte	0
 1754 002c 03       		.uleb128 0x3
 1755 002d 0E       		.uleb128 0xe
 1756 002e 3A       		.uleb128 0x3a
 1757 002f 0B       		.uleb128 0xb
 1758 0030 3B       		.uleb128 0x3b
 1759 0031 0B       		.uleb128 0xb
 1760 0032 49       		.uleb128 0x49
 1761 0033 13       		.uleb128 0x13
 1762 0034 00       		.byte	0
 1763 0035 00       		.byte	0
 1764 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 60


 1765 0037 16       		.uleb128 0x16
 1766 0038 00       		.byte	0
 1767 0039 03       		.uleb128 0x3
 1768 003a 0E       		.uleb128 0xe
 1769 003b 3A       		.uleb128 0x3a
 1770 003c 0B       		.uleb128 0xb
 1771 003d 3B       		.uleb128 0x3b
 1772 003e 05       		.uleb128 0x5
 1773 003f 49       		.uleb128 0x49
 1774 0040 13       		.uleb128 0x13
 1775 0041 00       		.byte	0
 1776 0042 00       		.byte	0
 1777 0043 06       		.uleb128 0x6
 1778 0044 35       		.uleb128 0x35
 1779 0045 00       		.byte	0
 1780 0046 49       		.uleb128 0x49
 1781 0047 13       		.uleb128 0x13
 1782 0048 00       		.byte	0
 1783 0049 00       		.byte	0
 1784 004a 07       		.uleb128 0x7
 1785 004b 2E       		.uleb128 0x2e
 1786 004c 01       		.byte	0x1
 1787 004d 3F       		.uleb128 0x3f
 1788 004e 19       		.uleb128 0x19
 1789 004f 03       		.uleb128 0x3
 1790 0050 0E       		.uleb128 0xe
 1791 0051 3A       		.uleb128 0x3a
 1792 0052 0B       		.uleb128 0xb
 1793 0053 3B       		.uleb128 0x3b
 1794 0054 05       		.uleb128 0x5
 1795 0055 27       		.uleb128 0x27
 1796 0056 19       		.uleb128 0x19
 1797 0057 49       		.uleb128 0x49
 1798 0058 13       		.uleb128 0x13
 1799 0059 20       		.uleb128 0x20
 1800 005a 0B       		.uleb128 0xb
 1801 005b 01       		.uleb128 0x1
 1802 005c 13       		.uleb128 0x13
 1803 005d 00       		.byte	0
 1804 005e 00       		.byte	0
 1805 005f 08       		.uleb128 0x8
 1806 0060 34       		.uleb128 0x34
 1807 0061 00       		.byte	0
 1808 0062 03       		.uleb128 0x3
 1809 0063 0E       		.uleb128 0xe
 1810 0064 3A       		.uleb128 0x3a
 1811 0065 0B       		.uleb128 0xb
 1812 0066 3B       		.uleb128 0x3b
 1813 0067 05       		.uleb128 0x5
 1814 0068 49       		.uleb128 0x49
 1815 0069 13       		.uleb128 0x13
 1816 006a 00       		.byte	0
 1817 006b 00       		.byte	0
 1818 006c 09       		.uleb128 0x9
 1819 006d 2E       		.uleb128 0x2e
 1820 006e 00       		.byte	0
 1821 006f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 61


 1822 0070 19       		.uleb128 0x19
 1823 0071 03       		.uleb128 0x3
 1824 0072 0E       		.uleb128 0xe
 1825 0073 3A       		.uleb128 0x3a
 1826 0074 0B       		.uleb128 0xb
 1827 0075 3B       		.uleb128 0x3b
 1828 0076 0B       		.uleb128 0xb
 1829 0077 27       		.uleb128 0x27
 1830 0078 19       		.uleb128 0x19
 1831 0079 11       		.uleb128 0x11
 1832 007a 01       		.uleb128 0x1
 1833 007b 12       		.uleb128 0x12
 1834 007c 06       		.uleb128 0x6
 1835 007d 40       		.uleb128 0x40
 1836 007e 18       		.uleb128 0x18
 1837 007f 9742     		.uleb128 0x2117
 1838 0081 19       		.uleb128 0x19
 1839 0082 00       		.byte	0
 1840 0083 00       		.byte	0
 1841 0084 0A       		.uleb128 0xa
 1842 0085 2E       		.uleb128 0x2e
 1843 0086 01       		.byte	0x1
 1844 0087 3F       		.uleb128 0x3f
 1845 0088 19       		.uleb128 0x19
 1846 0089 03       		.uleb128 0x3
 1847 008a 0E       		.uleb128 0xe
 1848 008b 3A       		.uleb128 0x3a
 1849 008c 0B       		.uleb128 0xb
 1850 008d 3B       		.uleb128 0x3b
 1851 008e 0B       		.uleb128 0xb
 1852 008f 27       		.uleb128 0x27
 1853 0090 19       		.uleb128 0x19
 1854 0091 11       		.uleb128 0x11
 1855 0092 01       		.uleb128 0x1
 1856 0093 12       		.uleb128 0x12
 1857 0094 06       		.uleb128 0x6
 1858 0095 40       		.uleb128 0x40
 1859 0096 18       		.uleb128 0x18
 1860 0097 9742     		.uleb128 0x2117
 1861 0099 19       		.uleb128 0x19
 1862 009a 01       		.uleb128 0x1
 1863 009b 13       		.uleb128 0x13
 1864 009c 00       		.byte	0
 1865 009d 00       		.byte	0
 1866 009e 0B       		.uleb128 0xb
 1867 009f 34       		.uleb128 0x34
 1868 00a0 00       		.byte	0
 1869 00a1 03       		.uleb128 0x3
 1870 00a2 0E       		.uleb128 0xe
 1871 00a3 3A       		.uleb128 0x3a
 1872 00a4 0B       		.uleb128 0xb
 1873 00a5 3B       		.uleb128 0x3b
 1874 00a6 0B       		.uleb128 0xb
 1875 00a7 49       		.uleb128 0x49
 1876 00a8 13       		.uleb128 0x13
 1877 00a9 02       		.uleb128 0x2
 1878 00aa 17       		.uleb128 0x17
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 62


 1879 00ab 00       		.byte	0
 1880 00ac 00       		.byte	0
 1881 00ad 0C       		.uleb128 0xc
 1882 00ae 898201   		.uleb128 0x4109
 1883 00b1 00       		.byte	0
 1884 00b2 11       		.uleb128 0x11
 1885 00b3 01       		.uleb128 0x1
 1886 00b4 31       		.uleb128 0x31
 1887 00b5 13       		.uleb128 0x13
 1888 00b6 00       		.byte	0
 1889 00b7 00       		.byte	0
 1890 00b8 0D       		.uleb128 0xd
 1891 00b9 898201   		.uleb128 0x4109
 1892 00bc 00       		.byte	0
 1893 00bd 11       		.uleb128 0x11
 1894 00be 01       		.uleb128 0x1
 1895 00bf 9542     		.uleb128 0x2115
 1896 00c1 19       		.uleb128 0x19
 1897 00c2 31       		.uleb128 0x31
 1898 00c3 13       		.uleb128 0x13
 1899 00c4 00       		.byte	0
 1900 00c5 00       		.byte	0
 1901 00c6 0E       		.uleb128 0xe
 1902 00c7 2E       		.uleb128 0x2e
 1903 00c8 00       		.byte	0
 1904 00c9 3F       		.uleb128 0x3f
 1905 00ca 19       		.uleb128 0x19
 1906 00cb 03       		.uleb128 0x3
 1907 00cc 0E       		.uleb128 0xe
 1908 00cd 3A       		.uleb128 0x3a
 1909 00ce 0B       		.uleb128 0xb
 1910 00cf 3B       		.uleb128 0x3b
 1911 00d0 05       		.uleb128 0x5
 1912 00d1 27       		.uleb128 0x27
 1913 00d2 19       		.uleb128 0x19
 1914 00d3 49       		.uleb128 0x49
 1915 00d4 13       		.uleb128 0x13
 1916 00d5 11       		.uleb128 0x11
 1917 00d6 01       		.uleb128 0x1
 1918 00d7 12       		.uleb128 0x12
 1919 00d8 06       		.uleb128 0x6
 1920 00d9 40       		.uleb128 0x40
 1921 00da 18       		.uleb128 0x18
 1922 00db 9742     		.uleb128 0x2117
 1923 00dd 19       		.uleb128 0x19
 1924 00de 00       		.byte	0
 1925 00df 00       		.byte	0
 1926 00e0 0F       		.uleb128 0xf
 1927 00e1 2E       		.uleb128 0x2e
 1928 00e2 01       		.byte	0x1
 1929 00e3 3F       		.uleb128 0x3f
 1930 00e4 19       		.uleb128 0x19
 1931 00e5 03       		.uleb128 0x3
 1932 00e6 0E       		.uleb128 0xe
 1933 00e7 3A       		.uleb128 0x3a
 1934 00e8 0B       		.uleb128 0xb
 1935 00e9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 63


 1936 00ea 05       		.uleb128 0x5
 1937 00eb 27       		.uleb128 0x27
 1938 00ec 19       		.uleb128 0x19
 1939 00ed 11       		.uleb128 0x11
 1940 00ee 01       		.uleb128 0x1
 1941 00ef 12       		.uleb128 0x12
 1942 00f0 06       		.uleb128 0x6
 1943 00f1 40       		.uleb128 0x40
 1944 00f2 18       		.uleb128 0x18
 1945 00f3 9742     		.uleb128 0x2117
 1946 00f5 19       		.uleb128 0x19
 1947 00f6 01       		.uleb128 0x1
 1948 00f7 13       		.uleb128 0x13
 1949 00f8 00       		.byte	0
 1950 00f9 00       		.byte	0
 1951 00fa 10       		.uleb128 0x10
 1952 00fb 05       		.uleb128 0x5
 1953 00fc 00       		.byte	0
 1954 00fd 03       		.uleb128 0x3
 1955 00fe 0E       		.uleb128 0xe
 1956 00ff 3A       		.uleb128 0x3a
 1957 0100 0B       		.uleb128 0xb
 1958 0101 3B       		.uleb128 0x3b
 1959 0102 05       		.uleb128 0x5
 1960 0103 49       		.uleb128 0x49
 1961 0104 13       		.uleb128 0x13
 1962 0105 02       		.uleb128 0x2
 1963 0106 18       		.uleb128 0x18
 1964 0107 00       		.byte	0
 1965 0108 00       		.byte	0
 1966 0109 11       		.uleb128 0x11
 1967 010a 2E       		.uleb128 0x2e
 1968 010b 01       		.byte	0x1
 1969 010c 31       		.uleb128 0x31
 1970 010d 13       		.uleb128 0x13
 1971 010e 11       		.uleb128 0x11
 1972 010f 01       		.uleb128 0x1
 1973 0110 12       		.uleb128 0x12
 1974 0111 06       		.uleb128 0x6
 1975 0112 40       		.uleb128 0x40
 1976 0113 18       		.uleb128 0x18
 1977 0114 9742     		.uleb128 0x2117
 1978 0116 19       		.uleb128 0x19
 1979 0117 01       		.uleb128 0x1
 1980 0118 13       		.uleb128 0x13
 1981 0119 00       		.byte	0
 1982 011a 00       		.byte	0
 1983 011b 12       		.uleb128 0x12
 1984 011c 34       		.uleb128 0x34
 1985 011d 00       		.byte	0
 1986 011e 31       		.uleb128 0x31
 1987 011f 13       		.uleb128 0x13
 1988 0120 02       		.uleb128 0x2
 1989 0121 18       		.uleb128 0x18
 1990 0122 00       		.byte	0
 1991 0123 00       		.byte	0
 1992 0124 13       		.uleb128 0x13
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 64


 1993 0125 34       		.uleb128 0x34
 1994 0126 00       		.byte	0
 1995 0127 31       		.uleb128 0x31
 1996 0128 13       		.uleb128 0x13
 1997 0129 02       		.uleb128 0x2
 1998 012a 17       		.uleb128 0x17
 1999 012b 00       		.byte	0
 2000 012c 00       		.byte	0
 2001 012d 14       		.uleb128 0x14
 2002 012e 2E       		.uleb128 0x2e
 2003 012f 01       		.byte	0x1
 2004 0130 3F       		.uleb128 0x3f
 2005 0131 19       		.uleb128 0x19
 2006 0132 03       		.uleb128 0x3
 2007 0133 0E       		.uleb128 0xe
 2008 0134 3A       		.uleb128 0x3a
 2009 0135 0B       		.uleb128 0xb
 2010 0136 3B       		.uleb128 0x3b
 2011 0137 05       		.uleb128 0x5
 2012 0138 27       		.uleb128 0x27
 2013 0139 19       		.uleb128 0x19
 2014 013a 49       		.uleb128 0x49
 2015 013b 13       		.uleb128 0x13
 2016 013c 11       		.uleb128 0x11
 2017 013d 01       		.uleb128 0x1
 2018 013e 12       		.uleb128 0x12
 2019 013f 06       		.uleb128 0x6
 2020 0140 40       		.uleb128 0x40
 2021 0141 18       		.uleb128 0x18
 2022 0142 9742     		.uleb128 0x2117
 2023 0144 19       		.uleb128 0x19
 2024 0145 01       		.uleb128 0x1
 2025 0146 13       		.uleb128 0x13
 2026 0147 00       		.byte	0
 2027 0148 00       		.byte	0
 2028 0149 15       		.uleb128 0x15
 2029 014a 34       		.uleb128 0x34
 2030 014b 00       		.byte	0
 2031 014c 03       		.uleb128 0x3
 2032 014d 0E       		.uleb128 0xe
 2033 014e 3A       		.uleb128 0x3a
 2034 014f 0B       		.uleb128 0xb
 2035 0150 3B       		.uleb128 0x3b
 2036 0151 05       		.uleb128 0x5
 2037 0152 49       		.uleb128 0x49
 2038 0153 13       		.uleb128 0x13
 2039 0154 02       		.uleb128 0x2
 2040 0155 17       		.uleb128 0x17
 2041 0156 00       		.byte	0
 2042 0157 00       		.byte	0
 2043 0158 16       		.uleb128 0x16
 2044 0159 34       		.uleb128 0x34
 2045 015a 00       		.byte	0
 2046 015b 03       		.uleb128 0x3
 2047 015c 0E       		.uleb128 0xe
 2048 015d 3A       		.uleb128 0x3a
 2049 015e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 65


 2050 015f 3B       		.uleb128 0x3b
 2051 0160 05       		.uleb128 0x5
 2052 0161 49       		.uleb128 0x49
 2053 0162 13       		.uleb128 0x13
 2054 0163 02       		.uleb128 0x2
 2055 0164 18       		.uleb128 0x18
 2056 0165 00       		.byte	0
 2057 0166 00       		.byte	0
 2058 0167 17       		.uleb128 0x17
 2059 0168 1D       		.uleb128 0x1d
 2060 0169 01       		.byte	0x1
 2061 016a 31       		.uleb128 0x31
 2062 016b 13       		.uleb128 0x13
 2063 016c 11       		.uleb128 0x11
 2064 016d 01       		.uleb128 0x1
 2065 016e 12       		.uleb128 0x12
 2066 016f 06       		.uleb128 0x6
 2067 0170 58       		.uleb128 0x58
 2068 0171 0B       		.uleb128 0xb
 2069 0172 59       		.uleb128 0x59
 2070 0173 05       		.uleb128 0x5
 2071 0174 01       		.uleb128 0x1
 2072 0175 13       		.uleb128 0x13
 2073 0176 00       		.byte	0
 2074 0177 00       		.byte	0
 2075 0178 18       		.uleb128 0x18
 2076 0179 0B       		.uleb128 0xb
 2077 017a 01       		.byte	0x1
 2078 017b 11       		.uleb128 0x11
 2079 017c 01       		.uleb128 0x1
 2080 017d 12       		.uleb128 0x12
 2081 017e 06       		.uleb128 0x6
 2082 017f 00       		.byte	0
 2083 0180 00       		.byte	0
 2084 0181 19       		.uleb128 0x19
 2085 0182 1D       		.uleb128 0x1d
 2086 0183 01       		.byte	0x1
 2087 0184 31       		.uleb128 0x31
 2088 0185 13       		.uleb128 0x13
 2089 0186 11       		.uleb128 0x11
 2090 0187 01       		.uleb128 0x1
 2091 0188 12       		.uleb128 0x12
 2092 0189 06       		.uleb128 0x6
 2093 018a 58       		.uleb128 0x58
 2094 018b 0B       		.uleb128 0xb
 2095 018c 59       		.uleb128 0x59
 2096 018d 05       		.uleb128 0x5
 2097 018e 00       		.byte	0
 2098 018f 00       		.byte	0
 2099 0190 1A       		.uleb128 0x1a
 2100 0191 05       		.uleb128 0x5
 2101 0192 00       		.byte	0
 2102 0193 03       		.uleb128 0x3
 2103 0194 0E       		.uleb128 0xe
 2104 0195 3A       		.uleb128 0x3a
 2105 0196 0B       		.uleb128 0xb
 2106 0197 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 66


 2107 0198 05       		.uleb128 0x5
 2108 0199 49       		.uleb128 0x49
 2109 019a 13       		.uleb128 0x13
 2110 019b 02       		.uleb128 0x2
 2111 019c 17       		.uleb128 0x17
 2112 019d 00       		.byte	0
 2113 019e 00       		.byte	0
 2114 019f 1B       		.uleb128 0x1b
 2115 01a0 0F       		.uleb128 0xf
 2116 01a1 00       		.byte	0
 2117 01a2 0B       		.uleb128 0xb
 2118 01a3 0B       		.uleb128 0xb
 2119 01a4 49       		.uleb128 0x49
 2120 01a5 13       		.uleb128 0x13
 2121 01a6 00       		.byte	0
 2122 01a7 00       		.byte	0
 2123 01a8 1C       		.uleb128 0x1c
 2124 01a9 26       		.uleb128 0x26
 2125 01aa 00       		.byte	0
 2126 01ab 49       		.uleb128 0x49
 2127 01ac 13       		.uleb128 0x13
 2128 01ad 00       		.byte	0
 2129 01ae 00       		.byte	0
 2130 01af 1D       		.uleb128 0x1d
 2131 01b0 898201   		.uleb128 0x4109
 2132 01b3 01       		.byte	0x1
 2133 01b4 11       		.uleb128 0x11
 2134 01b5 01       		.uleb128 0x1
 2135 01b6 31       		.uleb128 0x31
 2136 01b7 13       		.uleb128 0x13
 2137 01b8 01       		.uleb128 0x1
 2138 01b9 13       		.uleb128 0x13
 2139 01ba 00       		.byte	0
 2140 01bb 00       		.byte	0
 2141 01bc 1E       		.uleb128 0x1e
 2142 01bd 8A8201   		.uleb128 0x410a
 2143 01c0 00       		.byte	0
 2144 01c1 02       		.uleb128 0x2
 2145 01c2 18       		.uleb128 0x18
 2146 01c3 9142     		.uleb128 0x2111
 2147 01c5 18       		.uleb128 0x18
 2148 01c6 00       		.byte	0
 2149 01c7 00       		.byte	0
 2150 01c8 1F       		.uleb128 0x1f
 2151 01c9 898201   		.uleb128 0x4109
 2152 01cc 01       		.byte	0x1
 2153 01cd 11       		.uleb128 0x11
 2154 01ce 01       		.uleb128 0x1
 2155 01cf 9542     		.uleb128 0x2115
 2156 01d1 19       		.uleb128 0x19
 2157 01d2 31       		.uleb128 0x31
 2158 01d3 13       		.uleb128 0x13
 2159 01d4 00       		.byte	0
 2160 01d5 00       		.byte	0
 2161 01d6 20       		.uleb128 0x20
 2162 01d7 34       		.uleb128 0x34
 2163 01d8 00       		.byte	0
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 67


 2164 01d9 03       		.uleb128 0x3
 2165 01da 0E       		.uleb128 0xe
 2166 01db 3A       		.uleb128 0x3a
 2167 01dc 0B       		.uleb128 0xb
 2168 01dd 3B       		.uleb128 0x3b
 2169 01de 0B       		.uleb128 0xb
 2170 01df 49       		.uleb128 0x49
 2171 01e0 13       		.uleb128 0x13
 2172 01e1 3F       		.uleb128 0x3f
 2173 01e2 19       		.uleb128 0x19
 2174 01e3 02       		.uleb128 0x2
 2175 01e4 18       		.uleb128 0x18
 2176 01e5 00       		.byte	0
 2177 01e6 00       		.byte	0
 2178 01e7 21       		.uleb128 0x21
 2179 01e8 2E       		.uleb128 0x2e
 2180 01e9 00       		.byte	0
 2181 01ea 3F       		.uleb128 0x3f
 2182 01eb 19       		.uleb128 0x19
 2183 01ec 03       		.uleb128 0x3
 2184 01ed 0E       		.uleb128 0xe
 2185 01ee 3A       		.uleb128 0x3a
 2186 01ef 0B       		.uleb128 0xb
 2187 01f0 3B       		.uleb128 0x3b
 2188 01f1 0B       		.uleb128 0xb
 2189 01f2 27       		.uleb128 0x27
 2190 01f3 19       		.uleb128 0x19
 2191 01f4 49       		.uleb128 0x49
 2192 01f5 13       		.uleb128 0x13
 2193 01f6 3C       		.uleb128 0x3c
 2194 01f7 19       		.uleb128 0x19
 2195 01f8 00       		.byte	0
 2196 01f9 00       		.byte	0
 2197 01fa 22       		.uleb128 0x22
 2198 01fb 2E       		.uleb128 0x2e
 2199 01fc 00       		.byte	0
 2200 01fd 3F       		.uleb128 0x3f
 2201 01fe 19       		.uleb128 0x19
 2202 01ff 03       		.uleb128 0x3
 2203 0200 0E       		.uleb128 0xe
 2204 0201 3A       		.uleb128 0x3a
 2205 0202 0B       		.uleb128 0xb
 2206 0203 3B       		.uleb128 0x3b
 2207 0204 0B       		.uleb128 0xb
 2208 0205 27       		.uleb128 0x27
 2209 0206 19       		.uleb128 0x19
 2210 0207 3C       		.uleb128 0x3c
 2211 0208 19       		.uleb128 0x19
 2212 0209 00       		.byte	0
 2213 020a 00       		.byte	0
 2214 020b 23       		.uleb128 0x23
 2215 020c 2E       		.uleb128 0x2e
 2216 020d 01       		.byte	0x1
 2217 020e 3F       		.uleb128 0x3f
 2218 020f 19       		.uleb128 0x19
 2219 0210 03       		.uleb128 0x3
 2220 0211 0E       		.uleb128 0xe
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 68


 2221 0212 3A       		.uleb128 0x3a
 2222 0213 0B       		.uleb128 0xb
 2223 0214 3B       		.uleb128 0x3b
 2224 0215 0B       		.uleb128 0xb
 2225 0216 27       		.uleb128 0x27
 2226 0217 19       		.uleb128 0x19
 2227 0218 3C       		.uleb128 0x3c
 2228 0219 19       		.uleb128 0x19
 2229 021a 01       		.uleb128 0x1
 2230 021b 13       		.uleb128 0x13
 2231 021c 00       		.byte	0
 2232 021d 00       		.byte	0
 2233 021e 24       		.uleb128 0x24
 2234 021f 05       		.uleb128 0x5
 2235 0220 00       		.byte	0
 2236 0221 49       		.uleb128 0x49
 2237 0222 13       		.uleb128 0x13
 2238 0223 00       		.byte	0
 2239 0224 00       		.byte	0
 2240 0225 00       		.byte	0
 2241              		.section	.debug_loc,"",%progbits
 2242              	.Ldebug_loc0:
 2243              	.LLST0:
 2244 0000 0A000000 		.4byte	.LVL1
 2245 0004 2B000000 		.4byte	.LVL2-1
 2246 0008 0100     		.2byte	0x1
 2247 000a 50       		.byte	0x50
 2248 000b 2B000000 		.4byte	.LVL2-1
 2249 000f 32000000 		.4byte	.LVL3
 2250 0013 0100     		.2byte	0x1
 2251 0015 54       		.byte	0x54
 2252 0016 32000000 		.4byte	.LVL3
 2253 001a 35000000 		.4byte	.LVL4-1
 2254 001e 0100     		.2byte	0x1
 2255 0020 50       		.byte	0x50
 2256 0021 00000000 		.4byte	0
 2257 0025 00000000 		.4byte	0
 2258              	.LLST1:
 2259 0029 0A000000 		.4byte	.LVL8
 2260 002d 15000000 		.4byte	.LVL9-1
 2261 0031 0100     		.2byte	0x1
 2262 0033 50       		.byte	0x50
 2263 0034 15000000 		.4byte	.LVL9-1
 2264 0038 32000000 		.4byte	.LVL10
 2265 003c 0100     		.2byte	0x1
 2266 003e 54       		.byte	0x54
 2267 003f 32000000 		.4byte	.LVL10
 2268 0043 35000000 		.4byte	.LVL11-1
 2269 0047 0100     		.2byte	0x1
 2270 0049 50       		.byte	0x50
 2271 004a 00000000 		.4byte	0
 2272 004e 00000000 		.4byte	0
 2273              	.LLST2:
 2274 0052 04000000 		.4byte	.LVL15
 2275 0056 08000000 		.4byte	.LVL16
 2276 005a 0600     		.2byte	0x6
 2277 005c 70       		.byte	0x70
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 69


 2278 005d 00       		.sleb128 0
 2279 005e 08       		.byte	0x8
 2280 005f 7F       		.byte	0x7f
 2281 0060 1A       		.byte	0x1a
 2282 0061 9F       		.byte	0x9f
 2283 0062 00000000 		.4byte	0
 2284 0066 00000000 		.4byte	0
 2285              	.LLST3:
 2286 006a 00000000 		.4byte	.LVL17
 2287 006e 18000000 		.4byte	.LVL19
 2288 0072 0200     		.2byte	0x2
 2289 0074 30       		.byte	0x30
 2290 0075 9F       		.byte	0x9f
 2291 0076 18000000 		.4byte	.LVL19
 2292 007a 28000000 		.4byte	.LFE9
 2293 007e 0100     		.2byte	0x1
 2294 0080 50       		.byte	0x50
 2295 0081 00000000 		.4byte	0
 2296 0085 00000000 		.4byte	0
 2297              	.LLST4:
 2298 0089 04000000 		.4byte	.LVL21
 2299 008d 0C000000 		.4byte	.LVL23
 2300 0091 0600     		.2byte	0x6
 2301 0093 70       		.byte	0x70
 2302 0094 00       		.sleb128 0
 2303 0095 08       		.byte	0x8
 2304 0096 7F       		.byte	0x7f
 2305 0097 1A       		.byte	0x1a
 2306 0098 9F       		.byte	0x9f
 2307 0099 00000000 		.4byte	0
 2308 009d 00000000 		.4byte	0
 2309              	.LLST5:
 2310 00a1 04000000 		.4byte	.LVL24
 2311 00a5 08000000 		.4byte	.LVL25
 2312 00a9 0A00     		.2byte	0xa
 2313 00ab 70       		.byte	0x70
 2314 00ac 00       		.sleb128 0
 2315 00ad 08       		.byte	0x8
 2316 00ae 20       		.byte	0x20
 2317 00af 1A       		.byte	0x1a
 2318 00b0 48       		.byte	0x48
 2319 00b1 24       		.byte	0x24
 2320 00b2 30       		.byte	0x30
 2321 00b3 2E       		.byte	0x2e
 2322 00b4 9F       		.byte	0x9f
 2323 00b5 00000000 		.4byte	0
 2324 00b9 00000000 		.4byte	0
 2325              	.LLST6:
 2326 00bd 06000000 		.4byte	.LVL26
 2327 00c1 1F000000 		.4byte	.LVL27-1
 2328 00c5 0100     		.2byte	0x1
 2329 00c7 50       		.byte	0x50
 2330 00c8 00000000 		.4byte	0
 2331 00cc 00000000 		.4byte	0
 2332              	.LLST7:
 2333 00d0 00000000 		.4byte	.LVL34
 2334 00d4 0C000000 		.4byte	.LVL35
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 70


 2335 00d8 0100     		.2byte	0x1
 2336 00da 50       		.byte	0x50
 2337 00db 0C000000 		.4byte	.LVL35
 2338 00df 1C000000 		.4byte	.LVL39
 2339 00e3 0100     		.2byte	0x1
 2340 00e5 55       		.byte	0x55
 2341 00e6 1C000000 		.4byte	.LVL39
 2342 00ea 20000000 		.4byte	.LFE20
 2343 00ee 0400     		.2byte	0x4
 2344 00f0 F3       		.byte	0xf3
 2345 00f1 01       		.uleb128 0x1
 2346 00f2 50       		.byte	0x50
 2347 00f3 9F       		.byte	0x9f
 2348 00f4 00000000 		.4byte	0
 2349 00f8 00000000 		.4byte	0
 2350              	.LLST8:
 2351 00fc 00000000 		.4byte	.LVL34
 2352 0100 0C000000 		.4byte	.LVL35
 2353 0104 0200     		.2byte	0x2
 2354 0106 30       		.byte	0x30
 2355 0107 9F       		.byte	0x9f
 2356 0108 0C000000 		.4byte	.LVL35
 2357 010c 12000000 		.4byte	.LVL36
 2358 0110 0100     		.2byte	0x1
 2359 0112 54       		.byte	0x54
 2360 0113 12000000 		.4byte	.LVL36
 2361 0117 18000000 		.4byte	.LVL37
 2362 011b 0300     		.2byte	0x3
 2363 011d 74       		.byte	0x74
 2364 011e 7F       		.sleb128 -1
 2365 011f 9F       		.byte	0x9f
 2366 0120 18000000 		.4byte	.LVL37
 2367 0124 1A000000 		.4byte	.LVL38
 2368 0128 0100     		.2byte	0x1
 2369 012a 54       		.byte	0x54
 2370 012b 00000000 		.4byte	0
 2371 012f 00000000 		.4byte	0
 2372              	.LLST9:
 2373 0133 00000000 		.4byte	.LVL40
 2374 0137 0E000000 		.4byte	.LVL41
 2375 013b 0100     		.2byte	0x1
 2376 013d 50       		.byte	0x50
 2377 013e 0E000000 		.4byte	.LVL41
 2378 0142 20000000 		.4byte	.LVL45
 2379 0146 0100     		.2byte	0x1
 2380 0148 55       		.byte	0x55
 2381 0149 20000000 		.4byte	.LVL45
 2382 014d 24000000 		.4byte	.LFE21
 2383 0151 0400     		.2byte	0x4
 2384 0153 F3       		.byte	0xf3
 2385 0154 01       		.uleb128 0x1
 2386 0155 50       		.byte	0x50
 2387 0156 9F       		.byte	0x9f
 2388 0157 00000000 		.4byte	0
 2389 015b 00000000 		.4byte	0
 2390              	.LLST10:
 2391 015f 00000000 		.4byte	.LVL40
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 71


 2392 0163 0E000000 		.4byte	.LVL41
 2393 0167 0100     		.2byte	0x1
 2394 0169 51       		.byte	0x51
 2395 016a 0E000000 		.4byte	.LVL41
 2396 016e 24000000 		.4byte	.LFE21
 2397 0172 0400     		.2byte	0x4
 2398 0174 F3       		.byte	0xf3
 2399 0175 01       		.uleb128 0x1
 2400 0176 51       		.byte	0x51
 2401 0177 9F       		.byte	0x9f
 2402 0178 00000000 		.4byte	0
 2403 017c 00000000 		.4byte	0
 2404              	.LLST11:
 2405 0180 00000000 		.4byte	.LVL40
 2406 0184 0E000000 		.4byte	.LVL41
 2407 0188 0200     		.2byte	0x2
 2408 018a 30       		.byte	0x30
 2409 018b 9F       		.byte	0x9f
 2410 018c 0E000000 		.4byte	.LVL41
 2411 0190 1A000000 		.4byte	.LVL42
 2412 0194 0100     		.2byte	0x1
 2413 0196 54       		.byte	0x54
 2414 0197 1A000000 		.4byte	.LVL42
 2415 019b 1C000000 		.4byte	.LVL43
 2416 019f 0300     		.2byte	0x3
 2417 01a1 74       		.byte	0x74
 2418 01a2 01       		.sleb128 1
 2419 01a3 9F       		.byte	0x9f
 2420 01a4 1C000000 		.4byte	.LVL43
 2421 01a8 1E000000 		.4byte	.LVL44
 2422 01ac 0300     		.2byte	0x3
 2423 01ae 74       		.byte	0x74
 2424 01af 00       		.sleb128 0
 2425 01b0 9F       		.byte	0x9f
 2426 01b1 00000000 		.4byte	0
 2427 01b5 00000000 		.4byte	0
 2428              	.LLST12:
 2429 01b9 00000000 		.4byte	.LVL46
 2430 01bd 0B000000 		.4byte	.LVL47-1
 2431 01c1 0100     		.2byte	0x1
 2432 01c3 50       		.byte	0x50
 2433 01c4 0B000000 		.4byte	.LVL47-1
 2434 01c8 1C000000 		.4byte	.LVL49
 2435 01cc 0400     		.2byte	0x4
 2436 01ce F3       		.byte	0xf3
 2437 01cf 01       		.uleb128 0x1
 2438 01d0 50       		.byte	0x50
 2439 01d1 9F       		.byte	0x9f
 2440 01d2 1C000000 		.4byte	.LVL49
 2441 01d6 24000000 		.4byte	.LFE22
 2442 01da 0100     		.2byte	0x1
 2443 01dc 50       		.byte	0x50
 2444 01dd 00000000 		.4byte	0
 2445 01e1 00000000 		.4byte	0
 2446              	.LLST13:
 2447 01e5 06000000 		.4byte	.LVL50
 2448 01e9 0E000000 		.4byte	.LVL51
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 72


 2449 01ed 0100     		.2byte	0x1
 2450 01ef 50       		.byte	0x50
 2451 01f0 14000000 		.4byte	.LVL52
 2452 01f4 1C000000 		.4byte	.LFE23
 2453 01f8 0100     		.2byte	0x1
 2454 01fa 50       		.byte	0x50
 2455 01fb 00000000 		.4byte	0
 2456 01ff 00000000 		.4byte	0
 2457              	.LLST14:
 2458 0203 06000000 		.4byte	.LVL53
 2459 0207 1F000000 		.4byte	.LVL54-1
 2460 020b 0100     		.2byte	0x1
 2461 020d 50       		.byte	0x50
 2462 020e 00000000 		.4byte	0
 2463 0212 00000000 		.4byte	0
 2464              	.LLST15:
 2465 0216 00000000 		.4byte	.LVL55
 2466 021a 2C000000 		.4byte	.LVL58
 2467 021e 0100     		.2byte	0x1
 2468 0220 50       		.byte	0x50
 2469 0221 2C000000 		.4byte	.LVL58
 2470 0225 32000000 		.4byte	.LVL59
 2471 0229 0400     		.2byte	0x4
 2472 022b F3       		.byte	0xf3
 2473 022c 01       		.uleb128 0x1
 2474 022d 50       		.byte	0x50
 2475 022e 9F       		.byte	0x9f
 2476 022f 32000000 		.4byte	.LVL59
 2477 0233 3C000000 		.4byte	.LVL62
 2478 0237 0100     		.2byte	0x1
 2479 0239 50       		.byte	0x50
 2480 023a 3C000000 		.4byte	.LVL62
 2481 023e 44000000 		.4byte	.LVL63
 2482 0242 0400     		.2byte	0x4
 2483 0244 F3       		.byte	0xf3
 2484 0245 01       		.uleb128 0x1
 2485 0246 50       		.byte	0x50
 2486 0247 9F       		.byte	0x9f
 2487 0248 44000000 		.4byte	.LVL63
 2488 024c 58000000 		.4byte	.LFE25
 2489 0250 0100     		.2byte	0x1
 2490 0252 50       		.byte	0x50
 2491 0253 00000000 		.4byte	0
 2492 0257 00000000 		.4byte	0
 2493              	.LLST16:
 2494 025b 1E000000 		.4byte	.LVL56
 2495 025f 26000000 		.4byte	.LVL57
 2496 0263 0100     		.2byte	0x1
 2497 0265 52       		.byte	0x52
 2498 0266 36000000 		.4byte	.LVL60
 2499 026a 38000000 		.4byte	.LVL61
 2500 026e 0100     		.2byte	0x1
 2501 0270 52       		.byte	0x52
 2502 0271 00000000 		.4byte	0
 2503 0275 00000000 		.4byte	0
 2504              		.section	.debug_aranges,"",%progbits
 2505 0000 EC000000 		.4byte	0xec
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 73


 2506 0004 0200     		.2byte	0x2
 2507 0006 00000000 		.4byte	.Ldebug_info0
 2508 000a 04       		.byte	0x4
 2509 000b 00       		.byte	0
 2510 000c 0000     		.2byte	0
 2511 000e 0000     		.2byte	0
 2512 0010 00000000 		.4byte	.LFB1
 2513 0014 24000000 		.4byte	.LFE1-.LFB1
 2514 0018 00000000 		.4byte	.LFB2
 2515 001c 3C000000 		.4byte	.LFE2-.LFB2
 2516 0020 00000000 		.4byte	.LFB0
 2517 0024 1C000000 		.4byte	.LFE0-.LFB0
 2518 0028 00000000 		.4byte	.LFB3
 2519 002c 40000000 		.4byte	.LFE3-.LFB3
 2520 0030 00000000 		.4byte	.LFB4
 2521 0034 04000000 		.4byte	.LFE4-.LFB4
 2522 0038 00000000 		.4byte	.LFB5
 2523 003c 02000000 		.4byte	.LFE5-.LFB5
 2524 0040 00000000 		.4byte	.LFB6
 2525 0044 0C000000 		.4byte	.LFE6-.LFB6
 2526 0048 00000000 		.4byte	.LFB7
 2527 004c 0C000000 		.4byte	.LFE7-.LFB7
 2528 0050 00000000 		.4byte	.LFB8
 2529 0054 10000000 		.4byte	.LFE8-.LFB8
 2530 0058 00000000 		.4byte	.LFB9
 2531 005c 28000000 		.4byte	.LFE9-.LFB9
 2532 0060 00000000 		.4byte	.LFB10
 2533 0064 18000000 		.4byte	.LFE10-.LFB10
 2534 0068 00000000 		.4byte	.LFB11
 2535 006c 10000000 		.4byte	.LFE11-.LFB11
 2536 0070 00000000 		.4byte	.LFB12
 2537 0074 24000000 		.4byte	.LFE12-.LFB12
 2538 0078 00000000 		.4byte	.LFB13
 2539 007c 02000000 		.4byte	.LFE13-.LFB13
 2540 0080 00000000 		.4byte	.LFB14
 2541 0084 0C000000 		.4byte	.LFE14-.LFB14
 2542 0088 00000000 		.4byte	.LFB15
 2543 008c 0C000000 		.4byte	.LFE15-.LFB15
 2544 0090 00000000 		.4byte	.LFB16
 2545 0094 0C000000 		.4byte	.LFE16-.LFB16
 2546 0098 00000000 		.4byte	.LFB17
 2547 009c 14000000 		.4byte	.LFE17-.LFB17
 2548 00a0 00000000 		.4byte	.LFB18
 2549 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2550 00a8 00000000 		.4byte	.LFB19
 2551 00ac 18000000 		.4byte	.LFE19-.LFB19
 2552 00b0 00000000 		.4byte	.LFB20
 2553 00b4 20000000 		.4byte	.LFE20-.LFB20
 2554 00b8 00000000 		.4byte	.LFB21
 2555 00bc 24000000 		.4byte	.LFE21-.LFB21
 2556 00c0 00000000 		.4byte	.LFB22
 2557 00c4 24000000 		.4byte	.LFE22-.LFB22
 2558 00c8 00000000 		.4byte	.LFB23
 2559 00cc 1C000000 		.4byte	.LFE23-.LFB23
 2560 00d0 00000000 		.4byte	.LFB24
 2561 00d4 24000000 		.4byte	.LFE24-.LFB24
 2562 00d8 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 74


 2563 00dc 58000000 		.4byte	.LFE25-.LFB25
 2564 00e0 00000000 		.4byte	.LFB26
 2565 00e4 02000000 		.4byte	.LFE26-.LFB26
 2566 00e8 00000000 		.4byte	0
 2567 00ec 00000000 		.4byte	0
 2568              		.section	.debug_ranges,"",%progbits
 2569              	.Ldebug_ranges0:
 2570 0000 00000000 		.4byte	.LFB1
 2571 0004 24000000 		.4byte	.LFE1
 2572 0008 00000000 		.4byte	.LFB2
 2573 000c 3C000000 		.4byte	.LFE2
 2574 0010 00000000 		.4byte	.LFB0
 2575 0014 1C000000 		.4byte	.LFE0
 2576 0018 00000000 		.4byte	.LFB3
 2577 001c 40000000 		.4byte	.LFE3
 2578 0020 00000000 		.4byte	.LFB4
 2579 0024 04000000 		.4byte	.LFE4
 2580 0028 00000000 		.4byte	.LFB5
 2581 002c 02000000 		.4byte	.LFE5
 2582 0030 00000000 		.4byte	.LFB6
 2583 0034 0C000000 		.4byte	.LFE6
 2584 0038 00000000 		.4byte	.LFB7
 2585 003c 0C000000 		.4byte	.LFE7
 2586 0040 00000000 		.4byte	.LFB8
 2587 0044 10000000 		.4byte	.LFE8
 2588 0048 00000000 		.4byte	.LFB9
 2589 004c 28000000 		.4byte	.LFE9
 2590 0050 00000000 		.4byte	.LFB10
 2591 0054 18000000 		.4byte	.LFE10
 2592 0058 00000000 		.4byte	.LFB11
 2593 005c 10000000 		.4byte	.LFE11
 2594 0060 00000000 		.4byte	.LFB12
 2595 0064 24000000 		.4byte	.LFE12
 2596 0068 00000000 		.4byte	.LFB13
 2597 006c 02000000 		.4byte	.LFE13
 2598 0070 00000000 		.4byte	.LFB14
 2599 0074 0C000000 		.4byte	.LFE14
 2600 0078 00000000 		.4byte	.LFB15
 2601 007c 0C000000 		.4byte	.LFE15
 2602 0080 00000000 		.4byte	.LFB16
 2603 0084 0C000000 		.4byte	.LFE16
 2604 0088 00000000 		.4byte	.LFB17
 2605 008c 14000000 		.4byte	.LFE17
 2606 0090 00000000 		.4byte	.LFB18
 2607 0094 0C000000 		.4byte	.LFE18
 2608 0098 00000000 		.4byte	.LFB19
 2609 009c 18000000 		.4byte	.LFE19
 2610 00a0 00000000 		.4byte	.LFB20
 2611 00a4 20000000 		.4byte	.LFE20
 2612 00a8 00000000 		.4byte	.LFB21
 2613 00ac 24000000 		.4byte	.LFE21
 2614 00b0 00000000 		.4byte	.LFB22
 2615 00b4 24000000 		.4byte	.LFE22
 2616 00b8 00000000 		.4byte	.LFB23
 2617 00bc 1C000000 		.4byte	.LFE23
 2618 00c0 00000000 		.4byte	.LFB24
 2619 00c4 24000000 		.4byte	.LFE24
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 75


 2620 00c8 00000000 		.4byte	.LFB25
 2621 00cc 58000000 		.4byte	.LFE25
 2622 00d0 00000000 		.4byte	.LFB26
 2623 00d4 02000000 		.4byte	.LFE26
 2624 00d8 00000000 		.4byte	0
 2625 00dc 00000000 		.4byte	0
 2626              		.section	.debug_line,"",%progbits
 2627              	.Ldebug_line0:
 2628 0000 DD020000 		.section	.debug_str,"MS",%progbits,1
 2628      02006100 
 2628      00000201 
 2628      FB0E0D00 
 2628      01010101 
 2629              	.LASF10:
 2630 0000 75696E74 		.ascii	"uint16\000"
 2630      313600
 2631              	.LASF67:
 2632 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2632      69744372 
 2632      69746963 
 2632      616C5365 
 2632      6374696F 
 2633              	.LASF42:
 2634 001d 74784461 		.ascii	"txDataByte\000"
 2634      74614279 
 2634      746500
 2635              	.LASF47:
 2636 0028 73747269 		.ascii	"string\000"
 2636      6E6700
 2637              	.LASF7:
 2638 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2638      206C6F6E 
 2638      6720756E 
 2638      7369676E 
 2638      65642069 
 2639              	.LASF22:
 2640 0046 55415254 		.ascii	"UART_Start\000"
 2640      5F537461 
 2640      727400
 2641              	.LASF40:
 2642 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2642      5F536574 
 2642      5478496E 
 2642      74657272 
 2642      7570744D 
 2643              	.LASF62:
 2644 0069 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART.c\000"
 2644      6E657261 
 2644      7465645F 
 2644      536F7572 
 2644      63655C50 
 2645              	.LASF6:
 2646 0089 6C6F6E67 		.ascii	"long long int\000"
 2646      206C6F6E 
 2646      6720696E 
 2646      7400
 2647              	.LASF0:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 76


 2648 0097 7369676E 		.ascii	"signed char\000"
 2648      65642063 
 2648      68617200 
 2649              	.LASF57:
 2650 00a3 74785065 		.ascii	"txPeriod\000"
 2650      72696F64 
 2650      00
 2651              	.LASF4:
 2652 00ac 6C6F6E67 		.ascii	"long int\000"
 2652      20696E74 
 2652      00
 2653              	.LASF45:
 2654 00b5 55415254 		.ascii	"UART_PutChar\000"
 2654      5F507574 
 2654      43686172 
 2654      00
 2655              	.LASF18:
 2656 00c2 55415254 		.ascii	"UART_ReadRxData\000"
 2656      5F526561 
 2656      64527844 
 2656      61746100 
 2657              	.LASF9:
 2658 00d2 75696E74 		.ascii	"uint8\000"
 2658      3800
 2659              	.LASF43:
 2660 00d8 55415254 		.ascii	"UART_ReadControlRegister\000"
 2660      5F526561 
 2660      64436F6E 
 2660      74726F6C 
 2660      52656769 
 2661              	.LASF12:
 2662 00f1 646F7562 		.ascii	"double\000"
 2662      6C6500
 2663              	.LASF36:
 2664 00f8 61646472 		.ascii	"addressMode\000"
 2664      6573734D 
 2664      6F646500 
 2665              	.LASF27:
 2666 0104 636F6E74 		.ascii	"control\000"
 2666      726F6C00 
 2667              	.LASF64:
 2668 010c 55415254 		.ascii	"UART_Init\000"
 2668      5F496E69 
 2668      7400
 2669              	.LASF55:
 2670 0116 7265744D 		.ascii	"retMode\000"
 2670      6F646500 
 2671              	.LASF31:
 2672 011e 55415254 		.ascii	"UART_GetByte\000"
 2672      5F476574 
 2672      42797465 
 2672      00
 2673              	.LASF8:
 2674 012b 756E7369 		.ascii	"unsigned int\000"
 2674      676E6564 
 2674      20696E74 
 2674      00
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 77


 2675              	.LASF53:
 2676 0138 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2676      5F436C65 
 2676      61725478 
 2676      42756666 
 2676      657200
 2677              	.LASF51:
 2678 014b 55415254 		.ascii	"UART_PutCRLF\000"
 2678      5F507574 
 2678      43524C46 
 2678      00
 2679              	.LASF5:
 2680 0158 6C6F6E67 		.ascii	"long unsigned int\000"
 2680      20756E73 
 2680      69676E65 
 2680      6420696E 
 2680      7400
 2681              	.LASF49:
 2682 016a 55415254 		.ascii	"UART_PutArray\000"
 2682      5F507574 
 2682      41727261 
 2682      7900
 2683              	.LASF66:
 2684 0178 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2684      74657243 
 2684      72697469 
 2684      63616C53 
 2684      65637469 
 2685              	.LASF33:
 2686 018f 73697A65 		.ascii	"size\000"
 2686      00
 2687              	.LASF3:
 2688 0194 73686F72 		.ascii	"short unsigned int\000"
 2688      7420756E 
 2688      7369676E 
 2688      65642069 
 2688      6E7400
 2689              	.LASF48:
 2690 01a7 62756649 		.ascii	"bufIndex\000"
 2690      6E646578 
 2690      00
 2691              	.LASF28:
 2692 01b0 696E7453 		.ascii	"intSrc\000"
 2692      726300
 2693              	.LASF58:
 2694 01b7 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2694      5F536574 
 2694      54784164 
 2694      64726573 
 2694      734D6F64 
 2695              	.LASF44:
 2696 01cd 55415254 		.ascii	"UART_ReadTxStatus\000"
 2696      5F526561 
 2696      64547853 
 2696      74617475 
 2696      7300
 2697              	.LASF59:
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 78


 2698 01df 55415254 		.ascii	"UART_IntClock_Start\000"
 2698      5F496E74 
 2698      436C6F63 
 2698      6B5F5374 
 2698      61727400 
 2699              	.LASF56:
 2700 01f3 746D7053 		.ascii	"tmpStat\000"
 2700      74617400 
 2701              	.LASF16:
 2702 01fb 73697A65 		.ascii	"sizetype\000"
 2702      74797065 
 2702      00
 2703              	.LASF38:
 2704 0204 61646472 		.ascii	"address\000"
 2704      65737300 
 2705              	.LASF37:
 2706 020c 55415254 		.ascii	"UART_SetRxAddress1\000"
 2706      5F536574 
 2706      52784164 
 2706      64726573 
 2706      733100
 2707              	.LASF39:
 2708 021f 55415254 		.ascii	"UART_SetRxAddress2\000"
 2708      5F536574 
 2708      52784164 
 2708      64726573 
 2708      733200
 2709              	.LASF63:
 2710 0232 443A5C45 		.ascii	"D:\\Eih3Cloud\\Projet Programme\\Module HF\\5\\Modu"
 2710      69683343 
 2710      6C6F7564 
 2710      5C50726F 
 2710      6A657420 
 2711 0260 6C652048 		.ascii	"le HF.cydsn\000"
 2711      462E6379 
 2711      64736E00 
 2712              	.LASF29:
 2713 026c 72785374 		.ascii	"rxStatus\000"
 2713      61747573 
 2713      00
 2714              	.LASF60:
 2715 0275 55415254 		.ascii	"UART_IntClock_Stop\000"
 2715      5F496E74 
 2715      436C6F63 
 2715      6B5F5374 
 2715      6F7000
 2716              	.LASF11:
 2717 0288 666C6F61 		.ascii	"float\000"
 2717      7400
 2718              	.LASF52:
 2719 028e 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2719      5F476574 
 2719      54784275 
 2719      66666572 
 2719      53697A65 
 2720              	.LASF15:
 2721 02a3 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 79


 2721      00
 2722              	.LASF35:
 2723 02a8 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2723      5F536574 
 2723      52784164 
 2723      64726573 
 2723      734D6F64 
 2724              	.LASF1:
 2725 02be 756E7369 		.ascii	"unsigned char\000"
 2725      676E6564 
 2725      20636861 
 2725      7200
 2726              	.LASF41:
 2727 02cc 55415254 		.ascii	"UART_WriteTxData\000"
 2727      5F577269 
 2727      74655478 
 2727      44617461 
 2727      00
 2728              	.LASF2:
 2729 02dd 73686F72 		.ascii	"short int\000"
 2729      7420696E 
 2729      7400
 2730              	.LASF54:
 2731 02e7 55415254 		.ascii	"UART_SendBreak\000"
 2731      5F53656E 
 2731      64427265 
 2731      616B00
 2732              	.LASF50:
 2733 02f6 62797465 		.ascii	"byteCount\000"
 2733      436F756E 
 2733      7400
 2734              	.LASF61:
 2735 0300 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2735      4320342E 
 2735      382E3420 
 2735      32303134 
 2735      30353236 
 2736 0333 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2736      20726576 
 2736      6973696F 
 2736      6E203231 
 2736      31333538 
 2737 0366 73202D66 		.ascii	"s -ffunction-sections\000"
 2737      66756E63 
 2737      74696F6E 
 2737      2D736563 
 2737      74696F6E 
 2738              	.LASF20:
 2739 037c 72784461 		.ascii	"rxData\000"
 2739      746100
 2740              	.LASF21:
 2741 0383 55415254 		.ascii	"UART_Enable\000"
 2741      5F456E61 
 2741      626C6500 
 2742              	.LASF17:
 2743 038f 55415254 		.ascii	"UART_ReadRxStatus\000"
 2743      5F526561 
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 80


 2743      64527853 
 2743      74617475 
 2743      7300
 2744              	.LASF14:
 2745 03a1 63686172 		.ascii	"char\000"
 2745      00
 2746              	.LASF13:
 2747 03a6 63686172 		.ascii	"char8\000"
 2747      3800
 2748              	.LASF26:
 2749 03ac 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2749      5F536574 
 2749      5278496E 
 2749      74657272 
 2749      7570744D 
 2750              	.LASF30:
 2751 03c4 55415254 		.ascii	"UART_GetChar\000"
 2751      5F476574 
 2751      43686172 
 2751      00
 2752              	.LASF24:
 2753 03d1 656E6162 		.ascii	"enableInterrupts\000"
 2753      6C65496E 
 2753      74657272 
 2753      75707473 
 2753      00
 2754              	.LASF65:
 2755 03e2 55415254 		.ascii	"UART_initVar\000"
 2755      5F696E69 
 2755      74566172 
 2755      00
 2756              	.LASF32:
 2757 03ef 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2757      5F476574 
 2757      52784275 
 2757      66666572 
 2757      53697A65 
 2758              	.LASF19:
 2759 0404 73746174 		.ascii	"status\000"
 2759      757300
 2760              	.LASF23:
 2761 040b 55415254 		.ascii	"UART_Stop\000"
 2761      5F53746F 
 2761      7000
 2762              	.LASF46:
 2763 0415 55415254 		.ascii	"UART_PutString\000"
 2763      5F507574 
 2763      53747269 
 2763      6E6700
 2764              	.LASF25:
 2765 0424 55415254 		.ascii	"UART_WriteControlRegister\000"
 2765      5F577269 
 2765      7465436F 
 2765      6E74726F 
 2765      6C526567 
 2766              	.LASF34:
 2767 043e 55415254 		.ascii	"UART_ClearRxBuffer\000"
ARM GAS  C:\Users\Eih3\AppData\Local\Temp\ccIHiPtp.s 			page 81


 2767      5F436C65 
 2767      61725278 
 2767      42756666 
 2767      657200
 2768              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
